"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
// Export members:
__exportStar(require("./provider"), exports);
__exportStar(require("./randomId"), exports);
__exportStar(require("./randomInteger"), exports);
__exportStar(require("./randomPassword"), exports);
__exportStar(require("./randomPet"), exports);
__exportStar(require("./randomShuffle"), exports);
__exportStar(require("./randomString"), exports);
__exportStar(require("./randomUuid"), exports);
// Import resources to register:
const randomId_1 = require("./randomId");
const randomInteger_1 = require("./randomInteger");
const randomPassword_1 = require("./randomPassword");
const randomPet_1 = require("./randomPet");
const randomShuffle_1 = require("./randomShuffle");
const randomString_1 = require("./randomString");
const randomUuid_1 = require("./randomUuid");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "random:index/randomId:RandomId":
                return new randomId_1.RandomId(name, undefined, { urn });
            case "random:index/randomInteger:RandomInteger":
                return new randomInteger_1.RandomInteger(name, undefined, { urn });
            case "random:index/randomPassword:RandomPassword":
                return new randomPassword_1.RandomPassword(name, undefined, { urn });
            case "random:index/randomPet:RandomPet":
                return new randomPet_1.RandomPet(name, undefined, { urn });
            case "random:index/randomShuffle:RandomShuffle":
                return new randomShuffle_1.RandomShuffle(name, undefined, { urn });
            case "random:index/randomString:RandomString":
                return new randomString_1.RandomString(name, undefined, { urn });
            case "random:index/randomUuid:RandomUuid":
                return new randomUuid_1.RandomUuid(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("random", "index/randomId", _module);
pulumi.runtime.registerResourceModule("random", "index/randomInteger", _module);
pulumi.runtime.registerResourceModule("random", "index/randomPassword", _module);
pulumi.runtime.registerResourceModule("random", "index/randomPet", _module);
pulumi.runtime.registerResourceModule("random", "index/randomShuffle", _module);
pulumi.runtime.registerResourceModule("random", "index/randomString", _module);
pulumi.runtime.registerResourceModule("random", "index/randomUuid", _module);
const provider_1 = require("./provider");
pulumi.runtime.registerResourcePackage("random", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:random") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new provider_1.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map