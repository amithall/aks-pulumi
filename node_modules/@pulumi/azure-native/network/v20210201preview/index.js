"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./adminRule"), exports);
__exportStar(require("./adminRuleCollection"), exports);
__exportStar(require("./connectivityConfiguration"), exports);
__exportStar(require("./defaultAdminRule"), exports);
__exportStar(require("./defaultUserRule"), exports);
__exportStar(require("./getAdminRule"), exports);
__exportStar(require("./getAdminRuleCollection"), exports);
__exportStar(require("./getConnectivityConfiguration"), exports);
__exportStar(require("./getDefaultAdminRule"), exports);
__exportStar(require("./getDefaultUserRule"), exports);
__exportStar(require("./getNetworkGroup"), exports);
__exportStar(require("./getNetworkManager"), exports);
__exportStar(require("./getNetworkSecurityPerimeter"), exports);
__exportStar(require("./getNspAccessRule"), exports);
__exportStar(require("./getNspAssociation"), exports);
__exportStar(require("./getNspProfile"), exports);
__exportStar(require("./getSecurityAdminConfiguration"), exports);
__exportStar(require("./getSecurityUserConfiguration"), exports);
__exportStar(require("./getUserRule"), exports);
__exportStar(require("./getUserRuleCollection"), exports);
__exportStar(require("./listActiveConnectivityConfiguration"), exports);
__exportStar(require("./listActiveSecurityAdminRule"), exports);
__exportStar(require("./listActiveSecurityUserRule"), exports);
__exportStar(require("./listEffectiveConnectivityConfiguration"), exports);
__exportStar(require("./listEffectiveVirtualNetworkByNetworkGroup"), exports);
__exportStar(require("./listEffectiveVirtualNetworkByNetworkManager"), exports);
__exportStar(require("./listNetworkManagerDeploymentStatus"), exports);
__exportStar(require("./listNetworkManagerEffectiveSecurityAdminRule"), exports);
__exportStar(require("./networkGroup"), exports);
__exportStar(require("./networkManager"), exports);
__exportStar(require("./networkSecurityPerimeter"), exports);
__exportStar(require("./nspAccessRule"), exports);
__exportStar(require("./nspAssociation"), exports);
__exportStar(require("./nspProfile"), exports);
__exportStar(require("./securityAdminConfiguration"), exports);
__exportStar(require("./securityUserConfiguration"), exports);
__exportStar(require("./userRule"), exports);
__exportStar(require("./userRuleCollection"), exports);
// Export enums:
__exportStar(require("../../types/enums/network/v20210201preview"), exports);
// Import resources to register:
const adminRule_1 = require("./adminRule");
const adminRuleCollection_1 = require("./adminRuleCollection");
const connectivityConfiguration_1 = require("./connectivityConfiguration");
const defaultAdminRule_1 = require("./defaultAdminRule");
const defaultUserRule_1 = require("./defaultUserRule");
const networkGroup_1 = require("./networkGroup");
const networkManager_1 = require("./networkManager");
const networkSecurityPerimeter_1 = require("./networkSecurityPerimeter");
const nspAccessRule_1 = require("./nspAccessRule");
const nspAssociation_1 = require("./nspAssociation");
const nspProfile_1 = require("./nspProfile");
const securityAdminConfiguration_1 = require("./securityAdminConfiguration");
const securityUserConfiguration_1 = require("./securityUserConfiguration");
const userRule_1 = require("./userRule");
const userRuleCollection_1 = require("./userRuleCollection");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:network/v20210201preview:AdminRule":
                return new adminRule_1.AdminRule(name, undefined, { urn });
            case "azure-native:network/v20210201preview:AdminRuleCollection":
                return new adminRuleCollection_1.AdminRuleCollection(name, undefined, { urn });
            case "azure-native:network/v20210201preview:ConnectivityConfiguration":
                return new connectivityConfiguration_1.ConnectivityConfiguration(name, undefined, { urn });
            case "azure-native:network/v20210201preview:DefaultAdminRule":
                return new defaultAdminRule_1.DefaultAdminRule(name, undefined, { urn });
            case "azure-native:network/v20210201preview:DefaultUserRule":
                return new defaultUserRule_1.DefaultUserRule(name, undefined, { urn });
            case "azure-native:network/v20210201preview:NetworkGroup":
                return new networkGroup_1.NetworkGroup(name, undefined, { urn });
            case "azure-native:network/v20210201preview:NetworkManager":
                return new networkManager_1.NetworkManager(name, undefined, { urn });
            case "azure-native:network/v20210201preview:NetworkSecurityPerimeter":
                return new networkSecurityPerimeter_1.NetworkSecurityPerimeter(name, undefined, { urn });
            case "azure-native:network/v20210201preview:NspAccessRule":
                return new nspAccessRule_1.NspAccessRule(name, undefined, { urn });
            case "azure-native:network/v20210201preview:NspAssociation":
                return new nspAssociation_1.NspAssociation(name, undefined, { urn });
            case "azure-native:network/v20210201preview:NspProfile":
                return new nspProfile_1.NspProfile(name, undefined, { urn });
            case "azure-native:network/v20210201preview:SecurityAdminConfiguration":
                return new securityAdminConfiguration_1.SecurityAdminConfiguration(name, undefined, { urn });
            case "azure-native:network/v20210201preview:SecurityUserConfiguration":
                return new securityUserConfiguration_1.SecurityUserConfiguration(name, undefined, { urn });
            case "azure-native:network/v20210201preview:UserRule":
                return new userRule_1.UserRule(name, undefined, { urn });
            case "azure-native:network/v20210201preview:UserRuleCollection":
                return new userRuleCollection_1.UserRuleCollection(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "network/v20210201preview", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9uZXR3b3JrL3YyMDIxMDIwMXByZXZpZXcvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHdFQUF3RTtBQUN4RSxpRkFBaUY7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUU3QyxrQkFBa0I7QUFDbEIsOENBQTRCO0FBQzVCLHdEQUFzQztBQUN0Qyw4REFBNEM7QUFDNUMscURBQW1DO0FBQ25DLG9EQUFrQztBQUNsQyxpREFBK0I7QUFDL0IsMkRBQXlDO0FBQ3pDLGlFQUErQztBQUMvQyx3REFBc0M7QUFDdEMsdURBQXFDO0FBQ3JDLG9EQUFrQztBQUNsQyxzREFBb0M7QUFDcEMsZ0VBQThDO0FBQzlDLHFEQUFtQztBQUNuQyxzREFBb0M7QUFDcEMsa0RBQWdDO0FBQ2hDLGtFQUFnRDtBQUNoRCxpRUFBK0M7QUFDL0MsZ0RBQThCO0FBQzlCLDBEQUF3QztBQUN4Qyx3RUFBc0Q7QUFDdEQsZ0VBQThDO0FBQzlDLCtEQUE2QztBQUM3QywyRUFBeUQ7QUFDekQsOEVBQTREO0FBQzVELGdGQUE4RDtBQUM5RCx1RUFBcUQ7QUFDckQsaUZBQStEO0FBQy9ELGlEQUErQjtBQUMvQixtREFBaUM7QUFDakMsNkRBQTJDO0FBQzNDLGtEQUFnQztBQUNoQyxtREFBaUM7QUFDakMsK0NBQTZCO0FBQzdCLCtEQUE2QztBQUM3Qyw4REFBNEM7QUFDNUMsNkNBQTJCO0FBQzNCLHVEQUFxQztBQUVyQyxnQkFBZ0I7QUFDaEIsNkVBQTJEO0FBRTNELGdDQUFnQztBQUNoQywyQ0FBd0M7QUFDeEMsK0RBQTREO0FBQzVELDJFQUF3RTtBQUN4RSx5REFBc0Q7QUFDdEQsdURBQW9EO0FBQ3BELGlEQUE4QztBQUM5QyxxREFBa0Q7QUFDbEQseUVBQXNFO0FBQ3RFLG1EQUFnRDtBQUNoRCxxREFBa0Q7QUFDbEQsNkNBQTBDO0FBQzFDLDZFQUEwRTtBQUMx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