import * as pulumi from "@pulumi/pulumi";
/**
 * Describes the list of all possible values for a specific filter value
 */
export declare function listFirewallPolicyIdpsSignaturesFilterValue(args: ListFirewallPolicyIdpsSignaturesFilterValueArgs, opts?: pulumi.InvokeOptions): Promise<ListFirewallPolicyIdpsSignaturesFilterValueResult>;
export interface ListFirewallPolicyIdpsSignaturesFilterValueArgs {
    /**
     * Describes the name of the column which values will be returned
     */
    filterName?: string;
    /**
     * The name of the Firewall Policy.
     */
    firewallPolicyName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * Describes the list of all possible values for a specific filter value
 */
export interface ListFirewallPolicyIdpsSignaturesFilterValueResult {
    /**
     * Describes the possible values
     */
    readonly filterValues?: string[];
}
export declare function listFirewallPolicyIdpsSignaturesFilterValueOutput(args: ListFirewallPolicyIdpsSignaturesFilterValueOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ListFirewallPolicyIdpsSignaturesFilterValueResult>;
export interface ListFirewallPolicyIdpsSignaturesFilterValueOutputArgs {
    /**
     * Describes the name of the column which values will be returned
     */
    filterName?: pulumi.Input<string>;
    /**
     * The name of the Firewall Policy.
     */
    firewallPolicyName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
