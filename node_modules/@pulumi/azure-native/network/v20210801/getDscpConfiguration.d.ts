import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Differentiated Services Code Point configuration for any given network interface
 */
export declare function getDscpConfiguration(args: GetDscpConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetDscpConfigurationResult>;
export interface GetDscpConfigurationArgs {
    /**
     * The name of the resource.
     */
    dscpConfigurationName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * Differentiated Services Code Point configuration for any given network interface
 */
export interface GetDscpConfigurationResult {
    /**
     * Associated Network Interfaces to the DSCP Configuration.
     */
    readonly associatedNetworkInterfaces: outputs.network.v20210801.NetworkInterfaceResponse[];
    /**
     * Destination IP ranges.
     */
    readonly destinationIpRanges?: outputs.network.v20210801.QosIpRangeResponse[];
    /**
     * Destination port ranges.
     */
    readonly destinationPortRanges?: outputs.network.v20210801.QosPortRangeResponse[];
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: string;
    /**
     * Resource ID.
     */
    readonly id?: string;
    /**
     * Resource location.
     */
    readonly location?: string;
    /**
     * List of markings to be used in the configuration.
     */
    readonly markings?: number[];
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * RNM supported protocol types.
     */
    readonly protocol?: string;
    /**
     * The provisioning state of the DSCP Configuration resource.
     */
    readonly provisioningState: string;
    /**
     * Qos Collection ID generated by RNM.
     */
    readonly qosCollectionId: string;
    /**
     * QoS object definitions
     */
    readonly qosDefinitionCollection?: outputs.network.v20210801.QosDefinitionResponse[];
    /**
     * The resource GUID property of the DSCP Configuration resource.
     */
    readonly resourceGuid: string;
    /**
     * Source IP ranges.
     */
    readonly sourceIpRanges?: outputs.network.v20210801.QosIpRangeResponse[];
    /**
     * Sources port ranges.
     */
    readonly sourcePortRanges?: outputs.network.v20210801.QosPortRangeResponse[];
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type.
     */
    readonly type: string;
}
export declare function getDscpConfigurationOutput(args: GetDscpConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDscpConfigurationResult>;
export interface GetDscpConfigurationOutputArgs {
    /**
     * The name of the resource.
     */
    dscpConfigurationName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
