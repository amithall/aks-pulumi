"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./adminRule"), exports);
__exportStar(require("./adminRuleCollection"), exports);
__exportStar(require("./connectivityConfiguration"), exports);
__exportStar(require("./defaultAdminRule"), exports);
__exportStar(require("./defaultUserRule"), exports);
__exportStar(require("./getAdminRule"), exports);
__exportStar(require("./getAdminRuleCollection"), exports);
__exportStar(require("./getConnectivityConfiguration"), exports);
__exportStar(require("./getDefaultAdminRule"), exports);
__exportStar(require("./getDefaultUserRule"), exports);
__exportStar(require("./getManagementGroupNetworkManagerConnection"), exports);
__exportStar(require("./getNetworkGroup"), exports);
__exportStar(require("./getNetworkManager"), exports);
__exportStar(require("./getScopeConnection"), exports);
__exportStar(require("./getSecurityAdminConfiguration"), exports);
__exportStar(require("./getSecurityUserConfiguration"), exports);
__exportStar(require("./getStaticMember"), exports);
__exportStar(require("./getSubscriptionNetworkManagerConnection"), exports);
__exportStar(require("./getUserRule"), exports);
__exportStar(require("./getUserRuleCollection"), exports);
__exportStar(require("./listActiveConnectivityConfigurations"), exports);
__exportStar(require("./listActiveSecurityAdminRules"), exports);
__exportStar(require("./listActiveSecurityUserRules"), exports);
__exportStar(require("./listEffectiveVirtualNetworkByNetworkManager"), exports);
__exportStar(require("./listListEffectiveVirtualNetworkByNetworkGroup"), exports);
__exportStar(require("./listNetworkManagerDeploymentStatus"), exports);
__exportStar(require("./listNetworkManagerEffectiveConnectivityConfigurations"), exports);
__exportStar(require("./listNetworkManagerEffectiveSecurityAdminRules"), exports);
__exportStar(require("./managementGroupNetworkManagerConnection"), exports);
__exportStar(require("./networkGroup"), exports);
__exportStar(require("./networkManager"), exports);
__exportStar(require("./scopeConnection"), exports);
__exportStar(require("./securityAdminConfiguration"), exports);
__exportStar(require("./securityUserConfiguration"), exports);
__exportStar(require("./staticMember"), exports);
__exportStar(require("./subscriptionNetworkManagerConnection"), exports);
__exportStar(require("./userRule"), exports);
__exportStar(require("./userRuleCollection"), exports);
// Export enums:
__exportStar(require("../../types/enums/network/v20220201preview"), exports);
// Import resources to register:
const adminRule_1 = require("./adminRule");
const adminRuleCollection_1 = require("./adminRuleCollection");
const connectivityConfiguration_1 = require("./connectivityConfiguration");
const defaultAdminRule_1 = require("./defaultAdminRule");
const defaultUserRule_1 = require("./defaultUserRule");
const managementGroupNetworkManagerConnection_1 = require("./managementGroupNetworkManagerConnection");
const networkGroup_1 = require("./networkGroup");
const networkManager_1 = require("./networkManager");
const scopeConnection_1 = require("./scopeConnection");
const securityAdminConfiguration_1 = require("./securityAdminConfiguration");
const securityUserConfiguration_1 = require("./securityUserConfiguration");
const staticMember_1 = require("./staticMember");
const subscriptionNetworkManagerConnection_1 = require("./subscriptionNetworkManagerConnection");
const userRule_1 = require("./userRule");
const userRuleCollection_1 = require("./userRuleCollection");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:network/v20220201preview:AdminRule":
                return new adminRule_1.AdminRule(name, undefined, { urn });
            case "azure-native:network/v20220201preview:AdminRuleCollection":
                return new adminRuleCollection_1.AdminRuleCollection(name, undefined, { urn });
            case "azure-native:network/v20220201preview:ConnectivityConfiguration":
                return new connectivityConfiguration_1.ConnectivityConfiguration(name, undefined, { urn });
            case "azure-native:network/v20220201preview:DefaultAdminRule":
                return new defaultAdminRule_1.DefaultAdminRule(name, undefined, { urn });
            case "azure-native:network/v20220201preview:DefaultUserRule":
                return new defaultUserRule_1.DefaultUserRule(name, undefined, { urn });
            case "azure-native:network/v20220201preview:ManagementGroupNetworkManagerConnection":
                return new managementGroupNetworkManagerConnection_1.ManagementGroupNetworkManagerConnection(name, undefined, { urn });
            case "azure-native:network/v20220201preview:NetworkGroup":
                return new networkGroup_1.NetworkGroup(name, undefined, { urn });
            case "azure-native:network/v20220201preview:NetworkManager":
                return new networkManager_1.NetworkManager(name, undefined, { urn });
            case "azure-native:network/v20220201preview:ScopeConnection":
                return new scopeConnection_1.ScopeConnection(name, undefined, { urn });
            case "azure-native:network/v20220201preview:SecurityAdminConfiguration":
                return new securityAdminConfiguration_1.SecurityAdminConfiguration(name, undefined, { urn });
            case "azure-native:network/v20220201preview:SecurityUserConfiguration":
                return new securityUserConfiguration_1.SecurityUserConfiguration(name, undefined, { urn });
            case "azure-native:network/v20220201preview:StaticMember":
                return new staticMember_1.StaticMember(name, undefined, { urn });
            case "azure-native:network/v20220201preview:SubscriptionNetworkManagerConnection":
                return new subscriptionNetworkManagerConnection_1.SubscriptionNetworkManagerConnection(name, undefined, { urn });
            case "azure-native:network/v20220201preview:UserRule":
                return new userRule_1.UserRule(name, undefined, { urn });
            case "azure-native:network/v20220201preview:UserRuleCollection":
                return new userRuleCollection_1.UserRuleCollection(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "network/v20220201preview", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9uZXR3b3JrL3YyMDIyMDIwMXByZXZpZXcvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHdFQUF3RTtBQUN4RSxpRkFBaUY7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUU3QyxrQkFBa0I7QUFDbEIsOENBQTRCO0FBQzVCLHdEQUFzQztBQUN0Qyw4REFBNEM7QUFDNUMscURBQW1DO0FBQ25DLG9EQUFrQztBQUNsQyxpREFBK0I7QUFDL0IsMkRBQXlDO0FBQ3pDLGlFQUErQztBQUMvQyx3REFBc0M7QUFDdEMsdURBQXFDO0FBQ3JDLCtFQUE2RDtBQUM3RCxvREFBa0M7QUFDbEMsc0RBQW9DO0FBQ3BDLHVEQUFxQztBQUNyQyxrRUFBZ0Q7QUFDaEQsaUVBQStDO0FBQy9DLG9EQUFrQztBQUNsQyw0RUFBMEQ7QUFDMUQsZ0RBQThCO0FBQzlCLDBEQUF3QztBQUN4Qyx5RUFBdUQ7QUFDdkQsaUVBQStDO0FBQy9DLGdFQUE4QztBQUM5QyxnRkFBOEQ7QUFDOUQsa0ZBQWdFO0FBQ2hFLHVFQUFxRDtBQUNyRCwwRkFBd0U7QUFDeEUsa0ZBQWdFO0FBQ2hFLDRFQUEwRDtBQUMxRCxpREFBK0I7QUFDL0IsbURBQWlDO0FBQ2pDLG9EQUFrQztBQUNsQywrREFBNkM7QUFDN0MsOERBQTRDO0FBQzVDLGlEQUErQjtBQUMvQix5RUFBdUQ7QUFDdkQsNkNBQTJCO0FBQzNCLHVEQUFxQztBQUVyQyxnQkFBZ0I7QUFDaEIsNkVBQTJEO0FBRTNELGdDQUFnQztBQUNoQywyQ0FBd0M7QUFDeEMsK0RBQTREO0FBQzVELDJFQUF3RTtBQUN4RSx5REFBc0Q7QUFDdEQsdURBQW9EO0FBQ3BELHVHQUFvRztBQUNwRyxpREFBOEM7QUFDOUMscURBQWtEO0FBQ2xELHVEQUFvRDtBQUNwRCw2RUFBMEU7QUFDMUUsMkVBQXdFO0FBQ3hFLGlEQUE4QztBQUM5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