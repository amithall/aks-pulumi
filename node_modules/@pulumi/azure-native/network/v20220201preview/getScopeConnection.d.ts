import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * The Scope Connections resource
 */
export declare function getScopeConnection(args: GetScopeConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetScopeConnectionResult>;
export interface GetScopeConnectionArgs {
    /**
     * The name of the network manager.
     */
    networkManagerName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
    /**
     * Name for the cross-tenant connection.
     */
    scopeConnectionName: string;
}
/**
 * The Scope Connections resource
 */
export interface GetScopeConnectionResult {
    /**
     * A description of the scope connection.
     */
    readonly description?: string;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: string;
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Resource ID.
     */
    readonly resourceId?: string;
    /**
     * The system metadata related to this resource.
     */
    readonly systemData: outputs.network.v20220201preview.SystemDataResponse;
    /**
     * Tenant ID.
     */
    readonly tenantId?: string;
    /**
     * Resource type.
     */
    readonly type: string;
}
export declare function getScopeConnectionOutput(args: GetScopeConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScopeConnectionResult>;
export interface GetScopeConnectionOutputArgs {
    /**
     * The name of the network manager.
     */
    networkManagerName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name for the cross-tenant connection.
     */
    scopeConnectionName: pulumi.Input<string>;
}
