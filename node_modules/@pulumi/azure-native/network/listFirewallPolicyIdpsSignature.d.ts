import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Query result
 * API Version: 2021-08-01.
 */
export declare function listFirewallPolicyIdpsSignature(args: ListFirewallPolicyIdpsSignatureArgs, opts?: pulumi.InvokeOptions): Promise<ListFirewallPolicyIdpsSignatureResult>;
export interface ListFirewallPolicyIdpsSignatureArgs {
    /**
     * Contain all filters names and values
     */
    filters?: inputs.network.FilterItems[];
    /**
     * The name of the Firewall Policy.
     */
    firewallPolicyName: string;
    /**
     * Column to sort response by
     */
    orderBy?: inputs.network.OrderBy;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
    /**
     * The number of the results to return in each page
     */
    resultsPerPage?: number;
    /**
     * Search term in all columns
     */
    search?: string;
    /**
     * The number of records matching the filter to skip
     */
    skip?: number;
}
/**
 * Query result
 */
export interface ListFirewallPolicyIdpsSignatureResult {
    /**
     * Number of total records matching the query.
     */
    readonly matchingRecordsCount?: number;
    /**
     * Array containing the results of the query
     */
    readonly signatures?: outputs.network.SingleQueryResultResponse[];
}
export declare function listFirewallPolicyIdpsSignatureOutput(args: ListFirewallPolicyIdpsSignatureOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ListFirewallPolicyIdpsSignatureResult>;
export interface ListFirewallPolicyIdpsSignatureOutputArgs {
    /**
     * Contain all filters names and values
     */
    filters?: pulumi.Input<pulumi.Input<inputs.network.FilterItemsArgs>[]>;
    /**
     * The name of the Firewall Policy.
     */
    firewallPolicyName: pulumi.Input<string>;
    /**
     * Column to sort response by
     */
    orderBy?: pulumi.Input<inputs.network.OrderByArgs>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The number of the results to return in each page
     */
    resultsPerPage?: pulumi.Input<number>;
    /**
     * Search term in all columns
     */
    search?: pulumi.Input<string>;
    /**
     * The number of records matching the filter to skip
     */
    skip?: pulumi.Input<number>;
}
