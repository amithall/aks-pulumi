"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listEffectiveVirtualNetworkByNetworkManagerOutput = exports.listEffectiveVirtualNetworkByNetworkManager = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Result of the request to list Effective Virtual Network. It contains a list of groups and a URL link to get the next set of results.
 */
function listEffectiveVirtualNetworkByNetworkManager(args, opts) {
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:network/v20210501preview:listEffectiveVirtualNetworkByNetworkManager", {
        "conditionalMembers": args.conditionalMembers,
        "networkManagerName": args.networkManagerName,
        "resourceGroupName": args.resourceGroupName,
        "skipToken": args.skipToken,
        "top": args.top,
    }, opts);
}
exports.listEffectiveVirtualNetworkByNetworkManager = listEffectiveVirtualNetworkByNetworkManager;
function listEffectiveVirtualNetworkByNetworkManagerOutput(args, opts) {
    return pulumi.output(args).apply(a => listEffectiveVirtualNetworkByNetworkManager(a, opts));
}
exports.listEffectiveVirtualNetworkByNetworkManagerOutput = listEffectiveVirtualNetworkByNetworkManagerOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdEVmZmVjdGl2ZVZpcnR1YWxOZXR3b3JrQnlOZXR3b3JrTWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25ldHdvcmsvdjIwMjEwNTAxcHJldmlldy9saXN0RWZmZWN0aXZlVmlydHVhbE5ldHdvcmtCeU5ldHdvcmtNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSx3RUFBd0U7QUFDeEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBRXpDLDZDQUE2QztBQUU3Qzs7R0FFRztBQUNILFNBQWdCLDJDQUEyQyxDQUFDLElBQXFELEVBQUUsSUFBMkI7SUFDMUksSUFBSSxDQUFDLElBQUksRUFBRTtRQUNQLElBQUksR0FBRyxFQUFFLENBQUE7S0FDWjtJQUVELElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ25FLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsbUZBQW1GLEVBQUU7UUFDOUcsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLGtCQUFrQjtRQUM3QyxvQkFBb0IsRUFBRSxJQUFJLENBQUMsa0JBQWtCO1FBQzdDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTO1FBQzNCLEtBQUssRUFBRSxJQUFJLENBQUMsR0FBRztLQUNsQixFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQWJELGtHQWFDO0FBdUNELFNBQWdCLGlEQUFpRCxDQUFDLElBQTJELEVBQUUsSUFBMkI7SUFDdEosT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLDJDQUEyQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO0FBQy9GLENBQUM7QUFGRCw4R0FFQyJ9