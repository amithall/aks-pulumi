"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./applicationGateway"), exports);
__exportStar(require("./applicationSecurityGroup"), exports);
__exportStar(require("./connectionMonitor"), exports);
__exportStar(require("./expressRouteCircuit"), exports);
__exportStar(require("./expressRouteCircuitAuthorization"), exports);
__exportStar(require("./expressRouteCircuitPeering"), exports);
__exportStar(require("./getApplicationGateway"), exports);
__exportStar(require("./getApplicationSecurityGroup"), exports);
__exportStar(require("./getConnectionMonitor"), exports);
__exportStar(require("./getExpressRouteCircuit"), exports);
__exportStar(require("./getExpressRouteCircuitAuthorization"), exports);
__exportStar(require("./getExpressRouteCircuitPeering"), exports);
__exportStar(require("./getInboundNatRule"), exports);
__exportStar(require("./getLoadBalancer"), exports);
__exportStar(require("./getLocalNetworkGateway"), exports);
__exportStar(require("./getNetworkInterface"), exports);
__exportStar(require("./getNetworkSecurityGroup"), exports);
__exportStar(require("./getNetworkWatcher"), exports);
__exportStar(require("./getPacketCapture"), exports);
__exportStar(require("./getPublicIPAddress"), exports);
__exportStar(require("./getRoute"), exports);
__exportStar(require("./getRouteFilter"), exports);
__exportStar(require("./getRouteFilterRule"), exports);
__exportStar(require("./getRouteTable"), exports);
__exportStar(require("./getSecurityRule"), exports);
__exportStar(require("./getSubnet"), exports);
__exportStar(require("./getVirtualNetwork"), exports);
__exportStar(require("./getVirtualNetworkGateway"), exports);
__exportStar(require("./getVirtualNetworkGatewayAdvertisedRoutes"), exports);
__exportStar(require("./getVirtualNetworkGatewayBgpPeerStatus"), exports);
__exportStar(require("./getVirtualNetworkGatewayConnection"), exports);
__exportStar(require("./getVirtualNetworkGatewayLearnedRoutes"), exports);
__exportStar(require("./getVirtualNetworkPeering"), exports);
__exportStar(require("./inboundNatRule"), exports);
__exportStar(require("./loadBalancer"), exports);
__exportStar(require("./localNetworkGateway"), exports);
__exportStar(require("./networkInterface"), exports);
__exportStar(require("./networkSecurityGroup"), exports);
__exportStar(require("./networkWatcher"), exports);
__exportStar(require("./packetCapture"), exports);
__exportStar(require("./publicIPAddress"), exports);
__exportStar(require("./route"), exports);
__exportStar(require("./routeFilter"), exports);
__exportStar(require("./routeFilterRule"), exports);
__exportStar(require("./routeTable"), exports);
__exportStar(require("./securityRule"), exports);
__exportStar(require("./subnet"), exports);
__exportStar(require("./virtualNetwork"), exports);
__exportStar(require("./virtualNetworkGateway"), exports);
__exportStar(require("./virtualNetworkGatewayConnection"), exports);
__exportStar(require("./virtualNetworkPeering"), exports);
// Export enums:
__exportStar(require("../../types/enums/network/v20180101"), exports);
// Import resources to register:
const applicationGateway_1 = require("./applicationGateway");
const applicationSecurityGroup_1 = require("./applicationSecurityGroup");
const connectionMonitor_1 = require("./connectionMonitor");
const expressRouteCircuit_1 = require("./expressRouteCircuit");
const expressRouteCircuitAuthorization_1 = require("./expressRouteCircuitAuthorization");
const expressRouteCircuitPeering_1 = require("./expressRouteCircuitPeering");
const inboundNatRule_1 = require("./inboundNatRule");
const loadBalancer_1 = require("./loadBalancer");
const localNetworkGateway_1 = require("./localNetworkGateway");
const networkInterface_1 = require("./networkInterface");
const networkSecurityGroup_1 = require("./networkSecurityGroup");
const networkWatcher_1 = require("./networkWatcher");
const packetCapture_1 = require("./packetCapture");
const publicIPAddress_1 = require("./publicIPAddress");
const route_1 = require("./route");
const routeFilter_1 = require("./routeFilter");
const routeFilterRule_1 = require("./routeFilterRule");
const routeTable_1 = require("./routeTable");
const securityRule_1 = require("./securityRule");
const subnet_1 = require("./subnet");
const virtualNetwork_1 = require("./virtualNetwork");
const virtualNetworkGateway_1 = require("./virtualNetworkGateway");
const virtualNetworkGatewayConnection_1 = require("./virtualNetworkGatewayConnection");
const virtualNetworkPeering_1 = require("./virtualNetworkPeering");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:network/v20180101:ApplicationGateway":
                return new applicationGateway_1.ApplicationGateway(name, undefined, { urn });
            case "azure-native:network/v20180101:ApplicationSecurityGroup":
                return new applicationSecurityGroup_1.ApplicationSecurityGroup(name, undefined, { urn });
            case "azure-native:network/v20180101:ConnectionMonitor":
                return new connectionMonitor_1.ConnectionMonitor(name, undefined, { urn });
            case "azure-native:network/v20180101:ExpressRouteCircuit":
                return new expressRouteCircuit_1.ExpressRouteCircuit(name, undefined, { urn });
            case "azure-native:network/v20180101:ExpressRouteCircuitAuthorization":
                return new expressRouteCircuitAuthorization_1.ExpressRouteCircuitAuthorization(name, undefined, { urn });
            case "azure-native:network/v20180101:ExpressRouteCircuitPeering":
                return new expressRouteCircuitPeering_1.ExpressRouteCircuitPeering(name, undefined, { urn });
            case "azure-native:network/v20180101:InboundNatRule":
                return new inboundNatRule_1.InboundNatRule(name, undefined, { urn });
            case "azure-native:network/v20180101:LoadBalancer":
                return new loadBalancer_1.LoadBalancer(name, undefined, { urn });
            case "azure-native:network/v20180101:LocalNetworkGateway":
                return new localNetworkGateway_1.LocalNetworkGateway(name, undefined, { urn });
            case "azure-native:network/v20180101:NetworkInterface":
                return new networkInterface_1.NetworkInterface(name, undefined, { urn });
            case "azure-native:network/v20180101:NetworkSecurityGroup":
                return new networkSecurityGroup_1.NetworkSecurityGroup(name, undefined, { urn });
            case "azure-native:network/v20180101:NetworkWatcher":
                return new networkWatcher_1.NetworkWatcher(name, undefined, { urn });
            case "azure-native:network/v20180101:PacketCapture":
                return new packetCapture_1.PacketCapture(name, undefined, { urn });
            case "azure-native:network/v20180101:PublicIPAddress":
                return new publicIPAddress_1.PublicIPAddress(name, undefined, { urn });
            case "azure-native:network/v20180101:Route":
                return new route_1.Route(name, undefined, { urn });
            case "azure-native:network/v20180101:RouteFilter":
                return new routeFilter_1.RouteFilter(name, undefined, { urn });
            case "azure-native:network/v20180101:RouteFilterRule":
                return new routeFilterRule_1.RouteFilterRule(name, undefined, { urn });
            case "azure-native:network/v20180101:RouteTable":
                return new routeTable_1.RouteTable(name, undefined, { urn });
            case "azure-native:network/v20180101:SecurityRule":
                return new securityRule_1.SecurityRule(name, undefined, { urn });
            case "azure-native:network/v20180101:Subnet":
                return new subnet_1.Subnet(name, undefined, { urn });
            case "azure-native:network/v20180101:VirtualNetwork":
                return new virtualNetwork_1.VirtualNetwork(name, undefined, { urn });
            case "azure-native:network/v20180101:VirtualNetworkGateway":
                return new virtualNetworkGateway_1.VirtualNetworkGateway(name, undefined, { urn });
            case "azure-native:network/v20180101:VirtualNetworkGatewayConnection":
                return new virtualNetworkGatewayConnection_1.VirtualNetworkGatewayConnection(name, undefined, { urn });
            case "azure-native:network/v20180101:VirtualNetworkPeering":
                return new virtualNetworkPeering_1.VirtualNetworkPeering(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "network/v20180101", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9uZXR3b3JrL3YyMDE4MDEwMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0VBQXdFO0FBQ3hFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBRTdDLGtCQUFrQjtBQUNsQix1REFBcUM7QUFDckMsNkRBQTJDO0FBQzNDLHNEQUFvQztBQUNwQyx3REFBc0M7QUFDdEMscUVBQW1EO0FBQ25ELCtEQUE2QztBQUM3QywwREFBd0M7QUFDeEMsZ0VBQThDO0FBQzlDLHlEQUF1QztBQUN2QywyREFBeUM7QUFDekMsd0VBQXNEO0FBQ3RELGtFQUFnRDtBQUNoRCxzREFBb0M7QUFDcEMsb0RBQWtDO0FBQ2xDLDJEQUF5QztBQUN6Qyx3REFBc0M7QUFDdEMsNERBQTBDO0FBQzFDLHNEQUFvQztBQUNwQyxxREFBbUM7QUFDbkMsdURBQXFDO0FBQ3JDLDZDQUEyQjtBQUMzQixtREFBaUM7QUFDakMsdURBQXFDO0FBQ3JDLGtEQUFnQztBQUNoQyxvREFBa0M7QUFDbEMsOENBQTRCO0FBQzVCLHNEQUFvQztBQUNwQyw2REFBMkM7QUFDM0MsNkVBQTJEO0FBQzNELDBFQUF3RDtBQUN4RCx1RUFBcUQ7QUFDckQsMEVBQXdEO0FBQ3hELDZEQUEyQztBQUMzQyxtREFBaUM7QUFDakMsaURBQStCO0FBQy9CLHdEQUFzQztBQUN0QyxxREFBbUM7QUFDbkMseURBQXVDO0FBQ3ZDLG1EQUFpQztBQUNqQyxrREFBZ0M7QUFDaEMsb0RBQWtDO0FBQ2xDLDBDQUF3QjtBQUN4QixnREFBOEI7QUFDOUIsb0RBQWtDO0FBQ2xDLCtDQUE2QjtBQUM3QixpREFBK0I7QUFDL0IsMkNBQXlCO0FBQ3pCLG1EQUFpQztBQUNqQywwREFBd0M7QUFDeEMsb0VBQWtEO0FBQ2xELDBEQUF3QztBQUV4QyxnQkFBZ0I7QUFDaEIsc0VBQW9EO0FBRXBELGdDQUFn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