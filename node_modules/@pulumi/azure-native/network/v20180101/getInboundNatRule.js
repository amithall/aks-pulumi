"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getInboundNatRuleOutput = exports.getInboundNatRule = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Inbound NAT rule of the load balancer.
 */
/** @deprecated Version v20180101 will be removed in the next major version of the provider. Upgrade to version v20180501 or later. */
function getInboundNatRule(args, opts) {
    pulumi.log.warn("getInboundNatRule is deprecated: Version v20180101 will be removed in the next major version of the provider. Upgrade to version v20180501 or later.");
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:network/v20180101:getInboundNatRule", {
        "expand": args.expand,
        "inboundNatRuleName": args.inboundNatRuleName,
        "loadBalancerName": args.loadBalancerName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getInboundNatRule = getInboundNatRule;
function getInboundNatRuleOutput(args, opts) {
    return pulumi.output(args).apply(a => getInboundNatRule(a, opts));
}
exports.getInboundNatRuleOutput = getInboundNatRuleOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0SW5ib3VuZE5hdFJ1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9uZXR3b3JrL3YyMDE4MDEwMS9nZXRJbmJvdW5kTmF0UnVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0VBQXdFO0FBQ3hFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUV6Qyw2Q0FBNkM7QUFFN0M7O0dBRUc7QUFDSCxzSUFBc0k7QUFDdEksU0FBZ0IsaUJBQWlCLENBQUMsSUFBMkIsRUFBRSxJQUEyQjtJQUN0RixNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxzSkFBc0osQ0FBQyxDQUFBO0lBQ3ZLLElBQUksQ0FBQyxJQUFJLEVBQUU7UUFDUCxJQUFJLEdBQUcsRUFBRSxDQUFBO0tBQ1o7SUFFRCxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNuRSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLGtEQUFrRCxFQUFFO1FBQzdFLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTTtRQUNyQixvQkFBb0IsRUFBRSxJQUFJLENBQUMsa0JBQWtCO1FBQzdDLGtCQUFrQixFQUFFLElBQUksQ0FBQyxnQkFBZ0I7UUFDekMsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtLQUM5QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQWJELDhDQWFDO0FBdUVELFNBQWdCLHVCQUF1QixDQUFDLElBQWlDLEVBQUUsSUFBMkI7SUFDbEcsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLGlCQUFpQixDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO0FBQ3JFLENBQUM7QUFGRCwwREFFQyJ9