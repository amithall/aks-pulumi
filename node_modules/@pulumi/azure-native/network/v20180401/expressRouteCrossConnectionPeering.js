"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExpressRouteCrossConnectionPeering = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Peering in an ExpressRoute Cross Connection resource.
 *
 * @deprecated Version v20180401 will be removed in the next major version of the provider. Upgrade to version v20180501 or later.
 */
class ExpressRouteCrossConnectionPeering extends pulumi.CustomResource {
    /**
     * Create a ExpressRouteCrossConnectionPeering resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version v20180401 will be removed in the next major version of the provider. Upgrade to version v20180501 or later. */
    constructor(name, args, opts) {
        pulumi.log.warn("ExpressRouteCrossConnectionPeering is deprecated: Version v20180401 will be removed in the next major version of the provider. Upgrade to version v20180501 or later.");
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.crossConnectionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'crossConnectionName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["crossConnectionName"] = args ? args.crossConnectionName : undefined;
            resourceInputs["gatewayManagerEtag"] = args ? args.gatewayManagerEtag : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["ipv6PeeringConfig"] = args ? args.ipv6PeeringConfig : undefined;
            resourceInputs["lastModifiedBy"] = args ? args.lastModifiedBy : undefined;
            resourceInputs["microsoftPeeringConfig"] = args ? args.microsoftPeeringConfig : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["peerASN"] = args ? args.peerASN : undefined;
            resourceInputs["peeringName"] = args ? args.peeringName : undefined;
            resourceInputs["peeringType"] = args ? args.peeringType : undefined;
            resourceInputs["primaryPeerAddressPrefix"] = args ? args.primaryPeerAddressPrefix : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["secondaryPeerAddressPrefix"] = args ? args.secondaryPeerAddressPrefix : undefined;
            resourceInputs["sharedKey"] = args ? args.sharedKey : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
            resourceInputs["azureASN"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["primaryAzurePort"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["secondaryAzurePort"] = undefined /*out*/;
        }
        else {
            resourceInputs["azureASN"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["gatewayManagerEtag"] = undefined /*out*/;
            resourceInputs["ipv6PeeringConfig"] = undefined /*out*/;
            resourceInputs["lastModifiedBy"] = undefined /*out*/;
            resourceInputs["microsoftPeeringConfig"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["peerASN"] = undefined /*out*/;
            resourceInputs["peeringType"] = undefined /*out*/;
            resourceInputs["primaryAzurePort"] = undefined /*out*/;
            resourceInputs["primaryPeerAddressPrefix"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["secondaryAzurePort"] = undefined /*out*/;
            resourceInputs["secondaryPeerAddressPrefix"] = undefined /*out*/;
            resourceInputs["sharedKey"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["vlanId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:network:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20180201:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20180601:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20180701:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20180801:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20181001:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20181101:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20181201:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20190201:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20190401:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20190601:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20190701:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20190801:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20190901:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20191101:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20191201:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20200301:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20200401:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20200501:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20200601:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20200701:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20200801:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20201101:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20210201:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20210301:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20210501:ExpressRouteCrossConnectionPeering" }, { type: "azure-native:network/v20210801:ExpressRouteCrossConnectionPeering" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ExpressRouteCrossConnectionPeering.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ExpressRouteCrossConnectionPeering resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        pulumi.log.warn("ExpressRouteCrossConnectionPeering is deprecated: Version v20180401 will be removed in the next major version of the provider. Upgrade to version v20180501 or later.");
        return new ExpressRouteCrossConnectionPeering(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ExpressRouteCrossConnectionPeering.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExpressRouteCrossConnectionPeering.__pulumiType;
    }
}
exports.ExpressRouteCrossConnectionPeering = ExpressRouteCrossConnectionPeering;
/** @internal */
ExpressRouteCrossConnectionPeering.__pulumiType = 'azure-native:network/v20180401:ExpressRouteCrossConnectionPeering';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwcmVzc1JvdXRlQ3Jvc3NDb25uZWN0aW9uUGVlcmluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25ldHdvcmsvdjIwMTgwNDAxL2V4cHJlc3NSb3V0ZUNyb3NzQ29ubmVjdGlvblBlZXJpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHdFQUF3RTtBQUN4RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFFekMsNkNBQTZDO0FBRTdDOzs7O0dBSUc7QUFDSCxNQUFhLGtDQUFtQyxTQUFRLE1BQU0sQ0FBQyxjQUFjO0lBaUd6RTs7Ozs7O09BTUc7SUFDSCxzSUFBc0k7SUFDdEksWUFBWSxJQUFZLEVBQUUsSUFBNEMsRUFBRSxJQUFtQztRQUN2RyxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyx1S0FBdUssQ0FBQyxDQUFBO1FBQ3hMLElBQUksY0FBYyxHQUFrQixFQUFFLENBQUM7UUFDdkMsSUFBSSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7UUFDbEIsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUU7WUFDVixJQUFJLENBQUMsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLG1CQUFtQixLQUFLLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRTtnQkFDaEUsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO2FBQ3RFO1lBQ0QsSUFBSSxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxpQkFBaUIsS0FBSyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7Z0JBQzlELE1BQU0sSUFBSSxLQUFLLENBQUMsK0NBQStDLENBQUMsQ0FBQzthQUNwRTtZQUNELGNBQWMsQ0FBQyxxQkFBcUIsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7WUFDcEYsY0FBYyxDQUFD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QUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUMzbUUsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzVDLEtBQUssQ0FBQyxrQ0FBa0MsQ0FBQyxZQUFZLEVBQUUsSUFBSSxFQUFFLGNBQWMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN2RixDQUFDO0lBL0pEOzs7Ozs7O09BT0c7SUFDSSxNQUFNLENBQUMsR0FBRyxDQUFDLElBQVksRUFBRSxFQUEyQixFQUFFLElBQW1DO1FBQzVGLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLHVLQUF1SyxDQUFDLENBQUE7UUFDeEwsT0FBTyxJQUFJLGtDQUFrQyxDQUFDLElBQUksRUFBRSxTQUFnQixrQ0FBTyxJQUFJLEtBQUUsRUFBRSxFQUFFLEVBQUUsSUFBRyxDQUFDO0lBQy9GLENBQUM7SUFLRDs7O09BR0c7SUFDSSxNQUFNLENBQUMsVUFBVSxDQUFDLEdBQVE7UUFDN0IsSUFBSSxHQUFHLEtBQUssU0FBUyxJQUFJLEdBQUcsS0FBSyxJQUFJLEVBQUU7WUFDbkMsT0FBTyxLQUFLLENBQUM7U0FDaEI7UUFDRCxPQUFPLEdBQUcsQ0FBQyxjQUFjLENBQUMsS0FBSyxrQ0FBa0MsQ0FBQyxZQUFZLENBQUM7SUFDbkYsQ0FBQzs7QUExQkwsZ0ZBaUtDO0FBbkpHLGdCQUFnQjtBQUNPLCtDQUFZLEdBQUcsbUVBQW1FLENBQUMifQ==