"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./applicationGateway"), exports);
__exportStar(require("./expressRouteCircuit"), exports);
__exportStar(require("./expressRouteCircuitAuthorization"), exports);
__exportStar(require("./expressRouteCircuitPeering"), exports);
__exportStar(require("./getApplicationGateway"), exports);
__exportStar(require("./getExpressRouteCircuit"), exports);
__exportStar(require("./getExpressRouteCircuitAuthorization"), exports);
__exportStar(require("./getExpressRouteCircuitPeering"), exports);
__exportStar(require("./getLoadBalancer"), exports);
__exportStar(require("./getLocalNetworkGateway"), exports);
__exportStar(require("./getNetworkInterface"), exports);
__exportStar(require("./getNetworkSecurityGroup"), exports);
__exportStar(require("./getNetworkWatcher"), exports);
__exportStar(require("./getPacketCapture"), exports);
__exportStar(require("./getPublicIPAddress"), exports);
__exportStar(require("./getRoute"), exports);
__exportStar(require("./getRouteTable"), exports);
__exportStar(require("./getSecurityRule"), exports);
__exportStar(require("./getSubnet"), exports);
__exportStar(require("./getVirtualNetwork"), exports);
__exportStar(require("./getVirtualNetworkGateway"), exports);
__exportStar(require("./getVirtualNetworkGatewayAdvertisedRoutes"), exports);
__exportStar(require("./getVirtualNetworkGatewayBgpPeerStatus"), exports);
__exportStar(require("./getVirtualNetworkGatewayConnection"), exports);
__exportStar(require("./getVirtualNetworkGatewayLearnedRoutes"), exports);
__exportStar(require("./getVirtualNetworkPeering"), exports);
__exportStar(require("./loadBalancer"), exports);
__exportStar(require("./localNetworkGateway"), exports);
__exportStar(require("./networkInterface"), exports);
__exportStar(require("./networkSecurityGroup"), exports);
__exportStar(require("./networkWatcher"), exports);
__exportStar(require("./packetCapture"), exports);
__exportStar(require("./publicIPAddress"), exports);
__exportStar(require("./route"), exports);
__exportStar(require("./routeTable"), exports);
__exportStar(require("./securityRule"), exports);
__exportStar(require("./subnet"), exports);
__exportStar(require("./virtualNetwork"), exports);
__exportStar(require("./virtualNetworkGateway"), exports);
__exportStar(require("./virtualNetworkGatewayConnection"), exports);
__exportStar(require("./virtualNetworkPeering"), exports);
// Export enums:
__exportStar(require("../../types/enums/network/v20160901"), exports);
// Import resources to register:
const applicationGateway_1 = require("./applicationGateway");
const expressRouteCircuit_1 = require("./expressRouteCircuit");
const expressRouteCircuitAuthorization_1 = require("./expressRouteCircuitAuthorization");
const expressRouteCircuitPeering_1 = require("./expressRouteCircuitPeering");
const loadBalancer_1 = require("./loadBalancer");
const localNetworkGateway_1 = require("./localNetworkGateway");
const networkInterface_1 = require("./networkInterface");
const networkSecurityGroup_1 = require("./networkSecurityGroup");
const networkWatcher_1 = require("./networkWatcher");
const packetCapture_1 = require("./packetCapture");
const publicIPAddress_1 = require("./publicIPAddress");
const route_1 = require("./route");
const routeTable_1 = require("./routeTable");
const securityRule_1 = require("./securityRule");
const subnet_1 = require("./subnet");
const virtualNetwork_1 = require("./virtualNetwork");
const virtualNetworkGateway_1 = require("./virtualNetworkGateway");
const virtualNetworkGatewayConnection_1 = require("./virtualNetworkGatewayConnection");
const virtualNetworkPeering_1 = require("./virtualNetworkPeering");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:network/v20160901:ApplicationGateway":
                return new applicationGateway_1.ApplicationGateway(name, undefined, { urn });
            case "azure-native:network/v20160901:ExpressRouteCircuit":
                return new expressRouteCircuit_1.ExpressRouteCircuit(name, undefined, { urn });
            case "azure-native:network/v20160901:ExpressRouteCircuitAuthorization":
                return new expressRouteCircuitAuthorization_1.ExpressRouteCircuitAuthorization(name, undefined, { urn });
            case "azure-native:network/v20160901:ExpressRouteCircuitPeering":
                return new expressRouteCircuitPeering_1.ExpressRouteCircuitPeering(name, undefined, { urn });
            case "azure-native:network/v20160901:LoadBalancer":
                return new loadBalancer_1.LoadBalancer(name, undefined, { urn });
            case "azure-native:network/v20160901:LocalNetworkGateway":
                return new localNetworkGateway_1.LocalNetworkGateway(name, undefined, { urn });
            case "azure-native:network/v20160901:NetworkInterface":
                return new networkInterface_1.NetworkInterface(name, undefined, { urn });
            case "azure-native:network/v20160901:NetworkSecurityGroup":
                return new networkSecurityGroup_1.NetworkSecurityGroup(name, undefined, { urn });
            case "azure-native:network/v20160901:NetworkWatcher":
                return new networkWatcher_1.NetworkWatcher(name, undefined, { urn });
            case "azure-native:network/v20160901:PacketCapture":
                return new packetCapture_1.PacketCapture(name, undefined, { urn });
            case "azure-native:network/v20160901:PublicIPAddress":
                return new publicIPAddress_1.PublicIPAddress(name, undefined, { urn });
            case "azure-native:network/v20160901:Route":
                return new route_1.Route(name, undefined, { urn });
            case "azure-native:network/v20160901:RouteTable":
                return new routeTable_1.RouteTable(name, undefined, { urn });
            case "azure-native:network/v20160901:SecurityRule":
                return new securityRule_1.SecurityRule(name, undefined, { urn });
            case "azure-native:network/v20160901:Subnet":
                return new subnet_1.Subnet(name, undefined, { urn });
            case "azure-native:network/v20160901:VirtualNetwork":
                return new virtualNetwork_1.VirtualNetwork(name, undefined, { urn });
            case "azure-native:network/v20160901:VirtualNetworkGateway":
                return new virtualNetworkGateway_1.VirtualNetworkGateway(name, undefined, { urn });
            case "azure-native:network/v20160901:VirtualNetworkGatewayConnection":
                return new virtualNetworkGatewayConnection_1.VirtualNetworkGatewayConnection(name, undefined, { urn });
            case "azure-native:network/v20160901:VirtualNetworkPeering":
                return new virtualNetworkPeering_1.VirtualNetworkPeering(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "network/v20160901", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9uZXR3b3JrL3YyMDE2MDkwMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0VBQXdFO0FBQ3hFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBRTdDLGtCQUFrQjtBQUNsQix1REFBcUM7QUFDckMsd0RBQXNDO0FBQ3RDLHFFQUFtRDtBQUNuRCwrREFBNkM7QUFDN0MsMERBQXdDO0FBQ3hDLDJEQUF5QztBQUN6Qyx3RUFBc0Q7QUFDdEQsa0VBQWdEO0FBQ2hELG9EQUFrQztBQUNsQywyREFBeUM7QUFDekMsd0RBQXNDO0FBQ3RDLDREQUEwQztBQUMxQyxzREFBb0M7QUFDcEMscURBQW1DO0FBQ25DLHVEQUFxQztBQUNyQyw2Q0FBMkI7QUFDM0Isa0RBQWdDO0FBQ2hDLG9EQUFrQztBQUNsQyw4Q0FBNEI7QUFDNUIsc0RBQW9DO0FBQ3BDLDZEQUEyQztBQUMzQyw2RUFBMkQ7QUFDM0QsMEVBQXdEO0FBQ3hELHVFQUFxRDtBQUNyRCwwRUFBd0Q7QUFDeEQsNkRBQTJDO0FBQzNDLGlEQUErQjtBQUMvQix3REFBc0M7QUFDdEMscURBQW1DO0FBQ25DLHlEQUF1QztBQUN2QyxtREFBaUM7QUFDakMsa0RBQWdDO0FBQ2hDLG9EQUFrQztBQUNsQywwQ0FBd0I7QUFDeEIsK0NBQTZCO0FBQzdCLGlEQUErQjtBQUMvQiwyQ0FBeUI7QUFDekIsbURBQWlDO0FBQ2pDLDBEQUF3QztBQUN4QyxvRUFBa0Q7QUFDbEQsMERBQXdDO0FBRXhDLGdCQUFnQjtBQUNoQixzRUFBb0Q7QUFFcEQsZ0NBQWdDO0FBQ2hDLDZEQUEwRDtBQUMxRCwrREFBNEQ7QUFDNUQseUZBQXNGO0FBQ3RGLDZFQUEwRTtBQUMxRSxpREFBOEM7QUFDOUMsK0RBQTREO0FBQzVELHlEQUFzRDtBQUN0RCxpRUFBOEQ7QUFDOUQscURBQWtEO0FBQ2xELG1EQUFn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