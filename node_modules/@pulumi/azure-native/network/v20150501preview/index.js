"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./applicationGateway"), exports);
__exportStar(require("./expressRouteCircuit"), exports);
__exportStar(require("./expressRouteCircuitAuthorization"), exports);
__exportStar(require("./expressRouteCircuitPeering"), exports);
__exportStar(require("./getApplicationGateway"), exports);
__exportStar(require("./getExpressRouteCircuit"), exports);
__exportStar(require("./getExpressRouteCircuitAuthorization"), exports);
__exportStar(require("./getExpressRouteCircuitPeering"), exports);
__exportStar(require("./getLoadBalancer"), exports);
__exportStar(require("./getNetworkInterface"), exports);
__exportStar(require("./getNetworkSecurityGroup"), exports);
__exportStar(require("./getPublicIpAddress"), exports);
__exportStar(require("./getRoute"), exports);
__exportStar(require("./getRouteTable"), exports);
__exportStar(require("./getSecurityRule"), exports);
__exportStar(require("./getSubnet"), exports);
__exportStar(require("./getVirtualNetwork"), exports);
__exportStar(require("./loadBalancer"), exports);
__exportStar(require("./networkInterface"), exports);
__exportStar(require("./networkSecurityGroup"), exports);
__exportStar(require("./publicIpAddress"), exports);
__exportStar(require("./route"), exports);
__exportStar(require("./routeTable"), exports);
__exportStar(require("./securityRule"), exports);
__exportStar(require("./subnet"), exports);
__exportStar(require("./virtualNetwork"), exports);
// Export enums:
__exportStar(require("../../types/enums/network/v20150501preview"), exports);
// Import resources to register:
const applicationGateway_1 = require("./applicationGateway");
const expressRouteCircuit_1 = require("./expressRouteCircuit");
const expressRouteCircuitAuthorization_1 = require("./expressRouteCircuitAuthorization");
const expressRouteCircuitPeering_1 = require("./expressRouteCircuitPeering");
const loadBalancer_1 = require("./loadBalancer");
const networkInterface_1 = require("./networkInterface");
const networkSecurityGroup_1 = require("./networkSecurityGroup");
const publicIpAddress_1 = require("./publicIpAddress");
const route_1 = require("./route");
const routeTable_1 = require("./routeTable");
const securityRule_1 = require("./securityRule");
const subnet_1 = require("./subnet");
const virtualNetwork_1 = require("./virtualNetwork");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:network/v20150501preview:ApplicationGateway":
                return new applicationGateway_1.ApplicationGateway(name, undefined, { urn });
            case "azure-native:network/v20150501preview:ExpressRouteCircuit":
                return new expressRouteCircuit_1.ExpressRouteCircuit(name, undefined, { urn });
            case "azure-native:network/v20150501preview:ExpressRouteCircuitAuthorization":
                return new expressRouteCircuitAuthorization_1.ExpressRouteCircuitAuthorization(name, undefined, { urn });
            case "azure-native:network/v20150501preview:ExpressRouteCircuitPeering":
                return new expressRouteCircuitPeering_1.ExpressRouteCircuitPeering(name, undefined, { urn });
            case "azure-native:network/v20150501preview:LoadBalancer":
                return new loadBalancer_1.LoadBalancer(name, undefined, { urn });
            case "azure-native:network/v20150501preview:NetworkInterface":
                return new networkInterface_1.NetworkInterface(name, undefined, { urn });
            case "azure-native:network/v20150501preview:NetworkSecurityGroup":
                return new networkSecurityGroup_1.NetworkSecurityGroup(name, undefined, { urn });
            case "azure-native:network/v20150501preview:PublicIpAddress":
                return new publicIpAddress_1.PublicIpAddress(name, undefined, { urn });
            case "azure-native:network/v20150501preview:Route":
                return new route_1.Route(name, undefined, { urn });
            case "azure-native:network/v20150501preview:RouteTable":
                return new routeTable_1.RouteTable(name, undefined, { urn });
            case "azure-native:network/v20150501preview:SecurityRule":
                return new securityRule_1.SecurityRule(name, undefined, { urn });
            case "azure-native:network/v20150501preview:Subnet":
                return new subnet_1.Subnet(name, undefined, { urn });
            case "azure-native:network/v20150501preview:VirtualNetwork":
                return new virtualNetwork_1.VirtualNetwork(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "network/v20150501preview", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9uZXR3b3JrL3YyMDE1MDUwMXByZXZpZXcvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHdFQUF3RTtBQUN4RSxpRkFBaUY7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUU3QyxrQkFBa0I7QUFDbEIsdURBQXFDO0FBQ3JDLHdEQUFzQztBQUN0QyxxRUFBbUQ7QUFDbkQsK0RBQTZDO0FBQzdDLDBEQUF3QztBQUN4QywyREFBeUM7QUFDekMsd0VBQXNEO0FBQ3RELGtFQUFnRDtBQUNoRCxvREFBa0M7QUFDbEMsd0RBQXNDO0FBQ3RDLDREQUEwQztBQUMxQyx1REFBcUM7QUFDckMsNkNBQTJCO0FBQzNCLGtEQUFnQztBQUNoQyxvREFBa0M7QUFDbEMsOENBQTRCO0FBQzVCLHNEQUFvQztBQUNwQyxpREFBK0I7QUFDL0IscURBQW1DO0FBQ25DLHlEQUF1QztBQUN2QyxvREFBa0M7QUFDbEMsMENBQXdCO0FBQ3hCLCtDQUE2QjtBQUM3QixpREFBK0I7QUFDL0IsMkNBQXlCO0FBQ3pCLG1EQUFpQztBQUVqQyxnQkFBZ0I7QUFDaEIsNkVBQTJEO0FBRTNELGdDQUFnQztBQUNoQyw2REFBMEQ7QUFDMUQsK0RBQTREO0FBQzVELHlGQUFzRjtBQUN0Riw2RUFBMEU7QUFDMUUsaURBQThDO0FBQzlDLHlEQUFzRDtBQUN0RCxpRUFBOEQ7QUFDOUQsdURBQW9EO0FBQ3BELG1DQUFnQztBQUNoQyw2Q0FBMEM7QUFDMUMsaURBQThDO0FBQzlDLHFDQUFrQztBQUNsQyxxREFBa0Q7QUFFbEQsTUFBTSxPQUFPLEdBQUc7SUFDWixPQUFPLEVBQUUsU0FBUyxDQUFDLFVBQVUsRUFBRTtJQUMvQixTQUFTLEVBQUUsQ0FBQyxJQUFZLEVBQUUsSUFBWSxFQUFFLEdBQVcsRUFBbUIsRUFBRTtRQUNwRSxRQUFRLElBQUksRUFBRTtZQUNWLEtBQUssMERBQTBEO2dCQUMzRCxPQUFPLElBQUksdUNBQWtCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDaEUsS0FBSywyREFBMkQ7Z0JBQzVELE9BQU8sSUFBSSx5Q0FBbUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNqRSxLQUFLLHdFQUF3RTtnQkFDekUsT0FBTyxJQUFJLG1FQUFnQyxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQzlFLEtBQUssa0VBQWtFO2dCQUNuRSxPQUFPLElBQUksdURBQTBCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDeEUsS0FBSyxvREFBb0Q7Z0JBQ3JELE9BQU8sSUFBSSwyQkFBWSxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQzFELEtBQUssd0RBQXdEO2dCQUN6RCxPQUFPLElBQUksbUNBQWdCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDOUQsS0FBSyw0REFBNEQ7Z0JBQzdELE9BQU8sSUFBSSwyQ0FBb0IsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNsRSxLQUFLLHVEQUF1RDtnQkFDeEQsT0FBTyxJQUFJLGlDQUFlLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDN0QsS0FBSyw2Q0FBNkM7Z0JBQzlDLE9BQU8sSUFBSSxhQUFLLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDbkQsS0FBSyxrREFBa0Q7Z0JBQ25ELE9BQU8sSUFBSSx1QkFBVSxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3hELEtBQUssb0RBQW9EO2dCQUNyRCxPQUFPLElBQUksMkJBQVksQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUMxRCxLQUFLLDhDQUE4QztnQkFDL0MsT0FBTyxJQUFJLGVBQU0sQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNwRCxLQUFLLHNEQUFzRDtnQkFDdkQsT0FBTyxJQUFJLCtCQUFjLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDNUQ7Z0JBQ0ksTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsSUFBSSxFQUFFLENBQUMsQ0FBQztTQUN4RDtJQUNMLENBQUM7Q0FDSixDQUFDO0FBQ0YsTUFBTSxDQUFDLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxjQUFjLEVBQUUsMEJBQTBCLEVBQUUsT0FBTyxDQUFDLENBQUEifQ==