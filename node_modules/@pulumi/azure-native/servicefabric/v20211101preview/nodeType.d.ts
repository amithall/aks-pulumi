import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
/**
 * Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.
 */
export declare class NodeType extends pulumi.CustomResource {
    /**
     * Get an existing NodeType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NodeType;
    /**
     * Returns true if the given object is an instance of NodeType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NodeType;
    /**
     * Additional managed data disks.
     */
    readonly additionalDataDisks: pulumi.Output<outputs.servicefabric.v20211101preview.VmssDataDiskResponse[] | undefined>;
    /**
     * The range of ports from which cluster assigned port to Service Fabric applications.
     */
    readonly applicationPorts: pulumi.Output<outputs.servicefabric.v20211101preview.EndpointRangeDescriptionResponse | undefined>;
    /**
     * The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.
     */
    readonly capacities: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Managed data disk letter. It can not use the reserved letter C or D and it can not change after created.
     */
    readonly dataDiskLetter: pulumi.Output<string | undefined>;
    /**
     * Disk size for the managed disk attached to the vms on the node type in GBs.
     */
    readonly dataDiskSizeGB: pulumi.Output<number | undefined>;
    /**
     * Managed data disk type. Specifies the storage account type for the managed disk
     */
    readonly dataDiskType: pulumi.Output<string | undefined>;
    /**
     * Specifies whether the network interface is accelerated networking-enabled.
     */
    readonly enableAcceleratedNetworking: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.
     */
    readonly enableEncryptionAtHost: pulumi.Output<boolean | undefined>;
    /**
     * The range of ephemeral ports that nodes in this node type should be configured with.
     */
    readonly ephemeralPorts: pulumi.Output<outputs.servicefabric.v20211101preview.EndpointRangeDescriptionResponse | undefined>;
    /**
     * Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created.
     */
    readonly frontendConfigurations: pulumi.Output<outputs.servicefabric.v20211101preview.FrontendConfigurationResponse[] | undefined>;
    /**
     * Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created.
     */
    readonly isPrimary: pulumi.Output<boolean>;
    /**
     * Indicates if the node type can only host Stateless workloads.
     */
    readonly isStateless: pulumi.Output<boolean | undefined>;
    /**
     * Indicates if scale set associated with the node type can be composed of multiple placement groups.
     */
    readonly multiplePlacementGroups: pulumi.Output<boolean | undefined>;
    /**
     * Azure resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations.
     */
    readonly networkSecurityRules: pulumi.Output<outputs.servicefabric.v20211101preview.NetworkSecurityRuleResponse[] | undefined>;
    /**
     * The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.
     */
    readonly placementProperties: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The provisioning state of the node type resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The node type sku.
     */
    readonly sku: pulumi.Output<outputs.servicefabric.v20211101preview.NodeTypeSkuResponse | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.servicefabric.v20211101preview.SystemDataResponse>;
    /**
     * Azure resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Azure resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity.
     */
    readonly useDefaultPublicLoadBalancer: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types.
     */
    readonly useTempDataDisk: pulumi.Output<boolean | undefined>;
    /**
     * Set of extensions that should be installed onto the virtual machines.
     */
    readonly vmExtensions: pulumi.Output<outputs.servicefabric.v20211101preview.VMSSExtensionResponse[] | undefined>;
    /**
     * The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer.
     */
    readonly vmImageOffer: pulumi.Output<string | undefined>;
    /**
     * The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer.
     */
    readonly vmImagePublisher: pulumi.Output<string | undefined>;
    /**
     * The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter.
     */
    readonly vmImageSku: pulumi.Output<string | undefined>;
    /**
     * The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'.
     */
    readonly vmImageVersion: pulumi.Output<string | undefined>;
    /**
     * The number of nodes in the node type. <br /><br />**Values:** <br />-1 - Use when auto scale rules are configured or sku.capacity is defined <br /> 0 - Not supported <br /> >0 - Use for manual scale.
     */
    readonly vmInstanceCount: pulumi.Output<number>;
    /**
     * Identities to assign to the virtual machine scale set under the node type.
     */
    readonly vmManagedIdentity: pulumi.Output<outputs.servicefabric.v20211101preview.VmManagedIdentityResponse | undefined>;
    /**
     * The secrets to install in the virtual machines.
     */
    readonly vmSecrets: pulumi.Output<outputs.servicefabric.v20211101preview.VaultSecretGroupResponse[] | undefined>;
    /**
     * The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3.
     */
    readonly vmSize: pulumi.Output<string | undefined>;
    /**
     * Create a NodeType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NodeTypeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NodeType resource.
 */
export interface NodeTypeArgs {
    /**
     * Additional managed data disks.
     */
    additionalDataDisks?: pulumi.Input<pulumi.Input<inputs.servicefabric.v20211101preview.VmssDataDiskArgs>[]>;
    /**
     * The range of ports from which cluster assigned port to Service Fabric applications.
     */
    applicationPorts?: pulumi.Input<inputs.servicefabric.v20211101preview.EndpointRangeDescriptionArgs>;
    /**
     * The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.
     */
    capacities?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the cluster resource.
     */
    clusterName: pulumi.Input<string>;
    /**
     * Managed data disk letter. It can not use the reserved letter C or D and it can not change after created.
     */
    dataDiskLetter?: pulumi.Input<string>;
    /**
     * Disk size for the managed disk attached to the vms on the node type in GBs.
     */
    dataDiskSizeGB?: pulumi.Input<number>;
    /**
     * Managed data disk type. Specifies the storage account type for the managed disk
     */
    dataDiskType?: pulumi.Input<string | enums.servicefabric.v20211101preview.DiskType>;
    /**
     * Specifies whether the network interface is accelerated networking-enabled.
     */
    enableAcceleratedNetworking?: pulumi.Input<boolean>;
    /**
     * Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.
     */
    enableEncryptionAtHost?: pulumi.Input<boolean>;
    /**
     * The range of ephemeral ports that nodes in this node type should be configured with.
     */
    ephemeralPorts?: pulumi.Input<inputs.servicefabric.v20211101preview.EndpointRangeDescriptionArgs>;
    /**
     * Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created.
     */
    frontendConfigurations?: pulumi.Input<pulumi.Input<inputs.servicefabric.v20211101preview.FrontendConfigurationArgs>[]>;
    /**
     * Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created.
     */
    isPrimary: pulumi.Input<boolean>;
    /**
     * Indicates if the node type can only host Stateless workloads.
     */
    isStateless?: pulumi.Input<boolean>;
    /**
     * Indicates if scale set associated with the node type can be composed of multiple placement groups.
     */
    multiplePlacementGroups?: pulumi.Input<boolean>;
    /**
     * The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations.
     */
    networkSecurityRules?: pulumi.Input<pulumi.Input<inputs.servicefabric.v20211101preview.NetworkSecurityRuleArgs>[]>;
    /**
     * The name of the node type.
     */
    nodeTypeName?: pulumi.Input<string>;
    /**
     * The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.
     */
    placementProperties?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The node type sku.
     */
    sku?: pulumi.Input<inputs.servicefabric.v20211101preview.NodeTypeSkuArgs>;
    /**
     * Azure resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity.
     */
    useDefaultPublicLoadBalancer?: pulumi.Input<boolean>;
    /**
     * Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types.
     */
    useTempDataDisk?: pulumi.Input<boolean>;
    /**
     * Set of extensions that should be installed onto the virtual machines.
     */
    vmExtensions?: pulumi.Input<pulumi.Input<inputs.servicefabric.v20211101preview.VMSSExtensionArgs>[]>;
    /**
     * The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer.
     */
    vmImageOffer?: pulumi.Input<string>;
    /**
     * The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer.
     */
    vmImagePublisher?: pulumi.Input<string>;
    /**
     * The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter.
     */
    vmImageSku?: pulumi.Input<string>;
    /**
     * The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'.
     */
    vmImageVersion?: pulumi.Input<string>;
    /**
     * The number of nodes in the node type. <br /><br />**Values:** <br />-1 - Use when auto scale rules are configured or sku.capacity is defined <br /> 0 - Not supported <br /> >0 - Use for manual scale.
     */
    vmInstanceCount: pulumi.Input<number>;
    /**
     * Identities to assign to the virtual machine scale set under the node type.
     */
    vmManagedIdentity?: pulumi.Input<inputs.servicefabric.v20211101preview.VmManagedIdentityArgs>;
    /**
     * The secrets to install in the virtual machines.
     */
    vmSecrets?: pulumi.Input<pulumi.Input<inputs.servicefabric.v20211101preview.VaultSecretGroupArgs>[]>;
    /**
     * The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3.
     */
    vmSize?: pulumi.Input<string>;
}
