import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * The registration definition.
 */
export declare function getRegistrationDefinition(args: GetRegistrationDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetRegistrationDefinitionResult>;
export interface GetRegistrationDefinitionArgs {
    /**
     * The GUID of the registration definition.
     */
    registrationDefinitionId: string;
    /**
     * The scope of the resource.
     */
    scope: string;
}
/**
 * The registration definition.
 */
export interface GetRegistrationDefinitionResult {
    /**
     * The fully qualified path of the registration definition.
     */
    readonly id: string;
    /**
     * The name of the registration definition.
     */
    readonly name: string;
    /**
     * The details for the Managed Services offerâ€™s plan in Azure Marketplace.
     */
    readonly plan?: outputs.managedservices.v20220101preview.PlanResponse;
    /**
     * The properties of a registration definition.
     */
    readonly properties: outputs.managedservices.v20220101preview.RegistrationDefinitionPropertiesResponse;
    /**
     * The metadata for the registration assignment resource.
     */
    readonly systemData: outputs.managedservices.v20220101preview.SystemDataResponse;
    /**
     * The type of the Azure resource (Microsoft.ManagedServices/registrationDefinitions).
     */
    readonly type: string;
}
export declare function getRegistrationDefinitionOutput(args: GetRegistrationDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRegistrationDefinitionResult>;
export interface GetRegistrationDefinitionOutputArgs {
    /**
     * The GUID of the registration definition.
     */
    registrationDefinitionId: pulumi.Input<string>;
    /**
     * The scope of the resource.
     */
    scope: pulumi.Input<string>;
}
