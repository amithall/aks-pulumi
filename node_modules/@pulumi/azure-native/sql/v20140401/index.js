"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./dataMaskingPolicy"), exports);
__exportStar(require("./database"), exports);
__exportStar(require("./databaseAdvisor"), exports);
__exportStar(require("./databaseThreatDetectionPolicy"), exports);
__exportStar(require("./disasterRecoveryConfiguration"), exports);
__exportStar(require("./elasticPool"), exports);
__exportStar(require("./firewallRule"), exports);
__exportStar(require("./geoBackupPolicy"), exports);
__exportStar(require("./getDataMaskingPolicy"), exports);
__exportStar(require("./getDatabase"), exports);
__exportStar(require("./getDatabaseAdvisor"), exports);
__exportStar(require("./getDatabaseThreatDetectionPolicy"), exports);
__exportStar(require("./getDisasterRecoveryConfiguration"), exports);
__exportStar(require("./getElasticPool"), exports);
__exportStar(require("./getFirewallRule"), exports);
__exportStar(require("./getGeoBackupPolicy"), exports);
__exportStar(require("./getServer"), exports);
__exportStar(require("./getServerAdvisor"), exports);
__exportStar(require("./getServerAzureADAdministrator"), exports);
__exportStar(require("./getServerCommunicationLink"), exports);
__exportStar(require("./getTransparentDataEncryption"), exports);
__exportStar(require("./server"), exports);
__exportStar(require("./serverAdvisor"), exports);
__exportStar(require("./serverAzureADAdministrator"), exports);
__exportStar(require("./serverCommunicationLink"), exports);
__exportStar(require("./transparentDataEncryption"), exports);
// Export enums:
__exportStar(require("../../types/enums/sql/v20140401"), exports);
// Import resources to register:
const dataMaskingPolicy_1 = require("./dataMaskingPolicy");
const database_1 = require("./database");
const databaseAdvisor_1 = require("./databaseAdvisor");
const databaseThreatDetectionPolicy_1 = require("./databaseThreatDetectionPolicy");
const disasterRecoveryConfiguration_1 = require("./disasterRecoveryConfiguration");
const elasticPool_1 = require("./elasticPool");
const firewallRule_1 = require("./firewallRule");
const geoBackupPolicy_1 = require("./geoBackupPolicy");
const server_1 = require("./server");
const serverAdvisor_1 = require("./serverAdvisor");
const serverAzureADAdministrator_1 = require("./serverAzureADAdministrator");
const serverCommunicationLink_1 = require("./serverCommunicationLink");
const transparentDataEncryption_1 = require("./transparentDataEncryption");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:sql/v20140401:DataMaskingPolicy":
                return new dataMaskingPolicy_1.DataMaskingPolicy(name, undefined, { urn });
            case "azure-native:sql/v20140401:Database":
                return new database_1.Database(name, undefined, { urn });
            case "azure-native:sql/v20140401:DatabaseAdvisor":
                return new databaseAdvisor_1.DatabaseAdvisor(name, undefined, { urn });
            case "azure-native:sql/v20140401:DatabaseThreatDetectionPolicy":
                return new databaseThreatDetectionPolicy_1.DatabaseThreatDetectionPolicy(name, undefined, { urn });
            case "azure-native:sql/v20140401:DisasterRecoveryConfiguration":
                return new disasterRecoveryConfiguration_1.DisasterRecoveryConfiguration(name, undefined, { urn });
            case "azure-native:sql/v20140401:ElasticPool":
                return new elasticPool_1.ElasticPool(name, undefined, { urn });
            case "azure-native:sql/v20140401:FirewallRule":
                return new firewallRule_1.FirewallRule(name, undefined, { urn });
            case "azure-native:sql/v20140401:GeoBackupPolicy":
                return new geoBackupPolicy_1.GeoBackupPolicy(name, undefined, { urn });
            case "azure-native:sql/v20140401:Server":
                return new server_1.Server(name, undefined, { urn });
            case "azure-native:sql/v20140401:ServerAdvisor":
                return new serverAdvisor_1.ServerAdvisor(name, undefined, { urn });
            case "azure-native:sql/v20140401:ServerAzureADAdministrator":
                return new serverAzureADAdministrator_1.ServerAzureADAdministrator(name, undefined, { urn });
            case "azure-native:sql/v20140401:ServerCommunicationLink":
                return new serverCommunicationLink_1.ServerCommunicationLink(name, undefined, { urn });
            case "azure-native:sql/v20140401:TransparentDataEncryption":
                return new transparentDataEncryption_1.TransparentDataEncryption(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "sql/v20140401", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcWwvdjIwMTQwNDAxL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSx3RUFBd0U7QUFDeEUsaUZBQWlGOzs7Ozs7Ozs7Ozs7Ozs7O0FBRWpGLHlDQUF5QztBQUN6Qyw2Q0FBNkM7QUFFN0Msa0JBQWtCO0FBQ2xCLHNEQUFvQztBQUNwQyw2Q0FBMkI7QUFDM0Isb0RBQWtDO0FBQ2xDLGtFQUFnRDtBQUNoRCxrRUFBZ0Q7QUFDaEQsZ0RBQThCO0FBQzlCLGlEQUErQjtBQUMvQixvREFBa0M7QUFDbEMseURBQXVDO0FBQ3ZDLGdEQUE4QjtBQUM5Qix1REFBcUM7QUFDckMscUVBQW1EO0FBQ25ELHFFQUFtRDtBQUNuRCxtREFBaUM7QUFDakMsb0RBQWtDO0FBQ2xDLHVEQUFxQztBQUNyQyw4Q0FBNEI7QUFDNUIscURBQW1DO0FBQ25DLGtFQUFnRDtBQUNoRCwrREFBNkM7QUFDN0MsaUVBQStDO0FBQy9DLDJDQUF5QjtBQUN6QixrREFBZ0M7QUFDaEMsK0RBQTZDO0FBQzdDLDREQUEwQztBQUMxQyw4REFBNEM7QUFFNUMsZ0JBQWdCO0FBQ2hCLGtFQUFnRDtBQUVoRCxnQ0FBZ0M7QUFDaEMsMkRBQXdEO0FBQ3hELHlDQUFzQztBQUN0Qyx1REFBb0Q7QUFDcEQsbUZBQWdGO0FBQ2hGLG1GQUFnRjtBQUNoRiwrQ0FBNEM7QUFDNUMsaURBQThDO0FBQzlDLHVEQUFvRDtBQUNwRCxxQ0FBa0M7QUFDbEMsbURBQWdEO0FBQ2hELDZFQUEwRTtBQUMxRSx1RUFBb0U7QUFDcEUsMkVBQXdFO0FBRXhFLE1BQU0sT0FBTyxHQUFHO0lBQ1osT0FBTyxFQUFFLFNBQVMsQ0FBQyxVQUFVLEVBQUU7SUFDL0IsU0FBUyxFQUFFLENBQUMsSUFBWSxFQUFFLElBQVksRUFBRSxHQUFXLEVBQW1CLEVBQUU7UUFDcEUsUUFBUSxJQUFJLEVBQUU7WUFDVixLQUFLLDhDQUE4QztnQkFDL0MsT0FBTyxJQUFJLHFDQUFpQixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQy9ELEtBQUsscUNBQXFDO2dCQUN0QyxPQUFPLElBQUksbUJBQVEsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN0RCxLQUFLLDRDQUE0QztnQkFDN0MsT0FBTyxJQUFJLGlDQUFlLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDN0QsS0FBSywwREFBMEQ7Z0JBQzNELE9BQU8sSUFBSSw2REFBNkIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUMzRSxLQUFLLDBEQUEwRDtnQkFDM0QsT0FBTyxJQUFJLDZEQUE2QixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQzNFLEtBQUssd0NBQXdDO2dCQUN6QyxPQUFPLElBQUkseUJBQVcsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN6RCxLQUFLLHlDQUF5QztnQkFDMUMsT0FBTyxJQUFJLDJCQUFZLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDMUQsS0FBSyw0Q0FBNEM7Z0JBQzdDLE9BQU8sSUFBSSxpQ0FBZSxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQzdELEtBQUssbUNBQW1DO2dCQUNwQyxPQUFPLElBQUksZUFBTSxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3BELEtBQUssMENBQTBDO2dCQUMzQyxPQUFPLElBQUksNkJBQWEsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUMzRCxLQUFLLHVEQUF1RDtnQkFDeEQsT0FBTyxJQUFJLHVEQUEwQixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3hFLEtBQUssb0RBQW9EO2dCQUNyRCxPQUFPLElBQUksaURBQXVCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDckUsS0FBSyxzREFBc0Q7Z0JBQ3ZELE9BQU8sSUFBSSxxREFBeUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN2RTtnQkFDSSxNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixJQUFJLEVBQUUsQ0FBQyxDQUFDO1NBQ3hEO0lBQ0wsQ0FBQztDQUNKLENBQUM7QUFDRixNQUFNLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLGNBQWMsRUFBRSxlQUFlLEVBQUUsT0FBTyxDQUFDLENBQUEifQ==