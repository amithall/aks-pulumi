"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20211101preview = exports.v20210801preview = exports.v20210501preview = exports.v20210201preview = exports.v20201101preview = exports.v20200801preview = exports.v20200202preview = exports.v20190601preview = exports.v20180601preview = exports.v20171001preview = exports.v20170301preview = exports.v20150501preview = exports.v20140401 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./backupShortTermRetentionPolicy"), exports);
__exportStar(require("./dataMaskingPolicy"), exports);
__exportStar(require("./database"), exports);
__exportStar(require("./databaseAdvisor"), exports);
__exportStar(require("./databaseBlobAuditingPolicy"), exports);
__exportStar(require("./databaseSecurityAlertPolicy"), exports);
__exportStar(require("./databaseVulnerabilityAssessment"), exports);
__exportStar(require("./databaseVulnerabilityAssessmentRuleBaseline"), exports);
__exportStar(require("./disasterRecoveryConfiguration"), exports);
__exportStar(require("./distributedAvailabilityGroup"), exports);
__exportStar(require("./elasticPool"), exports);
__exportStar(require("./encryptionProtector"), exports);
__exportStar(require("./extendedDatabaseBlobAuditingPolicy"), exports);
__exportStar(require("./extendedServerBlobAuditingPolicy"), exports);
__exportStar(require("./failoverGroup"), exports);
__exportStar(require("./firewallRule"), exports);
__exportStar(require("./geoBackupPolicy"), exports);
__exportStar(require("./getBackupShortTermRetentionPolicy"), exports);
__exportStar(require("./getDataMaskingPolicy"), exports);
__exportStar(require("./getDatabase"), exports);
__exportStar(require("./getDatabaseAdvisor"), exports);
__exportStar(require("./getDatabaseBlobAuditingPolicy"), exports);
__exportStar(require("./getDatabaseSecurityAlertPolicy"), exports);
__exportStar(require("./getDatabaseVulnerabilityAssessment"), exports);
__exportStar(require("./getDatabaseVulnerabilityAssessmentRuleBaseline"), exports);
__exportStar(require("./getDisasterRecoveryConfiguration"), exports);
__exportStar(require("./getDistributedAvailabilityGroup"), exports);
__exportStar(require("./getElasticPool"), exports);
__exportStar(require("./getEncryptionProtector"), exports);
__exportStar(require("./getExtendedDatabaseBlobAuditingPolicy"), exports);
__exportStar(require("./getExtendedServerBlobAuditingPolicy"), exports);
__exportStar(require("./getFailoverGroup"), exports);
__exportStar(require("./getFirewallRule"), exports);
__exportStar(require("./getGeoBackupPolicy"), exports);
__exportStar(require("./getIPv6FirewallRule"), exports);
__exportStar(require("./getInstanceFailoverGroup"), exports);
__exportStar(require("./getInstancePool"), exports);
__exportStar(require("./getJob"), exports);
__exportStar(require("./getJobAgent"), exports);
__exportStar(require("./getJobCredential"), exports);
__exportStar(require("./getJobStep"), exports);
__exportStar(require("./getJobTargetGroup"), exports);
__exportStar(require("./getLongTermRetentionPolicy"), exports);
__exportStar(require("./getManagedDatabase"), exports);
__exportStar(require("./getManagedDatabaseSensitivityLabel"), exports);
__exportStar(require("./getManagedDatabaseVulnerabilityAssessment"), exports);
__exportStar(require("./getManagedDatabaseVulnerabilityAssessmentRuleBaseline"), exports);
__exportStar(require("./getManagedInstance"), exports);
__exportStar(require("./getManagedInstanceAdministrator"), exports);
__exportStar(require("./getManagedInstanceAzureADOnlyAuthentication"), exports);
__exportStar(require("./getManagedInstanceKey"), exports);
__exportStar(require("./getManagedInstancePrivateEndpointConnection"), exports);
__exportStar(require("./getManagedInstanceVulnerabilityAssessment"), exports);
__exportStar(require("./getManagedServerDnsAlias"), exports);
__exportStar(require("./getOutboundFirewallRule"), exports);
__exportStar(require("./getPrivateEndpointConnection"), exports);
__exportStar(require("./getSensitivityLabel"), exports);
__exportStar(require("./getServer"), exports);
__exportStar(require("./getServerAdvisor"), exports);
__exportStar(require("./getServerAzureADAdministrator"), exports);
__exportStar(require("./getServerAzureADOnlyAuthentication"), exports);
__exportStar(require("./getServerBlobAuditingPolicy"), exports);
__exportStar(require("./getServerCommunicationLink"), exports);
__exportStar(require("./getServerDnsAlias"), exports);
__exportStar(require("./getServerKey"), exports);
__exportStar(require("./getServerSecurityAlertPolicy"), exports);
__exportStar(require("./getServerTrustCertificate"), exports);
__exportStar(require("./getServerTrustGroup"), exports);
__exportStar(require("./getServerVulnerabilityAssessment"), exports);
__exportStar(require("./getSyncAgent"), exports);
__exportStar(require("./getSyncGroup"), exports);
__exportStar(require("./getSyncMember"), exports);
__exportStar(require("./getTransparentDataEncryption"), exports);
__exportStar(require("./getVirtualNetworkRule"), exports);
__exportStar(require("./getWorkloadClassifier"), exports);
__exportStar(require("./getWorkloadGroup"), exports);
__exportStar(require("./instanceFailoverGroup"), exports);
__exportStar(require("./instancePool"), exports);
__exportStar(require("./ipv6FirewallRule"), exports);
__exportStar(require("./job"), exports);
__exportStar(require("./jobAgent"), exports);
__exportStar(require("./jobCredential"), exports);
__exportStar(require("./jobStep"), exports);
__exportStar(require("./jobTargetGroup"), exports);
__exportStar(require("./longTermRetentionPolicy"), exports);
__exportStar(require("./managedDatabase"), exports);
__exportStar(require("./managedDatabaseSensitivityLabel"), exports);
__exportStar(require("./managedDatabaseVulnerabilityAssessment"), exports);
__exportStar(require("./managedDatabaseVulnerabilityAssessmentRuleBaseline"), exports);
__exportStar(require("./managedInstance"), exports);
__exportStar(require("./managedInstanceAdministrator"), exports);
__exportStar(require("./managedInstanceAzureADOnlyAuthentication"), exports);
__exportStar(require("./managedInstanceKey"), exports);
__exportStar(require("./managedInstancePrivateEndpointConnection"), exports);
__exportStar(require("./managedInstanceVulnerabilityAssessment"), exports);
__exportStar(require("./managedServerDnsAlias"), exports);
__exportStar(require("./outboundFirewallRule"), exports);
__exportStar(require("./privateEndpointConnection"), exports);
__exportStar(require("./sensitivityLabel"), exports);
__exportStar(require("./server"), exports);
__exportStar(require("./serverAdvisor"), exports);
__exportStar(require("./serverAzureADAdministrator"), exports);
__exportStar(require("./serverAzureADOnlyAuthentication"), exports);
__exportStar(require("./serverBlobAuditingPolicy"), exports);
__exportStar(require("./serverCommunicationLink"), exports);
__exportStar(require("./serverDnsAlias"), exports);
__exportStar(require("./serverKey"), exports);
__exportStar(require("./serverSecurityAlertPolicy"), exports);
__exportStar(require("./serverTrustCertificate"), exports);
__exportStar(require("./serverTrustGroup"), exports);
__exportStar(require("./serverVulnerabilityAssessment"), exports);
__exportStar(require("./syncAgent"), exports);
__exportStar(require("./syncGroup"), exports);
__exportStar(require("./syncMember"), exports);
__exportStar(require("./transparentDataEncryption"), exports);
__exportStar(require("./virtualNetworkRule"), exports);
__exportStar(require("./workloadClassifier"), exports);
__exportStar(require("./workloadGroup"), exports);
// Export enums:
__exportStar(require("../types/enums/sql"), exports);
// Export sub-modules:
const v20140401 = require("./v20140401");
exports.v20140401 = v20140401;
const v20150501preview = require("./v20150501preview");
exports.v20150501preview = v20150501preview;
const v20170301preview = require("./v20170301preview");
exports.v20170301preview = v20170301preview;
const v20171001preview = require("./v20171001preview");
exports.v20171001preview = v20171001preview;
const v20180601preview = require("./v20180601preview");
exports.v20180601preview = v20180601preview;
const v20190601preview = require("./v20190601preview");
exports.v20190601preview = v20190601preview;
const v20200202preview = require("./v20200202preview");
exports.v20200202preview = v20200202preview;
const v20200801preview = require("./v20200801preview");
exports.v20200801preview = v20200801preview;
const v20201101preview = require("./v20201101preview");
exports.v20201101preview = v20201101preview;
const v20210201preview = require("./v20210201preview");
exports.v20210201preview = v20210201preview;
const v20210501preview = require("./v20210501preview");
exports.v20210501preview = v20210501preview;
const v20210801preview = require("./v20210801preview");
exports.v20210801preview = v20210801preview;
const v20211101preview = require("./v20211101preview");
exports.v20211101preview = v20211101preview;
// Import resources to register:
const backupShortTermRetentionPolicy_1 = require("./backupShortTermRetentionPolicy");
const dataMaskingPolicy_1 = require("./dataMaskingPolicy");
const database_1 = require("./database");
const databaseAdvisor_1 = require("./databaseAdvisor");
const databaseBlobAuditingPolicy_1 = require("./databaseBlobAuditingPolicy");
const databaseSecurityAlertPolicy_1 = require("./databaseSecurityAlertPolicy");
const databaseVulnerabilityAssessment_1 = require("./databaseVulnerabilityAssessment");
const databaseVulnerabilityAssessmentRuleBaseline_1 = require("./databaseVulnerabilityAssessmentRuleBaseline");
const disasterRecoveryConfiguration_1 = require("./disasterRecoveryConfiguration");
const distributedAvailabilityGroup_1 = require("./distributedAvailabilityGroup");
const elasticPool_1 = require("./elasticPool");
const encryptionProtector_1 = require("./encryptionProtector");
const extendedDatabaseBlobAuditingPolicy_1 = require("./extendedDatabaseBlobAuditingPolicy");
const extendedServerBlobAuditingPolicy_1 = require("./extendedServerBlobAuditingPolicy");
const failoverGroup_1 = require("./failoverGroup");
const firewallRule_1 = require("./firewallRule");
const geoBackupPolicy_1 = require("./geoBackupPolicy");
const ipv6FirewallRule_1 = require("./ipv6FirewallRule");
const instanceFailoverGroup_1 = require("./instanceFailoverGroup");
const instancePool_1 = require("./instancePool");
const job_1 = require("./job");
const jobAgent_1 = require("./jobAgent");
const jobCredential_1 = require("./jobCredential");
const jobStep_1 = require("./jobStep");
const jobTargetGroup_1 = require("./jobTargetGroup");
const longTermRetentionPolicy_1 = require("./longTermRetentionPolicy");
const managedDatabase_1 = require("./managedDatabase");
const managedDatabaseSensitivityLabel_1 = require("./managedDatabaseSensitivityLabel");
const managedDatabaseVulnerabilityAssessment_1 = require("./managedDatabaseVulnerabilityAssessment");
const managedDatabaseVulnerabilityAssessmentRuleBaseline_1 = require("./managedDatabaseVulnerabilityAssessmentRuleBaseline");
const managedInstance_1 = require("./managedInstance");
const managedInstanceAdministrator_1 = require("./managedInstanceAdministrator");
const managedInstanceAzureADOnlyAuthentication_1 = require("./managedInstanceAzureADOnlyAuthentication");
const managedInstanceKey_1 = require("./managedInstanceKey");
const managedInstancePrivateEndpointConnection_1 = require("./managedInstancePrivateEndpointConnection");
const managedInstanceVulnerabilityAssessment_1 = require("./managedInstanceVulnerabilityAssessment");
const managedServerDnsAlias_1 = require("./managedServerDnsAlias");
const outboundFirewallRule_1 = require("./outboundFirewallRule");
const privateEndpointConnection_1 = require("./privateEndpointConnection");
const sensitivityLabel_1 = require("./sensitivityLabel");
const server_1 = require("./server");
const serverAdvisor_1 = require("./serverAdvisor");
const serverAzureADAdministrator_1 = require("./serverAzureADAdministrator");
const serverAzureADOnlyAuthentication_1 = require("./serverAzureADOnlyAuthentication");
const serverBlobAuditingPolicy_1 = require("./serverBlobAuditingPolicy");
const serverCommunicationLink_1 = require("./serverCommunicationLink");
const serverDnsAlias_1 = require("./serverDnsAlias");
const serverKey_1 = require("./serverKey");
const serverSecurityAlertPolicy_1 = require("./serverSecurityAlertPolicy");
const serverTrustCertificate_1 = require("./serverTrustCertificate");
const serverTrustGroup_1 = require("./serverTrustGroup");
const serverVulnerabilityAssessment_1 = require("./serverVulnerabilityAssessment");
const syncAgent_1 = require("./syncAgent");
const syncGroup_1 = require("./syncGroup");
const syncMember_1 = require("./syncMember");
const transparentDataEncryption_1 = require("./transparentDataEncryption");
const virtualNetworkRule_1 = require("./virtualNetworkRule");
const workloadClassifier_1 = require("./workloadClassifier");
const workloadGroup_1 = require("./workloadGroup");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:sql:BackupShortTermRetentionPolicy":
                return new backupShortTermRetentionPolicy_1.BackupShortTermRetentionPolicy(name, undefined, { urn });
            case "azure-native:sql:DataMaskingPolicy":
                return new dataMaskingPolicy_1.DataMaskingPolicy(name, undefined, { urn });
            case "azure-native:sql:Database":
                return new database_1.Database(name, undefined, { urn });
            case "azure-native:sql:DatabaseAdvisor":
                return new databaseAdvisor_1.DatabaseAdvisor(name, undefined, { urn });
            case "azure-native:sql:DatabaseBlobAuditingPolicy":
                return new databaseBlobAuditingPolicy_1.DatabaseBlobAuditingPolicy(name, undefined, { urn });
            case "azure-native:sql:DatabaseSecurityAlertPolicy":
                return new databaseSecurityAlertPolicy_1.DatabaseSecurityAlertPolicy(name, undefined, { urn });
            case "azure-native:sql:DatabaseVulnerabilityAssessment":
                return new databaseVulnerabilityAssessment_1.DatabaseVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:sql:DatabaseVulnerabilityAssessmentRuleBaseline":
                return new databaseVulnerabilityAssessmentRuleBaseline_1.DatabaseVulnerabilityAssessmentRuleBaseline(name, undefined, { urn });
            case "azure-native:sql:DisasterRecoveryConfiguration":
                return new disasterRecoveryConfiguration_1.DisasterRecoveryConfiguration(name, undefined, { urn });
            case "azure-native:sql:DistributedAvailabilityGroup":
                return new distributedAvailabilityGroup_1.DistributedAvailabilityGroup(name, undefined, { urn });
            case "azure-native:sql:ElasticPool":
                return new elasticPool_1.ElasticPool(name, undefined, { urn });
            case "azure-native:sql:EncryptionProtector":
                return new encryptionProtector_1.EncryptionProtector(name, undefined, { urn });
            case "azure-native:sql:ExtendedDatabaseBlobAuditingPolicy":
                return new extendedDatabaseBlobAuditingPolicy_1.ExtendedDatabaseBlobAuditingPolicy(name, undefined, { urn });
            case "azure-native:sql:ExtendedServerBlobAuditingPolicy":
                return new extendedServerBlobAuditingPolicy_1.ExtendedServerBlobAuditingPolicy(name, undefined, { urn });
            case "azure-native:sql:FailoverGroup":
                return new failoverGroup_1.FailoverGroup(name, undefined, { urn });
            case "azure-native:sql:FirewallRule":
                return new firewallRule_1.FirewallRule(name, undefined, { urn });
            case "azure-native:sql:GeoBackupPolicy":
                return new geoBackupPolicy_1.GeoBackupPolicy(name, undefined, { urn });
            case "azure-native:sql:IPv6FirewallRule":
                return new ipv6FirewallRule_1.IPv6FirewallRule(name, undefined, { urn });
            case "azure-native:sql:InstanceFailoverGroup":
                return new instanceFailoverGroup_1.InstanceFailoverGroup(name, undefined, { urn });
            case "azure-native:sql:InstancePool":
                return new instancePool_1.InstancePool(name, undefined, { urn });
            case "azure-native:sql:Job":
                return new job_1.Job(name, undefined, { urn });
            case "azure-native:sql:JobAgent":
                return new jobAgent_1.JobAgent(name, undefined, { urn });
            case "azure-native:sql:JobCredential":
                return new jobCredential_1.JobCredential(name, undefined, { urn });
            case "azure-native:sql:JobStep":
                return new jobStep_1.JobStep(name, undefined, { urn });
            case "azure-native:sql:JobTargetGroup":
                return new jobTargetGroup_1.JobTargetGroup(name, undefined, { urn });
            case "azure-native:sql:LongTermRetentionPolicy":
                return new longTermRetentionPolicy_1.LongTermRetentionPolicy(name, undefined, { urn });
            case "azure-native:sql:ManagedDatabase":
                return new managedDatabase_1.ManagedDatabase(name, undefined, { urn });
            case "azure-native:sql:ManagedDatabaseSensitivityLabel":
                return new managedDatabaseSensitivityLabel_1.ManagedDatabaseSensitivityLabel(name, undefined, { urn });
            case "azure-native:sql:ManagedDatabaseVulnerabilityAssessment":
                return new managedDatabaseVulnerabilityAssessment_1.ManagedDatabaseVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:sql:ManagedDatabaseVulnerabilityAssessmentRuleBaseline":
                return new managedDatabaseVulnerabilityAssessmentRuleBaseline_1.ManagedDatabaseVulnerabilityAssessmentRuleBaseline(name, undefined, { urn });
            case "azure-native:sql:ManagedInstance":
                return new managedInstance_1.ManagedInstance(name, undefined, { urn });
            case "azure-native:sql:ManagedInstanceAdministrator":
                return new managedInstanceAdministrator_1.ManagedInstanceAdministrator(name, undefined, { urn });
            case "azure-native:sql:ManagedInstanceAzureADOnlyAuthentication":
                return new managedInstanceAzureADOnlyAuthentication_1.ManagedInstanceAzureADOnlyAuthentication(name, undefined, { urn });
            case "azure-native:sql:ManagedInstanceKey":
                return new managedInstanceKey_1.ManagedInstanceKey(name, undefined, { urn });
            case "azure-native:sql:ManagedInstancePrivateEndpointConnection":
                return new managedInstancePrivateEndpointConnection_1.ManagedInstancePrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:sql:ManagedInstanceVulnerabilityAssessment":
                return new managedInstanceVulnerabilityAssessment_1.ManagedInstanceVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:sql:ManagedServerDnsAlias":
                return new managedServerDnsAlias_1.ManagedServerDnsAlias(name, undefined, { urn });
            case "azure-native:sql:OutboundFirewallRule":
                return new outboundFirewallRule_1.OutboundFirewallRule(name, undefined, { urn });
            case "azure-native:sql:PrivateEndpointConnection":
                return new privateEndpointConnection_1.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:sql:SensitivityLabel":
                return new sensitivityLabel_1.SensitivityLabel(name, undefined, { urn });
            case "azure-native:sql:Server":
                return new server_1.Server(name, undefined, { urn });
            case "azure-native:sql:ServerAdvisor":
                return new serverAdvisor_1.ServerAdvisor(name, undefined, { urn });
            case "azure-native:sql:ServerAzureADAdministrator":
                return new serverAzureADAdministrator_1.ServerAzureADAdministrator(name, undefined, { urn });
            case "azure-native:sql:ServerAzureADOnlyAuthentication":
                return new serverAzureADOnlyAuthentication_1.ServerAzureADOnlyAuthentication(name, undefined, { urn });
            case "azure-native:sql:ServerBlobAuditingPolicy":
                return new serverBlobAuditingPolicy_1.ServerBlobAuditingPolicy(name, undefined, { urn });
            case "azure-native:sql:ServerCommunicationLink":
                return new serverCommunicationLink_1.ServerCommunicationLink(name, undefined, { urn });
            case "azure-native:sql:ServerDnsAlias":
                return new serverDnsAlias_1.ServerDnsAlias(name, undefined, { urn });
            case "azure-native:sql:ServerKey":
                return new serverKey_1.ServerKey(name, undefined, { urn });
            case "azure-native:sql:ServerSecurityAlertPolicy":
                return new serverSecurityAlertPolicy_1.ServerSecurityAlertPolicy(name, undefined, { urn });
            case "azure-native:sql:ServerTrustCertificate":
                return new serverTrustCertificate_1.ServerTrustCertificate(name, undefined, { urn });
            case "azure-native:sql:ServerTrustGroup":
                return new serverTrustGroup_1.ServerTrustGroup(name, undefined, { urn });
            case "azure-native:sql:ServerVulnerabilityAssessment":
                return new serverVulnerabilityAssessment_1.ServerVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:sql:SyncAgent":
                return new syncAgent_1.SyncAgent(name, undefined, { urn });
            case "azure-native:sql:SyncGroup":
                return new syncGroup_1.SyncGroup(name, undefined, { urn });
            case "azure-native:sql:SyncMember":
                return new syncMember_1.SyncMember(name, undefined, { urn });
            case "azure-native:sql:TransparentDataEncryption":
                return new transparentDataEncryption_1.TransparentDataEncryption(name, undefined, { urn });
            case "azure-native:sql:VirtualNetworkRule":
                return new virtualNetworkRule_1.VirtualNetworkRule(name, undefined, { urn });
            case "azure-native:sql:WorkloadClassifier":
                return new workloadClassifier_1.WorkloadClassifier(name, undefined, { urn });
            case "azure-native:sql:WorkloadGroup":
                return new workloadGroup_1.WorkloadGroup(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "sql", _module);
//# sourceMappingURL=data:application/json;base64,