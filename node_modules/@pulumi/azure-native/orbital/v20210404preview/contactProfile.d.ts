import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
/**
 * Customer creates a Contact Profile Resource, which will contain all of the configurations required for scheduling a contact.
 */
export declare class ContactProfile extends pulumi.CustomResource {
    /**
     * Get an existing ContactProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ContactProfile;
    /**
     * Returns true if the given object is an instance of ContactProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ContactProfile;
    /**
     * Auto track configuration.
     */
    readonly autoTrackingConfiguration: pulumi.Output<string | undefined>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * The URI of the Event Hub used for telemetry
     */
    readonly eventHubUri: pulumi.Output<string | undefined>;
    /**
     * Links of the Contact Profile
     */
    readonly links: pulumi.Output<outputs.orbital.v20210404preview.ContactProfileLinkResponse[]>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * Minimum viable elevation for the contact in decimal degrees.
     */
    readonly minimumElevationDegrees: pulumi.Output<number | undefined>;
    /**
     * Minimum viable contact duration in ISO 8601 format.
     */
    readonly minimumViableContactDuration: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.orbital.v20210404preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ContactProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContactProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ContactProfile resource.
 */
export interface ContactProfileArgs {
    /**
     * Auto track configuration.
     */
    autoTrackingConfiguration?: pulumi.Input<enums.orbital.v20210404preview.AutoTrackingConfiguration>;
    /**
     * Contact Profile Name
     */
    contactProfileName?: pulumi.Input<string>;
    /**
     * The URI of the Event Hub used for telemetry
     */
    eventHubUri?: pulumi.Input<string>;
    /**
     * Links of the Contact Profile
     */
    links: pulumi.Input<pulumi.Input<inputs.orbital.v20210404preview.ContactProfileLinkArgs>[]>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Minimum viable elevation for the contact in decimal degrees.
     */
    minimumElevationDegrees?: pulumi.Input<number>;
    /**
     * Minimum viable contact duration in ISO 8601 format.
     */
    minimumViableContactDuration?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
