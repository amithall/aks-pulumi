"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./getIntegrationAccount"), exports);
__exportStar(require("./getIntegrationAccountAgreement"), exports);
__exportStar(require("./getIntegrationAccountAssembly"), exports);
__exportStar(require("./getIntegrationAccountBatchConfiguration"), exports);
__exportStar(require("./getIntegrationAccountCertificate"), exports);
__exportStar(require("./getIntegrationAccountMap"), exports);
__exportStar(require("./getIntegrationAccountPartner"), exports);
__exportStar(require("./getIntegrationAccountSchema"), exports);
__exportStar(require("./getIntegrationAccountSession"), exports);
__exportStar(require("./getIntegrationServiceEnvironment"), exports);
__exportStar(require("./getIntegrationServiceEnvironmentManagedApi"), exports);
__exportStar(require("./getWorkflow"), exports);
__exportStar(require("./integrationAccount"), exports);
__exportStar(require("./integrationAccountAgreement"), exports);
__exportStar(require("./integrationAccountAssembly"), exports);
__exportStar(require("./integrationAccountBatchConfiguration"), exports);
__exportStar(require("./integrationAccountCertificate"), exports);
__exportStar(require("./integrationAccountMap"), exports);
__exportStar(require("./integrationAccountPartner"), exports);
__exportStar(require("./integrationAccountSchema"), exports);
__exportStar(require("./integrationAccountSession"), exports);
__exportStar(require("./integrationServiceEnvironment"), exports);
__exportStar(require("./integrationServiceEnvironmentManagedApi"), exports);
__exportStar(require("./listIntegrationAccountAgreementContentCallbackUrl"), exports);
__exportStar(require("./listIntegrationAccountAssemblyContentCallbackUrl"), exports);
__exportStar(require("./listIntegrationAccountCallbackUrl"), exports);
__exportStar(require("./listIntegrationAccountKeyVaultKeys"), exports);
__exportStar(require("./listIntegrationAccountMapContentCallbackUrl"), exports);
__exportStar(require("./listIntegrationAccountPartnerContentCallbackUrl"), exports);
__exportStar(require("./listIntegrationAccountSchemaContentCallbackUrl"), exports);
__exportStar(require("./listWorkflowCallbackUrl"), exports);
__exportStar(require("./listWorkflowRunActionExpressionTraces"), exports);
__exportStar(require("./listWorkflowRunActionRepetitionExpressionTraces"), exports);
__exportStar(require("./listWorkflowTriggerCallbackUrl"), exports);
__exportStar(require("./listWorkflowVersionTriggerCallbackUrl"), exports);
__exportStar(require("./workflow"), exports);
// Export enums:
__exportStar(require("../../types/enums/logic/v20190501"), exports);
// Import resources to register:
const integrationAccount_1 = require("./integrationAccount");
const integrationAccountAgreement_1 = require("./integrationAccountAgreement");
const integrationAccountAssembly_1 = require("./integrationAccountAssembly");
const integrationAccountBatchConfiguration_1 = require("./integrationAccountBatchConfiguration");
const integrationAccountCertificate_1 = require("./integrationAccountCertificate");
const integrationAccountMap_1 = require("./integrationAccountMap");
const integrationAccountPartner_1 = require("./integrationAccountPartner");
const integrationAccountSchema_1 = require("./integrationAccountSchema");
const integrationAccountSession_1 = require("./integrationAccountSession");
const integrationServiceEnvironment_1 = require("./integrationServiceEnvironment");
const integrationServiceEnvironmentManagedApi_1 = require("./integrationServiceEnvironmentManagedApi");
const workflow_1 = require("./workflow");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:logic/v20190501:IntegrationAccount":
                return new integrationAccount_1.IntegrationAccount(name, undefined, { urn });
            case "azure-native:logic/v20190501:IntegrationAccountAgreement":
                return new integrationAccountAgreement_1.IntegrationAccountAgreement(name, undefined, { urn });
            case "azure-native:logic/v20190501:IntegrationAccountAssembly":
                return new integrationAccountAssembly_1.IntegrationAccountAssembly(name, undefined, { urn });
            case "azure-native:logic/v20190501:IntegrationAccountBatchConfiguration":
                return new integrationAccountBatchConfiguration_1.IntegrationAccountBatchConfiguration(name, undefined, { urn });
            case "azure-native:logic/v20190501:IntegrationAccountCertificate":
                return new integrationAccountCertificate_1.IntegrationAccountCertificate(name, undefined, { urn });
            case "azure-native:logic/v20190501:IntegrationAccountMap":
                return new integrationAccountMap_1.IntegrationAccountMap(name, undefined, { urn });
            case "azure-native:logic/v20190501:IntegrationAccountPartner":
                return new integrationAccountPartner_1.IntegrationAccountPartner(name, undefined, { urn });
            case "azure-native:logic/v20190501:IntegrationAccountSchema":
                return new integrationAccountSchema_1.IntegrationAccountSchema(name, undefined, { urn });
            case "azure-native:logic/v20190501:IntegrationAccountSession":
                return new integrationAccountSession_1.IntegrationAccountSession(name, undefined, { urn });
            case "azure-native:logic/v20190501:IntegrationServiceEnvironment":
                return new integrationServiceEnvironment_1.IntegrationServiceEnvironment(name, undefined, { urn });
            case "azure-native:logic/v20190501:IntegrationServiceEnvironmentManagedApi":
                return new integrationServiceEnvironmentManagedApi_1.IntegrationServiceEnvironmentManagedApi(name, undefined, { urn });
            case "azure-native:logic/v20190501:Workflow":
                return new workflow_1.Workflow(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "logic/v20190501", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9sb2dpYy92MjAxOTA1MDEvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHdFQUF3RTtBQUN4RSxpRkFBaUY7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUU3QyxrQkFBa0I7QUFDbEIsMERBQXdDO0FBQ3hDLG1FQUFpRDtBQUNqRCxrRUFBZ0Q7QUFDaEQsNEVBQTBEO0FBQzFELHFFQUFtRDtBQUNuRCw2REFBMkM7QUFDM0MsaUVBQStDO0FBQy9DLGdFQUE4QztBQUM5QyxpRUFBK0M7QUFDL0MscUVBQW1EO0FBQ25ELCtFQUE2RDtBQUM3RCxnREFBOEI7QUFDOUIsdURBQXFDO0FBQ3JDLGdFQUE4QztBQUM5QywrREFBNkM7QUFDN0MseUVBQXVEO0FBQ3ZELGtFQUFnRDtBQUNoRCwwREFBd0M7QUFDeEMsOERBQTRDO0FBQzVDLDZEQUEyQztBQUMzQyw4REFBNEM7QUFDNUMsa0VBQWdEO0FBQ2hELDRFQUEwRDtBQUMxRCxzRkFBb0U7QUFDcEUscUZBQW1FO0FBQ25FLHNFQUFvRDtBQUNwRCx1RUFBcUQ7QUFDckQsZ0ZBQThEO0FBQzlELG9GQUFrRTtBQUNsRSxtRkFBaUU7QUFDakUsNERBQTBDO0FBQzFDLDBFQUF3RDtBQUN4RCxvRkFBa0U7QUFDbEUsbUVBQWlEO0FBQ2pELDBFQUF3RDtBQUN4RCw2Q0FBMkI7QUFFM0IsZ0JBQWdCO0FBQ2hCLG9FQUFrRDtBQUVsRCxnQ0FBZ0M7QUFDaEMsNkRBQTBEO0FBQzFELCtFQUE0RTtBQUM1RSw2RUFBMEU7QUFDMUUsaUdBQThGO0FBQzlGLG1GQUFnRjtBQUNoRixtRUFBZ0U7QUFDaEUsMkVBQXdFO0FBQ3hFLHlFQUFzRTtBQUN0RSwyRUFBd0U7QUFDeEUsbUZBQWdGO0FBQ2hGLHVHQUFvRztBQUNwRyx5Q0FBc0M7QUFFdEMsTUFBTSxPQUFPLEdBQUc7SUFDWixPQUFPLEVBQUUsU0FBUyxDQUFDLFVBQVUsRUFBRTtJQUMvQixTQUFTLEVBQUUsQ0FBQyxJQUFZLEVBQUUsSUFBWSxFQUFFLEdBQVcsRUFBbUIsRUFBRTtRQUNwRSxRQUFRLElBQUksRUFBRTtZQUNWLEtBQUssaURBQWlEO2dCQUNsRCxPQUFPLElBQUksdUNBQWtCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDaEUsS0FBSywwREFBMEQ7Z0JBQzNELE9BQU8sSUFBSSx5REFBMkIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN6RSxLQUFLLHlEQUF5RDtnQkFDMUQsT0FBTyxJQUFJLHVEQUEwQixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3hFLEtBQUssbUVBQW1FO2dCQUNwRSxPQUFPLElBQUksMkVBQW9DLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDbEYsS0FBSyw0REFBNEQ7Z0JBQzdELE9BQU8sSUFBSSw2REFBNkIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUMzRSxLQUFLLG9EQUFvRDtnQkFDckQsT0FBTyxJQUFJLDZDQUFxQixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ25FLEtBQUssd0RBQXdEO2dCQUN6RCxPQUFPLElBQUkscURBQXlCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDdkUsS0FBSyx1REFBdUQ7Z0JBQ3hELE9BQU8sSUFBSSxtREFBd0IsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN0RSxLQUFLLHdEQUF3RDtnQkFDekQsT0FBTyxJQUFJLHFEQUF5QixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3ZFLEtBQUssNERBQTREO2dCQUM3RCxPQUFPLElBQUksNkRBQTZCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDM0UsS0FBSyxzRUFBc0U7Z0JBQ3ZFLE9BQU8sSUFBSSxpRkFBdUMsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNyRixLQUFLLHVDQUF1QztnQkFDeEMsT0FBTyxJQUFJLG1CQUFRLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDdEQ7Z0JBQ0ksTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsSUFBSSxFQUFFLENBQUMsQ0FBQztTQUN4RDtJQUNMLENBQUM7Q0FDSixDQUFDO0FBQ0YsTUFBTSxDQUFDLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxjQUFjLEVBQUUsaUJBQWlCLEVBQUUsT0FBTyxDQUFDLENBQUEifQ==