"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./getPrivateEndpointConnection"), exports);
__exportStar(require("./getProtectedItem"), exports);
__exportStar(require("./getProtectionContainer"), exports);
__exportStar(require("./getProtectionIntent"), exports);
__exportStar(require("./getProtectionPolicy"), exports);
__exportStar(require("./getReplicationFabric"), exports);
__exportStar(require("./getReplicationMigrationItem"), exports);
__exportStar(require("./getReplicationNetworkMapping"), exports);
__exportStar(require("./getReplicationPolicy"), exports);
__exportStar(require("./getReplicationProtectedItem"), exports);
__exportStar(require("./getReplicationProtectionContainerMapping"), exports);
__exportStar(require("./getReplicationRecoveryPlan"), exports);
__exportStar(require("./getReplicationRecoveryServicesProvider"), exports);
__exportStar(require("./getReplicationStorageClassificationMapping"), exports);
__exportStar(require("./getReplicationvCenter"), exports);
__exportStar(require("./getResourceGuardProxy"), exports);
__exportStar(require("./getVault"), exports);
__exportStar(require("./privateEndpointConnection"), exports);
__exportStar(require("./protectedItem"), exports);
__exportStar(require("./protectionContainer"), exports);
__exportStar(require("./protectionIntent"), exports);
__exportStar(require("./protectionPolicy"), exports);
__exportStar(require("./replicationFabric"), exports);
__exportStar(require("./replicationMigrationItem"), exports);
__exportStar(require("./replicationNetworkMapping"), exports);
__exportStar(require("./replicationPolicy"), exports);
__exportStar(require("./replicationProtectedItem"), exports);
__exportStar(require("./replicationProtectionContainerMapping"), exports);
__exportStar(require("./replicationRecoveryPlan"), exports);
__exportStar(require("./replicationRecoveryServicesProvider"), exports);
__exportStar(require("./replicationStorageClassificationMapping"), exports);
__exportStar(require("./replicationvCenter"), exports);
__exportStar(require("./resourceGuardProxy"), exports);
__exportStar(require("./vault"), exports);
// Export enums:
__exportStar(require("../../types/enums/recoveryservices/v20220201"), exports);
// Import resources to register:
const privateEndpointConnection_1 = require("./privateEndpointConnection");
const protectedItem_1 = require("./protectedItem");
const protectionContainer_1 = require("./protectionContainer");
const protectionIntent_1 = require("./protectionIntent");
const protectionPolicy_1 = require("./protectionPolicy");
const replicationFabric_1 = require("./replicationFabric");
const replicationMigrationItem_1 = require("./replicationMigrationItem");
const replicationNetworkMapping_1 = require("./replicationNetworkMapping");
const replicationPolicy_1 = require("./replicationPolicy");
const replicationProtectedItem_1 = require("./replicationProtectedItem");
const replicationProtectionContainerMapping_1 = require("./replicationProtectionContainerMapping");
const replicationRecoveryPlan_1 = require("./replicationRecoveryPlan");
const replicationRecoveryServicesProvider_1 = require("./replicationRecoveryServicesProvider");
const replicationStorageClassificationMapping_1 = require("./replicationStorageClassificationMapping");
const replicationvCenter_1 = require("./replicationvCenter");
const resourceGuardProxy_1 = require("./resourceGuardProxy");
const vault_1 = require("./vault");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:recoveryservices/v20220201:PrivateEndpointConnection":
                return new privateEndpointConnection_1.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ProtectedItem":
                return new protectedItem_1.ProtectedItem(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ProtectionContainer":
                return new protectionContainer_1.ProtectionContainer(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ProtectionIntent":
                return new protectionIntent_1.ProtectionIntent(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ProtectionPolicy":
                return new protectionPolicy_1.ProtectionPolicy(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ReplicationFabric":
                return new replicationFabric_1.ReplicationFabric(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ReplicationMigrationItem":
                return new replicationMigrationItem_1.ReplicationMigrationItem(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ReplicationNetworkMapping":
                return new replicationNetworkMapping_1.ReplicationNetworkMapping(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ReplicationPolicy":
                return new replicationPolicy_1.ReplicationPolicy(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ReplicationProtectedItem":
                return new replicationProtectedItem_1.ReplicationProtectedItem(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ReplicationProtectionContainerMapping":
                return new replicationProtectionContainerMapping_1.ReplicationProtectionContainerMapping(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ReplicationRecoveryPlan":
                return new replicationRecoveryPlan_1.ReplicationRecoveryPlan(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ReplicationRecoveryServicesProvider":
                return new replicationRecoveryServicesProvider_1.ReplicationRecoveryServicesProvider(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ReplicationStorageClassificationMapping":
                return new replicationStorageClassificationMapping_1.ReplicationStorageClassificationMapping(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ReplicationvCenter":
                return new replicationvCenter_1.ReplicationvCenter(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:ResourceGuardProxy":
                return new resourceGuardProxy_1.ResourceGuardProxy(name, undefined, { urn });
            case "azure-native:recoveryservices/v20220201:Vault":
                return new vault_1.Vault(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "recoveryservices/v20220201", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9yZWNvdmVyeXNlcnZpY2VzL3YyMDIyMDIwMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0VBQXdFO0FBQ3hFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBRTdDLGtCQUFrQjtBQUNsQixpRUFBK0M7QUFDL0MscURBQW1DO0FBQ25DLDJEQUF5QztBQUN6Qyx3REFBc0M7QUFDdEMsd0RBQXNDO0FBQ3RDLHlEQUF1QztBQUN2QyxnRUFBOEM7QUFDOUMsaUVBQStDO0FBQy9DLHlEQUF1QztBQUN2QyxnRUFBOEM7QUFDOUMsNkVBQTJEO0FBQzNELCtEQUE2QztBQUM3QywyRUFBeUQ7QUFDekQsK0VBQTZEO0FBQzdELDBEQUF3QztBQUN4QywwREFBd0M7QUFDeEMsNkNBQTJCO0FBQzNCLDhEQUE0QztBQUM1QyxrREFBZ0M7QUFDaEMsd0RBQXNDO0FBQ3RDLHFEQUFtQztBQUNuQyxxREFBbUM7QUFDbkMsc0RBQW9DO0FBQ3BDLDZEQUEyQztBQUMzQyw4REFBNEM7QUFDNUMsc0RBQW9DO0FBQ3BDLDZEQUEyQztBQUMzQywwRUFBd0Q7QUFDeEQsNERBQTBDO0FBQzFDLHdFQUFzRDtBQUN0RCw0RUFBMEQ7QUFDMUQsdURBQXFDO0FBQ3JDLHVEQUFxQztBQUNyQywwQ0FBd0I7QUFFeEIsZ0JBQWdCO0FBQ2hCLCtFQUE2RDtBQUU3RCxnQ0FBZ0M7QUFDaEMsMkVBQXdFO0FBQ3hFLG1EQUFnRDtBQUNoRCwrREFBNEQ7QUFDNUQseURBQXNEO0FBQ3RELHlEQUFzRDtBQUN0RCwyREFBd0Q7QUFDeEQseUVBQXNFO0FBQ3RFLDJFQUF3RTtBQUN4RSwyREFBd0Q7QUFDeEQseUVBQXNFO0FBQ3RFLG1HQUFnRztBQUNoRyx1RUFBb0U7QUFDcEUsK0ZBQTRGO0FBQzVGLHVHQUFvRztBQUNwRyw2REFBMEQ7QUFDMUQsNkRBQTBEO0FBQzFELG1DQUFnQztBQUVoQyxNQUFNLE9BQU8sR0FBRztJQUNaLE9BQU8sRUFBRSxTQUFTLENBQUMsVUFBVSxFQUFFO0lBQy9CLFNBQVMsRUFBRSxDQUFDLElBQVksRUFBRSxJQUFZLEVBQUUsR0FBVyxFQUFtQixFQUFFO1FBQ3BFLFFBQVEsSUFBSSxFQUFFO1lBQ1YsS0FBSyxtRUFBbUU7Z0JBQ3BFLE9BQU8sSUFBSSxxREFBeUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN2RSxLQUFLLHVEQUF1RDtnQkFDeEQsT0FBTyxJQUFJLDZCQUFhLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDM0QsS0FBSyw2REFBNkQ7Z0JBQzlELE9BQU8sSUFBSSx5Q0FBbUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNqRSxLQUFLLDBEQUEwRDtnQkFDM0QsT0FBTyxJQUFJLG1DQUFnQixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQzlELEtBQUssMERBQTBEO2dCQUMzRCxPQUFPLElBQUksbUNBQWdCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDOUQsS0FBSywyREFBMkQ7Z0JBQzVELE9BQU8sSUFBSSxxQ0FBaUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUMvRCxLQUFLLGtFQUFrRTtnQkFDbkUsT0FBTyxJQUFJLG1EQUF3QixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3RFLEtBQUssbUVBQW1FO2dCQUNwRSxPQUFPLElBQUkscURBQXlCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDdkUsS0FBSywyREFBMkQ7Z0JBQzVELE9BQU8sSUFBSSxxQ0FBaUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUMvRCxLQUFLLGtFQUFrRTtnQkFDbkUsT0FBTyxJQUFJLG1EQUF3QixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3RFLEtBQUssK0VBQStFO2dCQUNoRixPQUFPLElBQUksNkVBQXFDLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDbkYsS0FBSyxpRUFBaUU7Z0JBQ2xFLE9BQU8sSUFBSSxpREFBdUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNyRSxLQUFLLDZFQUE2RTtnQkFDOUUsT0FBTyxJQUFJLHlFQUFtQyxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ2pGLEtBQUssaUZBQWlGO2dCQUNsRixPQUFPLElBQUksaUZBQXVDLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDckYsS0FBSyw0REFBNEQ7Z0JBQzdELE9BQU8sSUFBSSx1Q0FBa0IsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNoRSxLQUFLLDREQUE0RDtnQkFDN0QsT0FBTyxJQUFJLHVDQUFrQixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ2hFLEtBQUssK0NBQStDO2dCQUNoRCxPQUFPLElBQUksYUFBSyxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ25EO2dCQUNJLE1BQU0sSUFBSSxLQUFLLENBQUMseUJBQXlCLElBQUksRUFBRSxDQUFDLENBQUM7U0FDeEQ7SUFDTCxDQUFDO0NBQ0osQ0FBQztBQUNGLE1BQU0sQ0FBQyxPQUFPLENBQUMsc0JBQXNCLENBQUMsY0FBYyxFQUFFLDRCQUE0QixFQUFFLE9BQU8sQ0FBQyxDQUFBIn0=