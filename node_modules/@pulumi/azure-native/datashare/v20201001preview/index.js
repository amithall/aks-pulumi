"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./account"), exports);
__exportStar(require("./adlsgen1FileDataSet"), exports);
__exportStar(require("./adlsgen1FolderDataSet"), exports);
__exportStar(require("./adlsgen2FileDataSet"), exports);
__exportStar(require("./adlsgen2FileDataSetMapping"), exports);
__exportStar(require("./adlsgen2FileSystemDataSet"), exports);
__exportStar(require("./adlsgen2FileSystemDataSetMapping"), exports);
__exportStar(require("./adlsgen2FolderDataSet"), exports);
__exportStar(require("./adlsgen2FolderDataSetMapping"), exports);
__exportStar(require("./adlsgen2StorageAccountDataSet"), exports);
__exportStar(require("./adlsgen2StorageAccountDataSetMapping"), exports);
__exportStar(require("./blobContainerDataSet"), exports);
__exportStar(require("./blobContainerDataSetMapping"), exports);
__exportStar(require("./blobDataSet"), exports);
__exportStar(require("./blobDataSetMapping"), exports);
__exportStar(require("./blobFolderDataSet"), exports);
__exportStar(require("./blobFolderDataSetMapping"), exports);
__exportStar(require("./blobStorageAccountDataSet"), exports);
__exportStar(require("./blobStorageAccountDataSetMapping"), exports);
__exportStar(require("./dataSet"), exports);
__exportStar(require("./dataSetMapping"), exports);
__exportStar(require("./getADLSGen1FileDataSet"), exports);
__exportStar(require("./getADLSGen1FolderDataSet"), exports);
__exportStar(require("./getADLSGen2FileDataSet"), exports);
__exportStar(require("./getADLSGen2FileDataSetMapping"), exports);
__exportStar(require("./getADLSGen2FileSystemDataSet"), exports);
__exportStar(require("./getADLSGen2FileSystemDataSetMapping"), exports);
__exportStar(require("./getADLSGen2FolderDataSet"), exports);
__exportStar(require("./getADLSGen2FolderDataSetMapping"), exports);
__exportStar(require("./getADLSGen2StorageAccountDataSet"), exports);
__exportStar(require("./getADLSGen2StorageAccountDataSetMapping"), exports);
__exportStar(require("./getAccount"), exports);
__exportStar(require("./getBlobContainerDataSet"), exports);
__exportStar(require("./getBlobContainerDataSetMapping"), exports);
__exportStar(require("./getBlobDataSet"), exports);
__exportStar(require("./getBlobDataSetMapping"), exports);
__exportStar(require("./getBlobFolderDataSet"), exports);
__exportStar(require("./getBlobFolderDataSetMapping"), exports);
__exportStar(require("./getBlobStorageAccountDataSet"), exports);
__exportStar(require("./getBlobStorageAccountDataSetMapping"), exports);
__exportStar(require("./getDataSet"), exports);
__exportStar(require("./getDataSetMapping"), exports);
__exportStar(require("./getInvitation"), exports);
__exportStar(require("./getKustoClusterDataSet"), exports);
__exportStar(require("./getKustoClusterDataSetMapping"), exports);
__exportStar(require("./getKustoDatabaseDataSet"), exports);
__exportStar(require("./getKustoDatabaseDataSetMapping"), exports);
__exportStar(require("./getScheduledSynchronizationSetting"), exports);
__exportStar(require("./getScheduledTrigger"), exports);
__exportStar(require("./getShare"), exports);
__exportStar(require("./getShareSubscription"), exports);
__exportStar(require("./getSqlDBTableDataSet"), exports);
__exportStar(require("./getSqlDBTableDataSetMapping"), exports);
__exportStar(require("./getSqlDWTableDataSet"), exports);
__exportStar(require("./getSqlDWTableDataSetMapping"), exports);
__exportStar(require("./getSynapseWorkspaceSqlPoolTableDataSet"), exports);
__exportStar(require("./getSynapseWorkspaceSqlPoolTableDataSetMapping"), exports);
__exportStar(require("./getSynchronizationSetting"), exports);
__exportStar(require("./getTrigger"), exports);
__exportStar(require("./invitation"), exports);
__exportStar(require("./kustoClusterDataSet"), exports);
__exportStar(require("./kustoClusterDataSetMapping"), exports);
__exportStar(require("./kustoDatabaseDataSet"), exports);
__exportStar(require("./kustoDatabaseDataSetMapping"), exports);
__exportStar(require("./listShareSubscriptionSourceShareSynchronizationSettings"), exports);
__exportStar(require("./listShareSubscriptionSynchronizationDetails"), exports);
__exportStar(require("./listShareSubscriptionSynchronizations"), exports);
__exportStar(require("./listShareSynchronizationDetails"), exports);
__exportStar(require("./listShareSynchronizations"), exports);
__exportStar(require("./scheduledSynchronizationSetting"), exports);
__exportStar(require("./scheduledTrigger"), exports);
__exportStar(require("./share"), exports);
__exportStar(require("./shareSubscription"), exports);
__exportStar(require("./sqlDBTableDataSet"), exports);
__exportStar(require("./sqlDBTableDataSetMapping"), exports);
__exportStar(require("./sqlDWTableDataSet"), exports);
__exportStar(require("./sqlDWTableDataSetMapping"), exports);
__exportStar(require("./synapseWorkspaceSqlPoolTableDataSet"), exports);
__exportStar(require("./synapseWorkspaceSqlPoolTableDataSetMapping"), exports);
__exportStar(require("./synchronizationSetting"), exports);
__exportStar(require("./trigger"), exports);
// Export enums:
__exportStar(require("../../types/enums/datashare/v20201001preview"), exports);
// Import resources to register:
const adlsgen1FileDataSet_1 = require("./adlsgen1FileDataSet");
const adlsgen1FolderDataSet_1 = require("./adlsgen1FolderDataSet");
const adlsgen2FileDataSet_1 = require("./adlsgen2FileDataSet");
const adlsgen2FileDataSetMapping_1 = require("./adlsgen2FileDataSetMapping");
const adlsgen2FileSystemDataSet_1 = require("./adlsgen2FileSystemDataSet");
const adlsgen2FileSystemDataSetMapping_1 = require("./adlsgen2FileSystemDataSetMapping");
const adlsgen2FolderDataSet_1 = require("./adlsgen2FolderDataSet");
const adlsgen2FolderDataSetMapping_1 = require("./adlsgen2FolderDataSetMapping");
const adlsgen2StorageAccountDataSet_1 = require("./adlsgen2StorageAccountDataSet");
const adlsgen2StorageAccountDataSetMapping_1 = require("./adlsgen2StorageAccountDataSetMapping");
const account_1 = require("./account");
const blobContainerDataSet_1 = require("./blobContainerDataSet");
const blobContainerDataSetMapping_1 = require("./blobContainerDataSetMapping");
const blobDataSet_1 = require("./blobDataSet");
const blobDataSetMapping_1 = require("./blobDataSetMapping");
const blobFolderDataSet_1 = require("./blobFolderDataSet");
const blobFolderDataSetMapping_1 = require("./blobFolderDataSetMapping");
const blobStorageAccountDataSet_1 = require("./blobStorageAccountDataSet");
const blobStorageAccountDataSetMapping_1 = require("./blobStorageAccountDataSetMapping");
const dataSet_1 = require("./dataSet");
const dataSetMapping_1 = require("./dataSetMapping");
const invitation_1 = require("./invitation");
const kustoClusterDataSet_1 = require("./kustoClusterDataSet");
const kustoClusterDataSetMapping_1 = require("./kustoClusterDataSetMapping");
const kustoDatabaseDataSet_1 = require("./kustoDatabaseDataSet");
const kustoDatabaseDataSetMapping_1 = require("./kustoDatabaseDataSetMapping");
const scheduledSynchronizationSetting_1 = require("./scheduledSynchronizationSetting");
const scheduledTrigger_1 = require("./scheduledTrigger");
const share_1 = require("./share");
const shareSubscription_1 = require("./shareSubscription");
const sqlDBTableDataSet_1 = require("./sqlDBTableDataSet");
const sqlDBTableDataSetMapping_1 = require("./sqlDBTableDataSetMapping");
const sqlDWTableDataSet_1 = require("./sqlDWTableDataSet");
const sqlDWTableDataSetMapping_1 = require("./sqlDWTableDataSetMapping");
const synapseWorkspaceSqlPoolTableDataSet_1 = require("./synapseWorkspaceSqlPoolTableDataSet");
const synapseWorkspaceSqlPoolTableDataSetMapping_1 = require("./synapseWorkspaceSqlPoolTableDataSetMapping");
const synchronizationSetting_1 = require("./synchronizationSetting");
const trigger_1 = require("./trigger");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:datashare/v20201001preview:ADLSGen1FileDataSet":
                return new adlsgen1FileDataSet_1.ADLSGen1FileDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:ADLSGen1FolderDataSet":
                return new adlsgen1FolderDataSet_1.ADLSGen1FolderDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:ADLSGen2FileDataSet":
                return new adlsgen2FileDataSet_1.ADLSGen2FileDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:ADLSGen2FileDataSetMapping":
                return new adlsgen2FileDataSetMapping_1.ADLSGen2FileDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:ADLSGen2FileSystemDataSet":
                return new adlsgen2FileSystemDataSet_1.ADLSGen2FileSystemDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:ADLSGen2FileSystemDataSetMapping":
                return new adlsgen2FileSystemDataSetMapping_1.ADLSGen2FileSystemDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:ADLSGen2FolderDataSet":
                return new adlsgen2FolderDataSet_1.ADLSGen2FolderDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:ADLSGen2FolderDataSetMapping":
                return new adlsgen2FolderDataSetMapping_1.ADLSGen2FolderDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:ADLSGen2StorageAccountDataSet":
                return new adlsgen2StorageAccountDataSet_1.ADLSGen2StorageAccountDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:ADLSGen2StorageAccountDataSetMapping":
                return new adlsgen2StorageAccountDataSetMapping_1.ADLSGen2StorageAccountDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:Account":
                return new account_1.Account(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:BlobContainerDataSet":
                return new blobContainerDataSet_1.BlobContainerDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:BlobContainerDataSetMapping":
                return new blobContainerDataSetMapping_1.BlobContainerDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:BlobDataSet":
                return new blobDataSet_1.BlobDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:BlobDataSetMapping":
                return new blobDataSetMapping_1.BlobDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:BlobFolderDataSet":
                return new blobFolderDataSet_1.BlobFolderDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:BlobFolderDataSetMapping":
                return new blobFolderDataSetMapping_1.BlobFolderDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:BlobStorageAccountDataSet":
                return new blobStorageAccountDataSet_1.BlobStorageAccountDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:BlobStorageAccountDataSetMapping":
                return new blobStorageAccountDataSetMapping_1.BlobStorageAccountDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:DataSet":
                return new dataSet_1.DataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:DataSetMapping":
                return new dataSetMapping_1.DataSetMapping(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:Invitation":
                return new invitation_1.Invitation(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:KustoClusterDataSet":
                return new kustoClusterDataSet_1.KustoClusterDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:KustoClusterDataSetMapping":
                return new kustoClusterDataSetMapping_1.KustoClusterDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:KustoDatabaseDataSet":
                return new kustoDatabaseDataSet_1.KustoDatabaseDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:KustoDatabaseDataSetMapping":
                return new kustoDatabaseDataSetMapping_1.KustoDatabaseDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:ScheduledSynchronizationSetting":
                return new scheduledSynchronizationSetting_1.ScheduledSynchronizationSetting(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:ScheduledTrigger":
                return new scheduledTrigger_1.ScheduledTrigger(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:Share":
                return new share_1.Share(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:ShareSubscription":
                return new shareSubscription_1.ShareSubscription(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:SqlDBTableDataSet":
                return new sqlDBTableDataSet_1.SqlDBTableDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:SqlDBTableDataSetMapping":
                return new sqlDBTableDataSetMapping_1.SqlDBTableDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:SqlDWTableDataSet":
                return new sqlDWTableDataSet_1.SqlDWTableDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:SqlDWTableDataSetMapping":
                return new sqlDWTableDataSetMapping_1.SqlDWTableDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:SynapseWorkspaceSqlPoolTableDataSet":
                return new synapseWorkspaceSqlPoolTableDataSet_1.SynapseWorkspaceSqlPoolTableDataSet(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:SynapseWorkspaceSqlPoolTableDataSetMapping":
                return new synapseWorkspaceSqlPoolTableDataSetMapping_1.SynapseWorkspaceSqlPoolTableDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:SynchronizationSetting":
                return new synchronizationSetting_1.SynchronizationSetting(name, undefined, { urn });
            case "azure-native:datashare/v20201001preview:Trigger":
                return new trigger_1.Trigger(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "datashare/v20201001preview", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9kYXRhc2hhcmUvdjIwMjAxMDAxcHJldmlldy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0VBQXdFO0FBQ3hFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBRTdDLGtCQUFrQjtBQUNsQiw0Q0FBMEI7QUFDMUIsd0RBQXNDO0FBQ3RDLDBEQUF3QztBQUN4Qyx3REFBc0M7QUFDdEMsK0RBQTZDO0FBQzdDLDhEQUE0QztBQUM1QyxxRUFBbUQ7QUFDbkQsMERBQXdDO0FBQ3hDLGlFQUErQztBQUMvQyxrRUFBZ0Q7QUFDaEQseUVBQXVEO0FBQ3ZELHlEQUF1QztBQUN2QyxnRUFBOEM7QUFDOUMsZ0RBQThCO0FBQzlCLHVEQUFxQztBQUNyQyxzREFBb0M7QUFDcEMsNkRBQTJDO0FBQzNDLDhEQUE0QztBQUM1QyxxRUFBbUQ7QUFDbkQsNENBQTBCO0FBQzFCLG1EQUFpQztBQUNqQywyREFBeUM7QUFDekMsNkRBQTJDO0FBQzNDLDJEQUF5QztBQUN6QyxrRUFBZ0Q7QUFDaEQsaUVBQStDO0FBQy9DLHdFQUFzRDtBQUN0RCw2REFBMkM7QUFDM0Msb0VBQWtEO0FBQ2xELHFFQUFtRDtBQUNuRCw0RUFBMEQ7QUFDMUQsK0NBQTZCO0FBQzdCLDREQUEwQztBQUMxQyxtRUFBaUQ7QUFDakQsbURBQWlDO0FBQ2pDLDBEQUF3QztBQUN4Qyx5REFBdUM7QUFDdkMsZ0VBQThDO0FBQzlDLGlFQUErQztBQUMvQyx3RUFBc0Q7QUFDdEQsK0NBQTZCO0FBQzdCLHNEQUFvQztBQUNwQyxrREFBZ0M7QUFDaEMsMkRBQXlDO0FBQ3pDLGtFQUFnRDtBQUNoRCw0REFBMEM7QUFDMUMsbUVBQWlEO0FBQ2pELHVFQUFxRDtBQUNyRCx3REFBc0M7QUFDdEMsNkNBQTJCO0FBQzNCLHlEQUF1QztBQUN2Qyx5REFBdUM7QUFDdkMsZ0VBQThDO0FB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