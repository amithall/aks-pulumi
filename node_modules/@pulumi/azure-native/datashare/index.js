"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20210801 = exports.v20201001preview = exports.v20200901 = exports.v20191101 = exports.v20181101preview = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./account"), exports);
__exportStar(require("./adlsgen1FileDataSet"), exports);
__exportStar(require("./adlsgen1FolderDataSet"), exports);
__exportStar(require("./adlsgen2FileDataSet"), exports);
__exportStar(require("./adlsgen2FileDataSetMapping"), exports);
__exportStar(require("./adlsgen2FileSystemDataSet"), exports);
__exportStar(require("./adlsgen2FileSystemDataSetMapping"), exports);
__exportStar(require("./adlsgen2FolderDataSet"), exports);
__exportStar(require("./adlsgen2FolderDataSetMapping"), exports);
__exportStar(require("./blobContainerDataSet"), exports);
__exportStar(require("./blobContainerDataSetMapping"), exports);
__exportStar(require("./blobDataSet"), exports);
__exportStar(require("./blobDataSetMapping"), exports);
__exportStar(require("./blobFolderDataSet"), exports);
__exportStar(require("./blobFolderDataSetMapping"), exports);
__exportStar(require("./dataSet"), exports);
__exportStar(require("./dataSetMapping"), exports);
__exportStar(require("./getADLSGen1FileDataSet"), exports);
__exportStar(require("./getADLSGen1FolderDataSet"), exports);
__exportStar(require("./getADLSGen2FileDataSet"), exports);
__exportStar(require("./getADLSGen2FileDataSetMapping"), exports);
__exportStar(require("./getADLSGen2FileSystemDataSet"), exports);
__exportStar(require("./getADLSGen2FileSystemDataSetMapping"), exports);
__exportStar(require("./getADLSGen2FolderDataSet"), exports);
__exportStar(require("./getADLSGen2FolderDataSetMapping"), exports);
__exportStar(require("./getAccount"), exports);
__exportStar(require("./getBlobContainerDataSet"), exports);
__exportStar(require("./getBlobContainerDataSetMapping"), exports);
__exportStar(require("./getBlobDataSet"), exports);
__exportStar(require("./getBlobDataSetMapping"), exports);
__exportStar(require("./getBlobFolderDataSet"), exports);
__exportStar(require("./getBlobFolderDataSetMapping"), exports);
__exportStar(require("./getDataSet"), exports);
__exportStar(require("./getDataSetMapping"), exports);
__exportStar(require("./getInvitation"), exports);
__exportStar(require("./getKustoClusterDataSet"), exports);
__exportStar(require("./getKustoClusterDataSetMapping"), exports);
__exportStar(require("./getKustoDatabaseDataSet"), exports);
__exportStar(require("./getKustoDatabaseDataSetMapping"), exports);
__exportStar(require("./getScheduledSynchronizationSetting"), exports);
__exportStar(require("./getScheduledTrigger"), exports);
__exportStar(require("./getShare"), exports);
__exportStar(require("./getShareSubscription"), exports);
__exportStar(require("./getSqlDBTableDataSet"), exports);
__exportStar(require("./getSqlDBTableDataSetMapping"), exports);
__exportStar(require("./getSqlDWTableDataSet"), exports);
__exportStar(require("./getSqlDWTableDataSetMapping"), exports);
__exportStar(require("./getSynapseWorkspaceSqlPoolTableDataSet"), exports);
__exportStar(require("./getSynapseWorkspaceSqlPoolTableDataSetMapping"), exports);
__exportStar(require("./getSynchronizationSetting"), exports);
__exportStar(require("./getTrigger"), exports);
__exportStar(require("./invitation"), exports);
__exportStar(require("./kustoClusterDataSet"), exports);
__exportStar(require("./kustoClusterDataSetMapping"), exports);
__exportStar(require("./kustoDatabaseDataSet"), exports);
__exportStar(require("./kustoDatabaseDataSetMapping"), exports);
__exportStar(require("./listShareSubscriptionSourceShareSynchronizationSettings"), exports);
__exportStar(require("./listShareSubscriptionSynchronizationDetails"), exports);
__exportStar(require("./listShareSubscriptionSynchronizations"), exports);
__exportStar(require("./listShareSynchronizationDetails"), exports);
__exportStar(require("./listShareSynchronizations"), exports);
__exportStar(require("./scheduledSynchronizationSetting"), exports);
__exportStar(require("./scheduledTrigger"), exports);
__exportStar(require("./share"), exports);
__exportStar(require("./shareSubscription"), exports);
__exportStar(require("./sqlDBTableDataSet"), exports);
__exportStar(require("./sqlDBTableDataSetMapping"), exports);
__exportStar(require("./sqlDWTableDataSet"), exports);
__exportStar(require("./sqlDWTableDataSetMapping"), exports);
__exportStar(require("./synapseWorkspaceSqlPoolTableDataSet"), exports);
__exportStar(require("./synapseWorkspaceSqlPoolTableDataSetMapping"), exports);
__exportStar(require("./synchronizationSetting"), exports);
__exportStar(require("./trigger"), exports);
// Export enums:
__exportStar(require("../types/enums/datashare"), exports);
// Export sub-modules:
const v20181101preview = require("./v20181101preview");
exports.v20181101preview = v20181101preview;
const v20191101 = require("./v20191101");
exports.v20191101 = v20191101;
const v20200901 = require("./v20200901");
exports.v20200901 = v20200901;
const v20201001preview = require("./v20201001preview");
exports.v20201001preview = v20201001preview;
const v20210801 = require("./v20210801");
exports.v20210801 = v20210801;
// Import resources to register:
const adlsgen1FileDataSet_1 = require("./adlsgen1FileDataSet");
const adlsgen1FolderDataSet_1 = require("./adlsgen1FolderDataSet");
const adlsgen2FileDataSet_1 = require("./adlsgen2FileDataSet");
const adlsgen2FileDataSetMapping_1 = require("./adlsgen2FileDataSetMapping");
const adlsgen2FileSystemDataSet_1 = require("./adlsgen2FileSystemDataSet");
const adlsgen2FileSystemDataSetMapping_1 = require("./adlsgen2FileSystemDataSetMapping");
const adlsgen2FolderDataSet_1 = require("./adlsgen2FolderDataSet");
const adlsgen2FolderDataSetMapping_1 = require("./adlsgen2FolderDataSetMapping");
const account_1 = require("./account");
const blobContainerDataSet_1 = require("./blobContainerDataSet");
const blobContainerDataSetMapping_1 = require("./blobContainerDataSetMapping");
const blobDataSet_1 = require("./blobDataSet");
const blobDataSetMapping_1 = require("./blobDataSetMapping");
const blobFolderDataSet_1 = require("./blobFolderDataSet");
const blobFolderDataSetMapping_1 = require("./blobFolderDataSetMapping");
const dataSet_1 = require("./dataSet");
const dataSetMapping_1 = require("./dataSetMapping");
const invitation_1 = require("./invitation");
const kustoClusterDataSet_1 = require("./kustoClusterDataSet");
const kustoClusterDataSetMapping_1 = require("./kustoClusterDataSetMapping");
const kustoDatabaseDataSet_1 = require("./kustoDatabaseDataSet");
const kustoDatabaseDataSetMapping_1 = require("./kustoDatabaseDataSetMapping");
const scheduledSynchronizationSetting_1 = require("./scheduledSynchronizationSetting");
const scheduledTrigger_1 = require("./scheduledTrigger");
const share_1 = require("./share");
const shareSubscription_1 = require("./shareSubscription");
const sqlDBTableDataSet_1 = require("./sqlDBTableDataSet");
const sqlDBTableDataSetMapping_1 = require("./sqlDBTableDataSetMapping");
const sqlDWTableDataSet_1 = require("./sqlDWTableDataSet");
const sqlDWTableDataSetMapping_1 = require("./sqlDWTableDataSetMapping");
const synapseWorkspaceSqlPoolTableDataSet_1 = require("./synapseWorkspaceSqlPoolTableDataSet");
const synapseWorkspaceSqlPoolTableDataSetMapping_1 = require("./synapseWorkspaceSqlPoolTableDataSetMapping");
const synchronizationSetting_1 = require("./synchronizationSetting");
const trigger_1 = require("./trigger");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:datashare:ADLSGen1FileDataSet":
                return new adlsgen1FileDataSet_1.ADLSGen1FileDataSet(name, undefined, { urn });
            case "azure-native:datashare:ADLSGen1FolderDataSet":
                return new adlsgen1FolderDataSet_1.ADLSGen1FolderDataSet(name, undefined, { urn });
            case "azure-native:datashare:ADLSGen2FileDataSet":
                return new adlsgen2FileDataSet_1.ADLSGen2FileDataSet(name, undefined, { urn });
            case "azure-native:datashare:ADLSGen2FileDataSetMapping":
                return new adlsgen2FileDataSetMapping_1.ADLSGen2FileDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare:ADLSGen2FileSystemDataSet":
                return new adlsgen2FileSystemDataSet_1.ADLSGen2FileSystemDataSet(name, undefined, { urn });
            case "azure-native:datashare:ADLSGen2FileSystemDataSetMapping":
                return new adlsgen2FileSystemDataSetMapping_1.ADLSGen2FileSystemDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare:ADLSGen2FolderDataSet":
                return new adlsgen2FolderDataSet_1.ADLSGen2FolderDataSet(name, undefined, { urn });
            case "azure-native:datashare:ADLSGen2FolderDataSetMapping":
                return new adlsgen2FolderDataSetMapping_1.ADLSGen2FolderDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare:Account":
                return new account_1.Account(name, undefined, { urn });
            case "azure-native:datashare:BlobContainerDataSet":
                return new blobContainerDataSet_1.BlobContainerDataSet(name, undefined, { urn });
            case "azure-native:datashare:BlobContainerDataSetMapping":
                return new blobContainerDataSetMapping_1.BlobContainerDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare:BlobDataSet":
                return new blobDataSet_1.BlobDataSet(name, undefined, { urn });
            case "azure-native:datashare:BlobDataSetMapping":
                return new blobDataSetMapping_1.BlobDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare:BlobFolderDataSet":
                return new blobFolderDataSet_1.BlobFolderDataSet(name, undefined, { urn });
            case "azure-native:datashare:BlobFolderDataSetMapping":
                return new blobFolderDataSetMapping_1.BlobFolderDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare:DataSet":
                return new dataSet_1.DataSet(name, undefined, { urn });
            case "azure-native:datashare:DataSetMapping":
                return new dataSetMapping_1.DataSetMapping(name, undefined, { urn });
            case "azure-native:datashare:Invitation":
                return new invitation_1.Invitation(name, undefined, { urn });
            case "azure-native:datashare:KustoClusterDataSet":
                return new kustoClusterDataSet_1.KustoClusterDataSet(name, undefined, { urn });
            case "azure-native:datashare:KustoClusterDataSetMapping":
                return new kustoClusterDataSetMapping_1.KustoClusterDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare:KustoDatabaseDataSet":
                return new kustoDatabaseDataSet_1.KustoDatabaseDataSet(name, undefined, { urn });
            case "azure-native:datashare:KustoDatabaseDataSetMapping":
                return new kustoDatabaseDataSetMapping_1.KustoDatabaseDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare:ScheduledSynchronizationSetting":
                return new scheduledSynchronizationSetting_1.ScheduledSynchronizationSetting(name, undefined, { urn });
            case "azure-native:datashare:ScheduledTrigger":
                return new scheduledTrigger_1.ScheduledTrigger(name, undefined, { urn });
            case "azure-native:datashare:Share":
                return new share_1.Share(name, undefined, { urn });
            case "azure-native:datashare:ShareSubscription":
                return new shareSubscription_1.ShareSubscription(name, undefined, { urn });
            case "azure-native:datashare:SqlDBTableDataSet":
                return new sqlDBTableDataSet_1.SqlDBTableDataSet(name, undefined, { urn });
            case "azure-native:datashare:SqlDBTableDataSetMapping":
                return new sqlDBTableDataSetMapping_1.SqlDBTableDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare:SqlDWTableDataSet":
                return new sqlDWTableDataSet_1.SqlDWTableDataSet(name, undefined, { urn });
            case "azure-native:datashare:SqlDWTableDataSetMapping":
                return new sqlDWTableDataSetMapping_1.SqlDWTableDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare:SynapseWorkspaceSqlPoolTableDataSet":
                return new synapseWorkspaceSqlPoolTableDataSet_1.SynapseWorkspaceSqlPoolTableDataSet(name, undefined, { urn });
            case "azure-native:datashare:SynapseWorkspaceSqlPoolTableDataSetMapping":
                return new synapseWorkspaceSqlPoolTableDataSetMapping_1.SynapseWorkspaceSqlPoolTableDataSetMapping(name, undefined, { urn });
            case "azure-native:datashare:SynchronizationSetting":
                return new synchronizationSetting_1.SynchronizationSetting(name, undefined, { urn });
            case "azure-native:datashare:Trigger":
                return new trigger_1.Trigger(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "datashare", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9kYXRhc2hhcmUvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHdFQUF3RTtBQUN4RSxpRkFBaUY7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRWpGLHlDQUF5QztBQUN6QywwQ0FBMEM7QUFFMUMsa0JBQWtCO0FBQ2xCLDRDQUEwQjtBQUMxQix3REFBc0M7QUFDdEMsMERBQXdDO0FBQ3hDLHdEQUFzQztBQUN0QywrREFBNkM7QUFDN0MsOERBQTRDO0FBQzVDLHFFQUFtRDtBQUNuRCwwREFBd0M7QUFDeEMsaUVBQStDO0FBQy9DLHlEQUF1QztBQUN2QyxnRUFBOEM7QUFDOUMsZ0RBQThCO0FBQzlCLHVEQUFxQztBQUNyQyxzREFBb0M7QUFDcEMsNkRBQTJDO0FBQzNDLDRDQUEwQjtBQUMxQixtREFBaUM7QUFDakMsMkRBQXlDO0FBQ3pDLDZEQUEyQztBQUMzQywyREFBeUM7QUFDekMsa0VBQWdEO0FBQ2hELGlFQUErQztBQUMvQyx3RUFBc0Q7QUFDdEQsNkRBQTJDO0FBQzNDLG9FQUFrRDtBQUNsRCwrQ0FBNkI7QUFDN0IsNERBQTBDO0FBQzFDLG1FQUFpRDtBQUNqRCxtREFBaUM7QUFDakMsMERBQXdDO0FBQ3hDLHlEQUF1QztBQUN2QyxnRUFBOEM7QUFDOUMsK0NBQTZCO0FBQzdCLHNEQUFvQztBQUNwQyxrREFBZ0M7QUFDaEMsMkRBQXlDO0FBQ3pDLGtFQUFnRDtBQUNoRCw0REFBMEM7QUFDMUMsbUVBQWlEO0FBQ2pELHVFQUFxRDtBQUNyRCx3REFBc0M7QUFDdEMsNkNBQTJCO0FBQzNCLHlEQUF1QztBQUN2Qyx5REFBdUM7QUFDdkMsZ0VBQThDO0FBQzlDLHlEQUF1QztBQUN2QyxnRUFBOEM7QUFDOUMsMkVBQXlEO0FBQ3pELGtGQUFnRTtBQUNoRSw4REFBNEM7QUFDNUMsK0NBQTZCO0FBQzdCLCtDQUE2QjtBQUM3Qix3REFBc0M7QUFDdEMsK0RBQTZDO0FBQzdDLHlE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