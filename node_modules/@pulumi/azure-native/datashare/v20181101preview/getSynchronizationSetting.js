"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSynchronizationSettingOutput = exports.getSynchronizationSetting = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * A Synchronization Setting data transfer object.
 */
/** @deprecated Version v20181101preview will be removed in the next major version of the provider. Upgrade to version v20200901 or later. */
function getSynchronizationSetting(args, opts) {
    pulumi.log.warn("getSynchronizationSetting is deprecated: Version v20181101preview will be removed in the next major version of the provider. Upgrade to version v20200901 or later.");
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:datashare/v20181101preview:getSynchronizationSetting", {
        "accountName": args.accountName,
        "resourceGroupName": args.resourceGroupName,
        "shareName": args.shareName,
        "synchronizationSettingName": args.synchronizationSettingName,
    }, opts);
}
exports.getSynchronizationSetting = getSynchronizationSetting;
function getSynchronizationSettingOutput(args, opts) {
    return pulumi.output(args).apply(a => getSynchronizationSetting(a, opts));
}
exports.getSynchronizationSettingOutput = getSynchronizationSettingOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0U3luY2hyb25pemF0aW9uU2V0dGluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2RhdGFzaGFyZS92MjAxODExMDFwcmV2aWV3L2dldFN5bmNocm9uaXphdGlvblNldHRpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHdFQUF3RTtBQUN4RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBRTdDOztHQUVHO0FBQ0gsNklBQTZJO0FBQzdJLFNBQWdCLHlCQUF5QixDQUFDLElBQW1DLEVBQUUsSUFBMkI7SUFDdEcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMscUtBQXFLLENBQUMsQ0FBQTtJQUN0TCxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1AsSUFBSSxHQUFHLEVBQUUsQ0FBQTtLQUNaO0lBRUQsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxtRUFBbUUsRUFBRTtRQUM5RixhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0IsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVM7UUFDM0IsNEJBQTRCLEVBQUUsSUFBSSxDQUFDLDBCQUEwQjtLQUNoRSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQWJELDhEQWFDO0FBMkNELFNBQWdCLCtCQUErQixDQUFDLElBQXlDLEVBQUUsSUFBMkI7SUFDbEgsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLHlCQUF5QixDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO0FBQzdFLENBQUM7QUFGRCwwRUFFQyJ9