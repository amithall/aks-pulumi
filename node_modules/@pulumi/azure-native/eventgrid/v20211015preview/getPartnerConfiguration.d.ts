import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Partner configuration information
 */
export declare function getPartnerConfiguration(args: GetPartnerConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetPartnerConfigurationResult>;
export interface GetPartnerConfigurationArgs {
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: string;
}
/**
 * Partner configuration information
 */
export interface GetPartnerConfigurationResult {
    /**
     * Fully qualified identifier of the resource.
     */
    readonly id: string;
    /**
     * Location of the resource.
     */
    readonly location?: string;
    /**
     * Name of the resource.
     */
    readonly name: string;
    /**
     * The details of authorized partners.
     */
    readonly partnerAuthorization?: outputs.eventgrid.v20211015preview.PartnerAuthorizationResponse;
    /**
     * Provisioning state of the partner configuration.
     */
    readonly provisioningState?: string;
    /**
     * The system metadata relating to partner configuration resource.
     */
    readonly systemData: outputs.eventgrid.v20211015preview.SystemDataResponse;
    /**
     * Tags of the resource.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Type of the resource.
     */
    readonly type: string;
}
export declare function getPartnerConfigurationOutput(args: GetPartnerConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPartnerConfigurationResult>;
export interface GetPartnerConfigurationOutputArgs {
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: pulumi.Input<string>;
}
