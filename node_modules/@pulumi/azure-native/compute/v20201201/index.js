"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./availabilitySet"), exports);
__exportStar(require("./dedicatedHost"), exports);
__exportStar(require("./dedicatedHostGroup"), exports);
__exportStar(require("./disk"), exports);
__exportStar(require("./diskAccess"), exports);
__exportStar(require("./diskAccessAPrivateEndpointConnection"), exports);
__exportStar(require("./diskEncryptionSet"), exports);
__exportStar(require("./getAvailabilitySet"), exports);
__exportStar(require("./getDedicatedHost"), exports);
__exportStar(require("./getDedicatedHostGroup"), exports);
__exportStar(require("./getDisk"), exports);
__exportStar(require("./getDiskAccess"), exports);
__exportStar(require("./getDiskAccessAPrivateEndpointConnection"), exports);
__exportStar(require("./getDiskEncryptionSet"), exports);
__exportStar(require("./getImage"), exports);
__exportStar(require("./getLogAnalyticExportRequestRateByInterval"), exports);
__exportStar(require("./getLogAnalyticExportThrottledRequests"), exports);
__exportStar(require("./getProximityPlacementGroup"), exports);
__exportStar(require("./getSnapshot"), exports);
__exportStar(require("./getSshPublicKey"), exports);
__exportStar(require("./getVirtualMachine"), exports);
__exportStar(require("./getVirtualMachineExtension"), exports);
__exportStar(require("./getVirtualMachineRunCommandByVirtualMachine"), exports);
__exportStar(require("./getVirtualMachineScaleSet"), exports);
__exportStar(require("./getVirtualMachineScaleSetExtension"), exports);
__exportStar(require("./getVirtualMachineScaleSetVM"), exports);
__exportStar(require("./getVirtualMachineScaleSetVMExtension"), exports);
__exportStar(require("./getVirtualMachineScaleSetVMRunCommand"), exports);
__exportStar(require("./image"), exports);
__exportStar(require("./proximityPlacementGroup"), exports);
__exportStar(require("./snapshot"), exports);
__exportStar(require("./sshPublicKey"), exports);
__exportStar(require("./virtualMachine"), exports);
__exportStar(require("./virtualMachineExtension"), exports);
__exportStar(require("./virtualMachineRunCommandByVirtualMachine"), exports);
__exportStar(require("./virtualMachineScaleSet"), exports);
__exportStar(require("./virtualMachineScaleSetExtension"), exports);
__exportStar(require("./virtualMachineScaleSetVM"), exports);
__exportStar(require("./virtualMachineScaleSetVMExtension"), exports);
__exportStar(require("./virtualMachineScaleSetVMRunCommand"), exports);
// Export enums:
__exportStar(require("../../types/enums/compute/v20201201"), exports);
// Import resources to register:
const availabilitySet_1 = require("./availabilitySet");
const dedicatedHost_1 = require("./dedicatedHost");
const dedicatedHostGroup_1 = require("./dedicatedHostGroup");
const disk_1 = require("./disk");
const diskAccess_1 = require("./diskAccess");
const diskAccessAPrivateEndpointConnection_1 = require("./diskAccessAPrivateEndpointConnection");
const diskEncryptionSet_1 = require("./diskEncryptionSet");
const image_1 = require("./image");
const proximityPlacementGroup_1 = require("./proximityPlacementGroup");
const snapshot_1 = require("./snapshot");
const sshPublicKey_1 = require("./sshPublicKey");
const virtualMachine_1 = require("./virtualMachine");
const virtualMachineExtension_1 = require("./virtualMachineExtension");
const virtualMachineRunCommandByVirtualMachine_1 = require("./virtualMachineRunCommandByVirtualMachine");
const virtualMachineScaleSet_1 = require("./virtualMachineScaleSet");
const virtualMachineScaleSetExtension_1 = require("./virtualMachineScaleSetExtension");
const virtualMachineScaleSetVM_1 = require("./virtualMachineScaleSetVM");
const virtualMachineScaleSetVMExtension_1 = require("./virtualMachineScaleSetVMExtension");
const virtualMachineScaleSetVMRunCommand_1 = require("./virtualMachineScaleSetVMRunCommand");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:compute/v20201201:AvailabilitySet":
                return new availabilitySet_1.AvailabilitySet(name, undefined, { urn });
            case "azure-native:compute/v20201201:DedicatedHost":
                return new dedicatedHost_1.DedicatedHost(name, undefined, { urn });
            case "azure-native:compute/v20201201:DedicatedHostGroup":
                return new dedicatedHostGroup_1.DedicatedHostGroup(name, undefined, { urn });
            case "azure-native:compute/v20201201:Disk":
                return new disk_1.Disk(name, undefined, { urn });
            case "azure-native:compute/v20201201:DiskAccess":
                return new diskAccess_1.DiskAccess(name, undefined, { urn });
            case "azure-native:compute/v20201201:DiskAccessAPrivateEndpointConnection":
                return new diskAccessAPrivateEndpointConnection_1.DiskAccessAPrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:compute/v20201201:DiskEncryptionSet":
                return new diskEncryptionSet_1.DiskEncryptionSet(name, undefined, { urn });
            case "azure-native:compute/v20201201:Image":
                return new image_1.Image(name, undefined, { urn });
            case "azure-native:compute/v20201201:ProximityPlacementGroup":
                return new proximityPlacementGroup_1.ProximityPlacementGroup(name, undefined, { urn });
            case "azure-native:compute/v20201201:Snapshot":
                return new snapshot_1.Snapshot(name, undefined, { urn });
            case "azure-native:compute/v20201201:SshPublicKey":
                return new sshPublicKey_1.SshPublicKey(name, undefined, { urn });
            case "azure-native:compute/v20201201:VirtualMachine":
                return new virtualMachine_1.VirtualMachine(name, undefined, { urn });
            case "azure-native:compute/v20201201:VirtualMachineExtension":
                return new virtualMachineExtension_1.VirtualMachineExtension(name, undefined, { urn });
            case "azure-native:compute/v20201201:VirtualMachineRunCommandByVirtualMachine":
                return new virtualMachineRunCommandByVirtualMachine_1.VirtualMachineRunCommandByVirtualMachine(name, undefined, { urn });
            case "azure-native:compute/v20201201:VirtualMachineScaleSet":
                return new virtualMachineScaleSet_1.VirtualMachineScaleSet(name, undefined, { urn });
            case "azure-native:compute/v20201201:VirtualMachineScaleSetExtension":
                return new virtualMachineScaleSetExtension_1.VirtualMachineScaleSetExtension(name, undefined, { urn });
            case "azure-native:compute/v20201201:VirtualMachineScaleSetVM":
                return new virtualMachineScaleSetVM_1.VirtualMachineScaleSetVM(name, undefined, { urn });
            case "azure-native:compute/v20201201:VirtualMachineScaleSetVMExtension":
                return new virtualMachineScaleSetVMExtension_1.VirtualMachineScaleSetVMExtension(name, undefined, { urn });
            case "azure-native:compute/v20201201:VirtualMachineScaleSetVMRunCommand":
                return new virtualMachineScaleSetVMRunCommand_1.VirtualMachineScaleSetVMRunCommand(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "compute/v20201201", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9jb21wdXRlL3YyMDIwMTIwMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0VBQXdFO0FBQ3hFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBRTdDLGtCQUFrQjtBQUNsQixvREFBa0M7QUFDbEMsa0RBQWdDO0FBQ2hDLHVEQUFxQztBQUNyQyx5Q0FBdUI7QUFDdkIsK0NBQTZCO0FBQzdCLHlFQUF1RDtBQUN2RCxzREFBb0M7QUFDcEMsdURBQXFDO0FBQ3JDLHFEQUFtQztBQUNuQywwREFBd0M7QUFDeEMsNENBQTBCO0FBQzFCLGtEQUFnQztBQUNoQyw0RUFBMEQ7QUFDMUQseURBQXVDO0FBQ3ZDLDZDQUEyQjtBQUMzQiw4RUFBNEQ7QUFDNUQsMEVBQXdEO0FBQ3hELCtEQUE2QztBQUM3QyxnREFBOEI7QUFDOUIsb0RBQWtDO0FBQ2xDLHNEQUFvQztBQUNwQywrREFBNkM7QUFDN0MsZ0ZBQThEO0FBQzlELDhEQUE0QztBQUM1Qyx1RUFBcUQ7QUFDckQsZ0VBQThDO0FBQzlDLHlFQUF1RDtBQUN2RCwwRUFBd0Q7QUFDeEQsMENBQXdCO0FBQ3hCLDREQUEwQztBQUMxQyw2Q0FBMkI7QUFDM0IsaURBQStCO0FBQy9CLG1EQUFpQztBQUNqQyw0REFBMEM7QUFDMUMsNkVBQTJEO0FBQzNELDJEQUF5QztBQUN6QyxvRUFBa0Q7QUFDbEQsNkRBQTJDO0FBQzNDLHNFQUFvRDtBQUNwRCx1RUFBcUQ7QUFFckQsZ0JBQWdCO0FBQ2hCLHNFQUFvRDtBQUVwRCxnQ0FBZ0M7QUFDaEMsdURBQW9EO0FBQ3BELG1EQUFnRDtBQUNoRCw2REFBMEQ7QUFDMUQsaUNBQThCO0FBQzlCLDZDQUEwQztBQUMxQyxpR0FBOEY7QUFDOUYsMkRBQXdEO0FBQ3hELG1DQUFnQztBQUNoQyx1RUFBb0U7QUFDcEUseUNBQXNDO0FBQ3RDLGlEQUE4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