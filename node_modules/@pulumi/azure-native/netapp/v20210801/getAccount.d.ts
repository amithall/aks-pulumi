import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * NetApp account resource
 */
export declare function getAccount(args: GetAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountResult>;
export interface GetAccountArgs {
    /**
     * The name of the NetApp account
     */
    accountName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * NetApp account resource
 */
export interface GetAccountResult {
    /**
     * Active Directories
     */
    readonly activeDirectories?: outputs.netapp.v20210801.ActiveDirectoryResponse[];
    /**
     * Encryption settings
     */
    readonly encryption?: outputs.netapp.v20210801.AccountEncryptionResponse;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: string;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Resource location
     */
    readonly location: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * Azure lifecycle management
     */
    readonly provisioningState: string;
    /**
     * The system meta data relating to this resource.
     */
    readonly systemData: outputs.netapp.v20210801.SystemDataResponse;
    /**
     * Resource tags
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type
     */
    readonly type: string;
}
export declare function getAccountOutput(args: GetAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountResult>;
export interface GetAccountOutputArgs {
    /**
     * The name of the NetApp account
     */
    accountName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
