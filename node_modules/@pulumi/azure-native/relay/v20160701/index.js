"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./getHybridConnection"), exports);
__exportStar(require("./getHybridConnectionAuthorizationRule"), exports);
__exportStar(require("./getNamespace"), exports);
__exportStar(require("./getNamespaceAuthorizationRule"), exports);
__exportStar(require("./getWCFRelay"), exports);
__exportStar(require("./getWCFRelayAuthorizationRule"), exports);
__exportStar(require("./hybridConnection"), exports);
__exportStar(require("./hybridConnectionAuthorizationRule"), exports);
__exportStar(require("./listHybridConnectionKeys"), exports);
__exportStar(require("./listNamespaceKeys"), exports);
__exportStar(require("./listWCFRelayKeys"), exports);
__exportStar(require("./namespace"), exports);
__exportStar(require("./namespaceAuthorizationRule"), exports);
__exportStar(require("./wcfrelay"), exports);
__exportStar(require("./wcfrelayAuthorizationRule"), exports);
// Export enums:
__exportStar(require("../../types/enums/relay/v20160701"), exports);
// Import resources to register:
const hybridConnection_1 = require("./hybridConnection");
const hybridConnectionAuthorizationRule_1 = require("./hybridConnectionAuthorizationRule");
const namespace_1 = require("./namespace");
const namespaceAuthorizationRule_1 = require("./namespaceAuthorizationRule");
const wcfrelay_1 = require("./wcfrelay");
const wcfrelayAuthorizationRule_1 = require("./wcfrelayAuthorizationRule");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:relay/v20160701:HybridConnection":
                return new hybridConnection_1.HybridConnection(name, undefined, { urn });
            case "azure-native:relay/v20160701:HybridConnectionAuthorizationRule":
                return new hybridConnectionAuthorizationRule_1.HybridConnectionAuthorizationRule(name, undefined, { urn });
            case "azure-native:relay/v20160701:Namespace":
                return new namespace_1.Namespace(name, undefined, { urn });
            case "azure-native:relay/v20160701:NamespaceAuthorizationRule":
                return new namespaceAuthorizationRule_1.NamespaceAuthorizationRule(name, undefined, { urn });
            case "azure-native:relay/v20160701:WCFRelay":
                return new wcfrelay_1.WCFRelay(name, undefined, { urn });
            case "azure-native:relay/v20160701:WCFRelayAuthorizationRule":
                return new wcfrelayAuthorizationRule_1.WCFRelayAuthorizationRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "relay/v20160701", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9yZWxheS92MjAxNjA3MDEvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHdFQUF3RTtBQUN4RSxpRkFBaUY7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUU3QyxrQkFBa0I7QUFDbEIsd0RBQXNDO0FBQ3RDLHlFQUF1RDtBQUN2RCxpREFBK0I7QUFDL0Isa0VBQWdEO0FBQ2hELGdEQUE4QjtBQUM5QixpRUFBK0M7QUFDL0MscURBQW1DO0FBQ25DLHNFQUFvRDtBQUNwRCw2REFBMkM7QUFDM0Msc0RBQW9DO0FBQ3BDLHFEQUFtQztBQUNuQyw4Q0FBNEI7QUFDNUIsK0RBQTZDO0FBQzdDLDZDQUEyQjtBQUMzQiw4REFBNEM7QUFFNUMsZ0JBQWdCO0FBQ2hCLG9FQUFrRDtBQUVsRCxnQ0FBZ0M7QUFDaEMseURBQXNEO0FBQ3RELDJGQUF3RjtBQUN4RiwyQ0FBd0M7QUFDeEMsNkVBQTBFO0FBQzFFLHlDQUFzQztBQUN0QywyRUFBd0U7QUFFeEUsTUFBTSxPQUFPLEdBQUc7SUFDWixPQUFPLEVBQUUsU0FBUyxDQUFDLFVBQVUsRUFBRTtJQUMvQixTQUFTLEVBQUUsQ0FBQyxJQUFZLEVBQUUsSUFBWSxFQUFFLEdBQVcsRUFBbUIsRUFBRTtRQUNwRSxRQUFRLElBQUksRUFBRTtZQUNWLEtBQUssK0NBQStDO2dCQUNoRCxPQUFPLElBQUksbUNBQWdCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDOUQsS0FBSyxnRUFBZ0U7Z0JBQ2pFLE9BQU8sSUFBSSxxRUFBaUMsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUMvRSxLQUFLLHdDQUF3QztnQkFDekMsT0FBTyxJQUFJLHFCQUFTLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDdkQsS0FBSyx5REFBeUQ7Z0JBQzFELE9BQU8sSUFBSSx1REFBMEIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN4RSxLQUFLLHVDQUF1QztnQkFDeEMsT0FBTyxJQUFJLG1CQUFRLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDdEQsS0FBSyx3REFBd0Q7Z0JBQ3pELE9BQU8sSUFBSSxxREFBeUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN2RTtnQkFDSSxNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixJQUFJLEVBQUUsQ0FBQyxDQUFDO1NBQ3hEO0lBQ0wsQ0FBQztDQUNKLENBQUM7QUFDRixNQUFNLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLGNBQWMsRUFBRSxpQkFBaUIsRUFBRSxPQUFPLENBQUMsQ0FBQSJ9