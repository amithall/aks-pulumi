"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRemediationAtManagementGroupOutput = exports.getRemediationAtManagementGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * The remediation definition.
 */
/** @deprecated Version v20180701preview will be removed in the next major version of the provider. Upgrade to version v20190701 or later. */
function getRemediationAtManagementGroup(args, opts) {
    pulumi.log.warn("getRemediationAtManagementGroup is deprecated: Version v20180701preview will be removed in the next major version of the provider. Upgrade to version v20190701 or later.");
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:policyinsights/v20180701preview:getRemediationAtManagementGroup", {
        "managementGroupId": args.managementGroupId,
        "managementGroupsNamespace": args.managementGroupsNamespace,
        "remediationName": args.remediationName,
    }, opts);
}
exports.getRemediationAtManagementGroup = getRemediationAtManagementGroup;
function getRemediationAtManagementGroupOutput(args, opts) {
    return pulumi.output(args).apply(a => getRemediationAtManagementGroup(a, opts));
}
exports.getRemediationAtManagementGroupOutput = getRemediationAtManagementGroupOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0UmVtZWRpYXRpb25BdE1hbmFnZW1lbnRHcm91cC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3BvbGljeWluc2lnaHRzL3YyMDE4MDcwMXByZXZpZXcvZ2V0UmVtZWRpYXRpb25BdE1hbmFnZW1lbnRHcm91cC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0VBQXdFO0FBQ3hFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUV6Qyw2Q0FBNkM7QUFFN0M7O0dBRUc7QUFDSCw2SUFBNkk7QUFDN0ksU0FBZ0IsK0JBQStCLENBQUMsSUFBeUMsRUFBRSxJQUEyQjtJQUNsSCxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQywyS0FBMkssQ0FBQyxDQUFBO0lBQzVMLElBQUksQ0FBQyxJQUFJLEVBQUU7UUFDUCxJQUFJLEdBQUcsRUFBRSxDQUFBO0tBQ1o7SUFFRCxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNuRSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLDhFQUE4RSxFQUFFO1FBQ3pHLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsMkJBQTJCLEVBQUUsSUFBSSxDQUFDLHlCQUF5QjtRQUMzRCxpQkFBaUIsRUFBRSxJQUFJLENBQUMsZUFBZTtLQUMxQyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVpELDBFQVlDO0FBK0RELFNBQWdCLHFDQUFxQyxDQUFDLElBQStDLEVBQUUsSUFBMkI7SUFDOUgsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLCtCQUErQixDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO0FBQ25GLENBQUM7QUFGRCxzRkFFQyJ9