import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Appliances definition.
 * API Version: 2021-10-31-preview.
 */
export declare function getAppliance(args: GetApplianceArgs, opts?: pulumi.InvokeOptions): Promise<GetApplianceResult>;
export interface GetApplianceArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Appliances name.
     */
    resourceName: string;
}
/**
 * Appliances definition.
 */
export interface GetApplianceResult {
    /**
     * Represents a supported Fabric/Infra. (AKSEdge etc...).
     */
    readonly distro?: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * Identity for the resource.
     */
    readonly identity?: outputs.resourceconnector.IdentityResponse;
    /**
     * Contains infrastructure information about the Appliance
     */
    readonly infrastructureConfig?: outputs.resourceconnector.AppliancePropertiesResponseInfrastructureConfig;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The current deployment or provisioning state, which only appears in the response.
     */
    readonly provisioningState: string;
    /**
     * Certificates pair used to download MSI certificate from HIS
     */
    readonly publicKey?: string;
    /**
     * Applianceâ€™s health and state of connection to on-prem
     */
    readonly status: string;
    /**
     * Metadata pertaining to creation and last modification of the resource
     */
    readonly systemData: outputs.resourceconnector.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * Version of the Appliance
     */
    readonly version: string;
}
export declare function getApplianceOutput(args: GetApplianceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplianceResult>;
export interface GetApplianceOutputArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Appliances name.
     */
    resourceName: pulumi.Input<string>;
}
