"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./getMetricsSource"), exports);
__exportStar(require("./getMetricsSourceTagRule"), exports);
__exportStar(require("./getMonitor"), exports);
__exportStar(require("./getSubAccount"), exports);
__exportStar(require("./getSubAccountTagRule"), exports);
__exportStar(require("./getTagRule"), exports);
__exportStar(require("./listMonitorMonitoredResources"), exports);
__exportStar(require("./listMonitorUserRoles"), exports);
__exportStar(require("./listMonitorVMHosts"), exports);
__exportStar(require("./listSubAccountMonitoredResources"), exports);
__exportStar(require("./listSubAccountVMHosts"), exports);
__exportStar(require("./metricsSource"), exports);
__exportStar(require("./metricsSourceTagRule"), exports);
__exportStar(require("./monitor"), exports);
__exportStar(require("./subAccount"), exports);
__exportStar(require("./subAccountTagRule"), exports);
__exportStar(require("./tagRule"), exports);
// Export enums:
__exportStar(require("../../types/enums/logz/v20220101preview"), exports);
// Import resources to register:
const metricsSource_1 = require("./metricsSource");
const metricsSourceTagRule_1 = require("./metricsSourceTagRule");
const monitor_1 = require("./monitor");
const subAccount_1 = require("./subAccount");
const subAccountTagRule_1 = require("./subAccountTagRule");
const tagRule_1 = require("./tagRule");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:logz/v20220101preview:MetricsSource":
                return new metricsSource_1.MetricsSource(name, undefined, { urn });
            case "azure-native:logz/v20220101preview:MetricsSourceTagRule":
                return new metricsSourceTagRule_1.MetricsSourceTagRule(name, undefined, { urn });
            case "azure-native:logz/v20220101preview:Monitor":
                return new monitor_1.Monitor(name, undefined, { urn });
            case "azure-native:logz/v20220101preview:SubAccount":
                return new subAccount_1.SubAccount(name, undefined, { urn });
            case "azure-native:logz/v20220101preview:SubAccountTagRule":
                return new subAccountTagRule_1.SubAccountTagRule(name, undefined, { urn });
            case "azure-native:logz/v20220101preview:TagRule":
                return new tagRule_1.TagRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "logz/v20220101preview", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9sb2d6L3YyMDIyMDEwMXByZXZpZXcvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHdFQUF3RTtBQUN4RSxpRkFBaUY7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUU3QyxrQkFBa0I7QUFDbEIscURBQW1DO0FBQ25DLDREQUEwQztBQUMxQywrQ0FBNkI7QUFDN0Isa0RBQWdDO0FBQ2hDLHlEQUF1QztBQUN2QywrQ0FBNkI7QUFDN0Isa0VBQWdEO0FBQ2hELHlEQUF1QztBQUN2Qyx1REFBcUM7QUFDckMscUVBQW1EO0FBQ25ELDBEQUF3QztBQUN4QyxrREFBZ0M7QUFDaEMseURBQXVDO0FBQ3ZDLDRDQUEwQjtBQUMxQiwrQ0FBNkI7QUFDN0Isc0RBQW9DO0FBQ3BDLDRDQUEwQjtBQUUxQixnQkFBZ0I7QUFDaEIsMEVBQXdEO0FBRXhELGdDQUFnQztBQUNoQyxtREFBZ0Q7QUFDaEQsaUVBQThEO0FBQzlELHVDQUFvQztBQUNwQyw2Q0FBMEM7QUFDMUMsMkRBQXdEO0FBQ3hELHVDQUFvQztBQUVwQyxNQUFNLE9BQU8sR0FBRztJQUNaLE9BQU8sRUFBRSxTQUFTLENBQUMsVUFBVSxFQUFFO0lBQy9CLFNBQVMsRUFBRSxDQUFDLElBQVksRUFBRSxJQUFZLEVBQUUsR0FBVyxFQUFtQixFQUFFO1FBQ3BFLFFBQVEsSUFBSSxFQUFFO1lBQ1YsS0FBSyxrREFBa0Q7Z0JBQ25ELE9BQU8sSUFBSSw2QkFBYSxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQzNELEtBQUsseURBQXlEO2dCQUMxRCxPQUFPLElBQUksMkNBQW9CLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDbEUsS0FBSyw0Q0FBNEM7Z0JBQzdDLE9BQU8sSUFBSSxpQkFBTyxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3JELEtBQUssK0NBQStDO2dCQUNoRCxPQUFPLElBQUksdUJBQVUsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN4RCxLQUFLLHNEQUFzRDtnQkFDdkQsT0FBTyxJQUFJLHFDQUFpQixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQy9ELEtBQUssNENBQTRDO2dCQUM3QyxPQUFPLElBQUksaUJBQU8sQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNyRDtnQkFDSSxNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixJQUFJLEVBQUUsQ0FBQyxDQUFDO1NBQ3hEO0lBQ0wsQ0FBQztDQUNKLENBQUM7QUFDRixNQUFNLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLGNBQWMsRUFBRSx1QkFBdUIsRUFBRSxPQUFPLENBQUMsQ0FBQSJ9