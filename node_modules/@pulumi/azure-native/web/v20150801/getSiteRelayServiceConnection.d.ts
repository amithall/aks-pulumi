import * as pulumi from "@pulumi/pulumi";
/**
 * Class that represents a BizTalk Hybrid Connection
 */
/** @deprecated Version v20150801 will be removed in the next major version of the provider. Upgrade to version v20150801preview or later. */
export declare function getSiteRelayServiceConnection(args: GetSiteRelayServiceConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetSiteRelayServiceConnectionResult>;
export interface GetSiteRelayServiceConnectionArgs {
    /**
     * The name by which the Hybrid Connection is identified
     */
    entityName: string;
    /**
     * The name of the web app
     */
    name: string;
    /**
     * The resource group name
     */
    resourceGroupName: string;
}
/**
 * Class that represents a BizTalk Hybrid Connection
 */
export interface GetSiteRelayServiceConnectionResult {
    readonly biztalkUri?: string;
    readonly entityConnectionString?: string;
    readonly entityName?: string;
    readonly hostname?: string;
    /**
     * Resource Id
     */
    readonly id?: string;
    /**
     * Kind of resource
     */
    readonly kind?: string;
    /**
     * Resource Location
     */
    readonly location: string;
    /**
     * Resource Name
     */
    readonly name?: string;
    readonly port?: number;
    readonly resourceConnectionString?: string;
    readonly resourceType?: string;
    /**
     * Resource tags
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type
     */
    readonly type?: string;
}
export declare function getSiteRelayServiceConnectionOutput(args: GetSiteRelayServiceConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSiteRelayServiceConnectionResult>;
export interface GetSiteRelayServiceConnectionOutputArgs {
    /**
     * The name by which the Hybrid Connection is identified
     */
    entityName: pulumi.Input<string>;
    /**
     * The name of the web app
     */
    name: pulumi.Input<string>;
    /**
     * The resource group name
     */
    resourceGroupName: pulumi.Input<string>;
}
