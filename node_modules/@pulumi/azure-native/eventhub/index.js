"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20211101 = exports.v20210601preview = exports.v20210101preview = exports.v20180101preview = exports.v20170401 = exports.v20150801 = exports.v20140901 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./cluster"), exports);
__exportStar(require("./consumerGroup"), exports);
__exportStar(require("./disasterRecoveryConfig"), exports);
__exportStar(require("./eventHub"), exports);
__exportStar(require("./eventHubAuthorizationRule"), exports);
__exportStar(require("./getCluster"), exports);
__exportStar(require("./getConsumerGroup"), exports);
__exportStar(require("./getDisasterRecoveryConfig"), exports);
__exportStar(require("./getEventHub"), exports);
__exportStar(require("./getEventHubAuthorizationRule"), exports);
__exportStar(require("./getNamespace"), exports);
__exportStar(require("./getNamespaceAuthorizationRule"), exports);
__exportStar(require("./getNamespaceIpFilterRule"), exports);
__exportStar(require("./getNamespaceNetworkRuleSet"), exports);
__exportStar(require("./getNamespaceVirtualNetworkRule"), exports);
__exportStar(require("./getPrivateEndpointConnection"), exports);
__exportStar(require("./getSchemaRegistry"), exports);
__exportStar(require("./listDisasterRecoveryConfigKeys"), exports);
__exportStar(require("./listEventHubKeys"), exports);
__exportStar(require("./listNamespaceKeys"), exports);
__exportStar(require("./namespace"), exports);
__exportStar(require("./namespaceAuthorizationRule"), exports);
__exportStar(require("./namespaceIpFilterRule"), exports);
__exportStar(require("./namespaceNetworkRuleSet"), exports);
__exportStar(require("./namespaceVirtualNetworkRule"), exports);
__exportStar(require("./privateEndpointConnection"), exports);
__exportStar(require("./schemaRegistry"), exports);
// Export enums:
__exportStar(require("../types/enums/eventhub"), exports);
// Export sub-modules:
const v20140901 = require("./v20140901");
exports.v20140901 = v20140901;
const v20150801 = require("./v20150801");
exports.v20150801 = v20150801;
const v20170401 = require("./v20170401");
exports.v20170401 = v20170401;
const v20180101preview = require("./v20180101preview");
exports.v20180101preview = v20180101preview;
const v20210101preview = require("./v20210101preview");
exports.v20210101preview = v20210101preview;
const v20210601preview = require("./v20210601preview");
exports.v20210601preview = v20210601preview;
const v20211101 = require("./v20211101");
exports.v20211101 = v20211101;
// Import resources to register:
const cluster_1 = require("./cluster");
const consumerGroup_1 = require("./consumerGroup");
const disasterRecoveryConfig_1 = require("./disasterRecoveryConfig");
const eventHub_1 = require("./eventHub");
const eventHubAuthorizationRule_1 = require("./eventHubAuthorizationRule");
const namespace_1 = require("./namespace");
const namespaceAuthorizationRule_1 = require("./namespaceAuthorizationRule");
const namespaceIpFilterRule_1 = require("./namespaceIpFilterRule");
const namespaceNetworkRuleSet_1 = require("./namespaceNetworkRuleSet");
const namespaceVirtualNetworkRule_1 = require("./namespaceVirtualNetworkRule");
const privateEndpointConnection_1 = require("./privateEndpointConnection");
const schemaRegistry_1 = require("./schemaRegistry");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:eventhub:Cluster":
                return new cluster_1.Cluster(name, undefined, { urn });
            case "azure-native:eventhub:ConsumerGroup":
                return new consumerGroup_1.ConsumerGroup(name, undefined, { urn });
            case "azure-native:eventhub:DisasterRecoveryConfig":
                return new disasterRecoveryConfig_1.DisasterRecoveryConfig(name, undefined, { urn });
            case "azure-native:eventhub:EventHub":
                return new eventHub_1.EventHub(name, undefined, { urn });
            case "azure-native:eventhub:EventHubAuthorizationRule":
                return new eventHubAuthorizationRule_1.EventHubAuthorizationRule(name, undefined, { urn });
            case "azure-native:eventhub:Namespace":
                return new namespace_1.Namespace(name, undefined, { urn });
            case "azure-native:eventhub:NamespaceAuthorizationRule":
                return new namespaceAuthorizationRule_1.NamespaceAuthorizationRule(name, undefined, { urn });
            case "azure-native:eventhub:NamespaceIpFilterRule":
                return new namespaceIpFilterRule_1.NamespaceIpFilterRule(name, undefined, { urn });
            case "azure-native:eventhub:NamespaceNetworkRuleSet":
                return new namespaceNetworkRuleSet_1.NamespaceNetworkRuleSet(name, undefined, { urn });
            case "azure-native:eventhub:NamespaceVirtualNetworkRule":
                return new namespaceVirtualNetworkRule_1.NamespaceVirtualNetworkRule(name, undefined, { urn });
            case "azure-native:eventhub:PrivateEndpointConnection":
                return new privateEndpointConnection_1.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:eventhub:SchemaRegistry":
                return new schemaRegistry_1.SchemaRegistry(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "eventhub", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9ldmVudGh1Yi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0VBQXdFO0FBQ3hFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDBDQUEwQztBQUUxQyxrQkFBa0I7QUFDbEIsNENBQTBCO0FBQzFCLGtEQUFnQztBQUNoQywyREFBeUM7QUFDekMsNkNBQTJCO0FBQzNCLDhEQUE0QztBQUM1QywrQ0FBNkI7QUFDN0IscURBQW1DO0FBQ25DLDhEQUE0QztBQUM1QyxnREFBOEI7QUFDOUIsaUVBQStDO0FBQy9DLGlEQUErQjtBQUMvQixrRUFBZ0Q7QUFDaEQsNkRBQTJDO0FBQzNDLCtEQUE2QztBQUM3QyxtRUFBaUQ7QUFDakQsaUVBQStDO0FBQy9DLHNEQUFvQztBQUNwQyxtRUFBaUQ7QUFDakQscURBQW1DO0FBQ25DLHNEQUFvQztBQUNwQyw4Q0FBNEI7QUFDNUIsK0RBQTZDO0FBQzdDLDBEQUF3QztBQUN4Qyw0REFBMEM7QUFDMUMsZ0VBQThDO0FBQzlDLDhEQUE0QztBQUM1QyxtREFBaUM7QUFFakMsZ0JBQWdCO0FBQ2hCLDBEQUF3QztBQUV4QyxzQkFBc0I7QUFDdEIseUNBQXlDO0FBU3JDLDhCQUFTO0FBUmIseUNBQXlDO0FBU3JDLDhCQUFTO0FBUmIseUNBQXlDO0FBU3JDLDhCQUFTO0FBUmIsdURBQXVEO0FBU25ELDRDQUFnQjtBQVJwQix1REFBdUQ7QUFTbkQsNENBQWdCO0FBUnBCLHVEQUF1RDtBQVNuRCw0Q0FBZ0I7QUFScEIseUNBQXlDO0FBU3JDLDhCQUFTO0FBR2IsZ0NBQWdDO0FBQ2hDLHVDQUFvQztBQUNwQyxtREFBZ0Q7QUFDaEQscUVBQWtFO0FBQ2xFLHlDQUFzQztBQUN0QywyRUFBd0U7QUFDeEUsMkNBQXdDO0FBQ3hDLDZFQUEwRTtBQUMxRSxtRUFBZ0U7QUFDaEUsdUVBQW9FO0FBQ3BFLCtFQUE0RTtBQUM1RSwyRUFBd0U7QUFDeEUscURBQWtEO0FBRWxELE1BQU0sT0FBTyxHQUFHO0lBQ1osT0FBTyxFQUFFLFNBQVMsQ0FBQyxVQUFVLEVBQUU7SUFDL0IsU0FBUyxFQUFFLENBQUMsSUFBWSxFQUFFLElBQVksRUFBRSxHQUFXLEVBQW1CLEVBQUU7UUFDcEUsUUFBUSxJQUFJLEVBQUU7WUFDVixLQUFLLCtCQUErQjtnQkFDaEMsT0FBTyxJQUFJLGlCQUFPLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDckQsS0FBSyxxQ0FBcUM7Z0JBQ3RDLE9BQU8sSUFBSSw2QkFBYSxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQzNELEtBQUssOENBQThDO2dCQUMvQyxPQUFPLElBQUksK0NBQXNCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDcEUsS0FBSyxnQ0FBZ0M7Z0JBQ2pDLE9BQU8sSUFBSSxtQkFBUSxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3RELEtBQUssaURBQWlEO2dCQUNsRCxPQUFPLElBQUkscURBQXlCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDdkUsS0FBSyxpQ0FBaUM7Z0JBQ2xDLE9BQU8sSUFBSSxxQkFBUyxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3ZELEtBQUssa0RBQWtEO2dCQUNuRCxPQUFPLElBQUksdURBQTBCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDeEUsS0FBSyw2Q0FBNkM7Z0JBQzlDLE9BQU8sSUFBSSw2Q0FBcUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNuRSxLQUFLLCtDQUErQztnQkFDaEQsT0FBTyxJQUFJLGlEQUF1QixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3JFLEtBQUssbURBQW1EO2dCQUNwRCxPQUFPLElBQUkseURBQTJCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDekUsS0FBSyxpREFBaUQ7Z0JBQ2xELE9BQU8sSUFBSSxxREFBeUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN2RSxLQUFLLHNDQUFzQztnQkFDdkMsT0FBTyxJQUFJLCtCQUFjLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDNUQ7Z0JBQ0ksTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsSUFBSSxFQUFFLENBQUMsQ0FBQztTQUN4RDtJQUNMLENBQUM7Q0FDSixDQUFDO0FBQ0YsTUFBTSxDQUFDLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxjQUFjLEVBQUUsVUFBVSxFQUFFLE9BQU8sQ0FBQyxDQUFBIn0=