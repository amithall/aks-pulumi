"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20220101 = exports.v20210601 = exports.v20210101 = exports.v20201001 = exports.v20200401 = exports.v20200101preview = exports.v20190901preview = exports.v20190801preview = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./connectionMonitorTest"), exports);
__exportStar(require("./getConnectionMonitorTest"), exports);
__exportStar(require("./getPeerAsn"), exports);
__exportStar(require("./getPeering"), exports);
__exportStar(require("./getPeeringService"), exports);
__exportStar(require("./getPrefix"), exports);
__exportStar(require("./getRegisteredAsn"), exports);
__exportStar(require("./getRegisteredPrefix"), exports);
__exportStar(require("./peerAsn"), exports);
__exportStar(require("./peering"), exports);
__exportStar(require("./peeringService"), exports);
__exportStar(require("./prefix"), exports);
__exportStar(require("./registeredAsn"), exports);
__exportStar(require("./registeredPrefix"), exports);
// Export enums:
__exportStar(require("../types/enums/peering"), exports);
// Export sub-modules:
const v20190801preview = require("./v20190801preview");
exports.v20190801preview = v20190801preview;
const v20190901preview = require("./v20190901preview");
exports.v20190901preview = v20190901preview;
const v20200101preview = require("./v20200101preview");
exports.v20200101preview = v20200101preview;
const v20200401 = require("./v20200401");
exports.v20200401 = v20200401;
const v20201001 = require("./v20201001");
exports.v20201001 = v20201001;
const v20210101 = require("./v20210101");
exports.v20210101 = v20210101;
const v20210601 = require("./v20210601");
exports.v20210601 = v20210601;
const v20220101 = require("./v20220101");
exports.v20220101 = v20220101;
// Import resources to register:
const connectionMonitorTest_1 = require("./connectionMonitorTest");
const peerAsn_1 = require("./peerAsn");
const peering_1 = require("./peering");
const peeringService_1 = require("./peeringService");
const prefix_1 = require("./prefix");
const registeredAsn_1 = require("./registeredAsn");
const registeredPrefix_1 = require("./registeredPrefix");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:peering:ConnectionMonitorTest":
                return new connectionMonitorTest_1.ConnectionMonitorTest(name, undefined, { urn });
            case "azure-native:peering:PeerAsn":
                return new peerAsn_1.PeerAsn(name, undefined, { urn });
            case "azure-native:peering:Peering":
                return new peering_1.Peering(name, undefined, { urn });
            case "azure-native:peering:PeeringService":
                return new peeringService_1.PeeringService(name, undefined, { urn });
            case "azure-native:peering:Prefix":
                return new prefix_1.Prefix(name, undefined, { urn });
            case "azure-native:peering:RegisteredAsn":
                return new registeredAsn_1.RegisteredAsn(name, undefined, { urn });
            case "azure-native:peering:RegisteredPrefix":
                return new registeredPrefix_1.RegisteredPrefix(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "peering", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9wZWVyaW5nL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSx3RUFBd0U7QUFDeEUsaUZBQWlGOzs7Ozs7Ozs7Ozs7Ozs7OztBQUVqRix5Q0FBeUM7QUFDekMsMENBQTBDO0FBRTFDLGtCQUFrQjtBQUNsQiwwREFBd0M7QUFDeEMsNkRBQTJDO0FBQzNDLCtDQUE2QjtBQUM3QiwrQ0FBNkI7QUFDN0Isc0RBQW9DO0FBQ3BDLDhDQUE0QjtBQUM1QixxREFBbUM7QUFDbkMsd0RBQXNDO0FBQ3RDLDRDQUEwQjtBQUMxQiw0Q0FBMEI7QUFDMUIsbURBQWlDO0FBQ2pDLDJDQUF5QjtBQUN6QixrREFBZ0M7QUFDaEMscURBQW1DO0FBRW5DLGdCQUFnQjtBQUNoQix5REFBdUM7QUFFdkMsc0JBQXNCO0FBQ3RCLHVEQUF1RDtBQVVuRCw0Q0FBZ0I7QUFUcEIsdURBQXVEO0FBVW5ELDRDQUFnQjtBQVRwQix1REFBdUQ7QUFVbkQsNENBQWdCO0FBVHBCLHlDQUF5QztBQVVyQyw4QkFBUztBQVRiLHlDQUF5QztBQVVyQyw4QkFBUztBQVRiLHlDQUF5QztBQVVyQyw4QkFBUztBQVRiLHlDQUF5QztBQVVyQyw4QkFBUztBQVRiLHlDQUF5QztBQVVyQyw4QkFBUztBQUdiLGdDQUFnQztBQUNoQyxtRUFBZ0U7QUFDaEUsdUNBQW9DO0FBQ3BDLHVDQUFvQztBQUNwQyxxREFBa0Q7QUFDbEQscUNBQWtDO0FBQ2xDLG1EQUFnRDtBQUNoRCx5REFBc0Q7QUFFdEQsTUFBTSxPQUFPLEdBQUc7SUFDWixPQUFPLEVBQUUsU0FBUyxDQUFDLFVBQVUsRUFBRTtJQUMvQixTQUFTLEVBQUUsQ0FBQyxJQUFZLEVBQUUsSUFBWSxFQUFFLEdBQVcsRUFBbUIsRUFBRTtRQUNwRSxRQUFRLElBQUksRUFBRTtZQUNWLEtBQUssNENBQTRDO2dCQUM3QyxPQUFPLElBQUksNkNBQXFCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDbkUsS0FBSyw4QkFBOEI7Z0JBQy9CLE9BQU8sSUFBSSxpQkFBTyxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3JELEtBQUssOEJBQThCO2dCQUMvQixPQUFPLElBQUksaUJBQU8sQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNyRCxLQUFLLHFDQUFxQztnQkFDdEMsT0FBTyxJQUFJLCtCQUFjLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDNUQsS0FBSyw2QkFBNkI7Z0JBQzlCLE9BQU8sSUFBSSxlQUFNLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDcEQsS0FBSyxvQ0FBb0M7Z0JBQ3JDLE9BQU8sSUFBSSw2QkFBYSxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQzNELEtBQUssdUNBQXVDO2dCQUN4QyxPQUFPLElBQUksbUNBQWdCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDOUQ7Z0JBQ0ksTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsSUFBSSxFQUFFLENBQUMsQ0FBQztTQUN4RDtJQUNMLENBQUM7Q0FDSixDQUFDO0FBQ0YsTUFBTSxDQUFDLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxjQUFjLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFBIn0=