"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./connectionMonitorTest"), exports);
__exportStar(require("./getConnectionMonitorTest"), exports);
__exportStar(require("./getPeerAsn"), exports);
__exportStar(require("./getPeering"), exports);
__exportStar(require("./getPeeringService"), exports);
__exportStar(require("./getPrefix"), exports);
__exportStar(require("./getRegisteredAsn"), exports);
__exportStar(require("./getRegisteredPrefix"), exports);
__exportStar(require("./peerAsn"), exports);
__exportStar(require("./peering"), exports);
__exportStar(require("./peeringService"), exports);
__exportStar(require("./prefix"), exports);
__exportStar(require("./registeredAsn"), exports);
__exportStar(require("./registeredPrefix"), exports);
// Export enums:
__exportStar(require("../../types/enums/peering/v20220101"), exports);
// Import resources to register:
const connectionMonitorTest_1 = require("./connectionMonitorTest");
const peerAsn_1 = require("./peerAsn");
const peering_1 = require("./peering");
const peeringService_1 = require("./peeringService");
const prefix_1 = require("./prefix");
const registeredAsn_1 = require("./registeredAsn");
const registeredPrefix_1 = require("./registeredPrefix");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:peering/v20220101:ConnectionMonitorTest":
                return new connectionMonitorTest_1.ConnectionMonitorTest(name, undefined, { urn });
            case "azure-native:peering/v20220101:PeerAsn":
                return new peerAsn_1.PeerAsn(name, undefined, { urn });
            case "azure-native:peering/v20220101:Peering":
                return new peering_1.Peering(name, undefined, { urn });
            case "azure-native:peering/v20220101:PeeringService":
                return new peeringService_1.PeeringService(name, undefined, { urn });
            case "azure-native:peering/v20220101:Prefix":
                return new prefix_1.Prefix(name, undefined, { urn });
            case "azure-native:peering/v20220101:RegisteredAsn":
                return new registeredAsn_1.RegisteredAsn(name, undefined, { urn });
            case "azure-native:peering/v20220101:RegisteredPrefix":
                return new registeredPrefix_1.RegisteredPrefix(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "peering/v20220101", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9wZWVyaW5nL3YyMDIyMDEwMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0VBQXdFO0FBQ3hFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBRTdDLGtCQUFrQjtBQUNsQiwwREFBd0M7QUFDeEMsNkRBQTJDO0FBQzNDLCtDQUE2QjtBQUM3QiwrQ0FBNkI7QUFDN0Isc0RBQW9DO0FBQ3BDLDhDQUE0QjtBQUM1QixxREFBbUM7QUFDbkMsd0RBQXNDO0FBQ3RDLDRDQUEwQjtBQUMxQiw0Q0FBMEI7QUFDMUIsbURBQWlDO0FBQ2pDLDJDQUF5QjtBQUN6QixrREFBZ0M7QUFDaEMscURBQW1DO0FBRW5DLGdCQUFnQjtBQUNoQixzRUFBb0Q7QUFFcEQsZ0NBQWdDO0FBQ2hDLG1FQUFnRTtBQUNoRSx1Q0FBb0M7QUFDcEMsdUNBQW9DO0FBQ3BDLHFEQUFrRDtBQUNsRCxxQ0FBa0M7QUFDbEMsbURBQWdEO0FBQ2hELHlEQUFzRDtBQUV0RCxNQUFNLE9BQU8sR0FBRztJQUNaLE9BQU8sRUFBRSxTQUFTLENBQUMsVUFBVSxFQUFFO0lBQy9CLFNBQVMsRUFBRSxDQUFDLElBQVksRUFBRSxJQUFZLEVBQUUsR0FBVyxFQUFtQixFQUFFO1FBQ3BFLFFBQVEsSUFBSSxFQUFFO1lBQ1YsS0FBSyxzREFBc0Q7Z0JBQ3ZELE9BQU8sSUFBSSw2Q0FBcUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNuRSxLQUFLLHdDQUF3QztnQkFDekMsT0FBTyxJQUFJLGlCQUFPLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDckQsS0FBSyx3Q0FBd0M7Z0JBQ3pDLE9BQU8sSUFBSSxpQkFBTyxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3JELEtBQUssK0NBQStDO2dCQUNoRCxPQUFPLElBQUksK0JBQWMsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUM1RCxLQUFLLHVDQUF1QztnQkFDeEMsT0FBTyxJQUFJLGVBQU0sQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNwRCxLQUFLLDhDQUE4QztnQkFDL0MsT0FBTyxJQUFJLDZCQUFhLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDM0QsS0FBSyxpREFBaUQ7Z0JBQ2xELE9BQU8sSUFBSSxtQ0FBZ0IsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUM5RDtnQkFDSSxNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixJQUFJLEVBQUUsQ0FBQyxDQUFDO1NBQ3hEO0lBQ0wsQ0FBQztDQUNKLENBQUM7QUFDRixNQUFNLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLGNBQWMsRUFBRSxtQkFBbUIsRUFBRSxPQUFPLENBQUMsQ0FBQSJ9