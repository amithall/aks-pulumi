"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRegisteredPrefixOutput = exports.getRegisteredPrefix = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * The customer's prefix that is registered by the peering service provider.
 */
/** @deprecated Version v20201001 will be removed in the next major version of the provider. Upgrade to version v20210101 or later. */
function getRegisteredPrefix(args, opts) {
    pulumi.log.warn("getRegisteredPrefix is deprecated: Version v20201001 will be removed in the next major version of the provider. Upgrade to version v20210101 or later.");
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:peering/v20201001:getRegisteredPrefix", {
        "peeringName": args.peeringName,
        "registeredPrefixName": args.registeredPrefixName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getRegisteredPrefix = getRegisteredPrefix;
function getRegisteredPrefixOutput(args, opts) {
    return pulumi.output(args).apply(a => getRegisteredPrefix(a, opts));
}
exports.getRegisteredPrefixOutput = getRegisteredPrefixOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0UmVnaXN0ZXJlZFByZWZpeC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3BlZXJpbmcvdjIwMjAxMDAxL2dldFJlZ2lzdGVyZWRQcmVmaXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHdFQUF3RTtBQUN4RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBRTdDOztHQUVHO0FBQ0gsc0lBQXNJO0FBQ3RJLFNBQWdCLG1CQUFtQixDQUFDLElBQTZCLEVBQUUsSUFBMkI7SUFDMUYsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsd0pBQXdKLENBQUMsQ0FBQTtJQUN6SyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1AsSUFBSSxHQUFHLEVBQUUsQ0FBQTtLQUNaO0lBRUQsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxvREFBb0QsRUFBRTtRQUMvRSxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0Isc0JBQXNCLEVBQUUsSUFBSSxDQUFDLG9CQUFvQjtRQUNqRCxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO0tBQzlDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBWkQsa0RBWUM7QUF1REQsU0FBZ0IseUJBQXlCLENBQUMsSUFBbUMsRUFBRSxJQUEyQjtJQUN0RyxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUE7QUFDdkUsQ0FBQztBQUZELDhEQUVDIn0=