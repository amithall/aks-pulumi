"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./attachedDatabaseConfiguration"), exports);
__exportStar(require("./cluster"), exports);
__exportStar(require("./clusterPrincipalAssignment"), exports);
__exportStar(require("./dataConnection"), exports);
__exportStar(require("./database"), exports);
__exportStar(require("./databasePrincipalAssignment"), exports);
__exportStar(require("./eventGridDataConnection"), exports);
__exportStar(require("./eventHubDataConnection"), exports);
__exportStar(require("./getAttachedDatabaseConfiguration"), exports);
__exportStar(require("./getCluster"), exports);
__exportStar(require("./getClusterPrincipalAssignment"), exports);
__exportStar(require("./getDataConnection"), exports);
__exportStar(require("./getDatabase"), exports);
__exportStar(require("./getDatabasePrincipalAssignment"), exports);
__exportStar(require("./getEventGridDataConnection"), exports);
__exportStar(require("./getEventHubDataConnection"), exports);
__exportStar(require("./getIotHubDataConnection"), exports);
__exportStar(require("./getReadOnlyFollowingDatabase"), exports);
__exportStar(require("./getReadWriteDatabase"), exports);
__exportStar(require("./iotHubDataConnection"), exports);
__exportStar(require("./listClusterFollowerDatabases"), exports);
__exportStar(require("./listDatabasePrincipals"), exports);
__exportStar(require("./readOnlyFollowingDatabase"), exports);
__exportStar(require("./readWriteDatabase"), exports);
// Export enums:
__exportStar(require("../../types/enums/kusto/v20191109"), exports);
// Import resources to register:
const attachedDatabaseConfiguration_1 = require("./attachedDatabaseConfiguration");
const cluster_1 = require("./cluster");
const clusterPrincipalAssignment_1 = require("./clusterPrincipalAssignment");
const dataConnection_1 = require("./dataConnection");
const database_1 = require("./database");
const databasePrincipalAssignment_1 = require("./databasePrincipalAssignment");
const eventGridDataConnection_1 = require("./eventGridDataConnection");
const eventHubDataConnection_1 = require("./eventHubDataConnection");
const iotHubDataConnection_1 = require("./iotHubDataConnection");
const readOnlyFollowingDatabase_1 = require("./readOnlyFollowingDatabase");
const readWriteDatabase_1 = require("./readWriteDatabase");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:kusto/v20191109:AttachedDatabaseConfiguration":
                return new attachedDatabaseConfiguration_1.AttachedDatabaseConfiguration(name, undefined, { urn });
            case "azure-native:kusto/v20191109:Cluster":
                return new cluster_1.Cluster(name, undefined, { urn });
            case "azure-native:kusto/v20191109:ClusterPrincipalAssignment":
                return new clusterPrincipalAssignment_1.ClusterPrincipalAssignment(name, undefined, { urn });
            case "azure-native:kusto/v20191109:DataConnection":
                return new dataConnection_1.DataConnection(name, undefined, { urn });
            case "azure-native:kusto/v20191109:Database":
                return new database_1.Database(name, undefined, { urn });
            case "azure-native:kusto/v20191109:DatabasePrincipalAssignment":
                return new databasePrincipalAssignment_1.DatabasePrincipalAssignment(name, undefined, { urn });
            case "azure-native:kusto/v20191109:EventGridDataConnection":
                return new eventGridDataConnection_1.EventGridDataConnection(name, undefined, { urn });
            case "azure-native:kusto/v20191109:EventHubDataConnection":
                return new eventHubDataConnection_1.EventHubDataConnection(name, undefined, { urn });
            case "azure-native:kusto/v20191109:IotHubDataConnection":
                return new iotHubDataConnection_1.IotHubDataConnection(name, undefined, { urn });
            case "azure-native:kusto/v20191109:ReadOnlyFollowingDatabase":
                return new readOnlyFollowingDatabase_1.ReadOnlyFollowingDatabase(name, undefined, { urn });
            case "azure-native:kusto/v20191109:ReadWriteDatabase":
                return new readWriteDatabase_1.ReadWriteDatabase(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "kusto/v20191109", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9rdXN0by92MjAxOTExMDkvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHdFQUF3RTtBQUN4RSxpRkFBaUY7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUU3QyxrQkFBa0I7QUFDbEIsa0VBQWdEO0FBQ2hELDRDQUEwQjtBQUMxQiwrREFBNkM7QUFDN0MsbURBQWlDO0FBQ2pDLDZDQUEyQjtBQUMzQixnRUFBOEM7QUFDOUMsNERBQTBDO0FBQzFDLDJEQUF5QztBQUN6QyxxRUFBbUQ7QUFDbkQsK0NBQTZCO0FBQzdCLGtFQUFnRDtBQUNoRCxzREFBb0M7QUFDcEMsZ0RBQThCO0FBQzlCLG1FQUFpRDtBQUNqRCwrREFBNkM7QUFDN0MsOERBQTRDO0FBQzVDLDREQUEwQztBQUMxQyxpRUFBK0M7QUFDL0MseURBQXVDO0FBQ3ZDLHlEQUF1QztBQUN2QyxpRUFBK0M7QUFDL0MsMkRBQXlDO0FBQ3pDLDhEQUE0QztBQUM1QyxzREFBb0M7QUFFcEMsZ0JBQWdCO0FBQ2hCLG9FQUFrRDtBQUVsRCxnQ0FBZ0M7QUFDaEMsbUZBQWdGO0FBQ2hGLHVDQUFvQztBQUNwQyw2RUFBMEU7QUFDMUUscURBQWtEO0FBQ2xELHlDQUFzQztBQUN0QywrRUFBNEU7QUFDNUUsdUVBQW9FO0FBQ3BFLHFFQUFrRTtBQUNsRSxpRUFBOEQ7QUFDOUQsMkVBQXdFO0FBQ3hFLDJEQUF3RDtBQUV4RCxNQUFNLE9BQU8sR0FBRztJQUNaLE9BQU8sRUFBRSxTQUFTLENBQUMsVUFBVSxFQUFFO0lBQy9CLFNBQVMsRUFBRSxDQUFDLElBQVksRUFBRSxJQUFZLEVBQUUsR0FBVyxFQUFtQixFQUFFO1FBQ3BFLFFBQVEsSUFBSSxFQUFFO1lBQ1YsS0FBSyw0REFBNEQ7Z0JBQzdELE9BQU8sSUFBSSw2REFBNkIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUMzRSxLQUFLLHNDQUFzQztnQkFDdkMsT0FBTyxJQUFJLGlCQUFPLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDckQsS0FBSyx5REFBeUQ7Z0JBQzFELE9BQU8sSUFBSSx1REFBMEIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN4RSxLQUFLLDZDQUE2QztnQkFDOUMsT0FBTyxJQUFJLCtCQUFjLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDNUQsS0FBSyx1Q0FBdUM7Z0JBQ3hDLE9BQU8sSUFBSSxtQkFBUSxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3RELEtBQUssMERBQTBEO2dCQUMzRCxPQUFPLElBQUkseURBQTJCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDekUsS0FBSyxzREFBc0Q7Z0JBQ3ZELE9BQU8sSUFBSSxpREFBdUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNyRSxLQUFLLHFEQUFxRDtnQkFDdEQsT0FBTyxJQUFJLCtDQUFzQixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3BFLEtBQUssbURBQW1EO2dCQUNwRCxPQUFPLElBQUksMkNBQW9CLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDbEUsS0FBSyx3REFBd0Q7Z0JBQ3pELE9BQU8sSUFBSSxxREFBeUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN2RSxLQUFLLGdEQUFnRDtnQkFDakQsT0FBTyxJQUFJLHFDQUFpQixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQy9EO2dCQUNJLE1BQU0sSUFBSSxLQUFLLENBQUMseUJBQXlCLElBQUksRUFBRSxDQUFDLENBQUM7U0FDeEQ7SUFDTCxDQUFDO0NBQ0osQ0FBQztBQUNGLE1BQU0sQ0FBQyxPQUFPLENBQUMsc0JBQXNCLENBQUMsY0FBYyxFQUFFLGlCQUFpQixFQUFFLE9BQU8sQ0FBQyxDQUFBIn0=