export declare const Action: {
    readonly Allow: "Allow";
};
/**
 * The action of virtual network rule.
 */
export declare type Action = (typeof Action)[keyof typeof Action];
export declare const EncryptionType: {
    /**
     * Volume is encrypted at rest with Platform managed key. It is the default encryption type. This is not a valid encryption type for disk encryption sets.
     */
    readonly EncryptionAtRestWithPlatformKey: "EncryptionAtRestWithPlatformKey";
    /**
     * Volume is encrypted at rest with Customer managed key that can be changed and revoked by a customer.
     */
    readonly EncryptionAtRestWithCustomerKey: "EncryptionAtRestWithCustomerKey";
    /**
     * Volume is encrypted at rest with 2 layers of encryption. One of the keys is Customer managed and the other key is Platform managed.
     */
    readonly EncryptionAtRestWithPlatformAndCustomerKeys: "EncryptionAtRestWithPlatformAndCustomerKeys";
};
/**
 * Type of encryption
 */
export declare type EncryptionType = (typeof EncryptionType)[keyof typeof EncryptionType];
export declare const Name: {
    /**
     * Standard locally redundant storage
     */
    readonly Standard_LRS: "Standard_LRS";
    /**
     * Premium locally redundant storage
     */
    readonly Premium_LRS: "Premium_LRS";
    /**
     * Standard zone redundant storage
     */
    readonly Standard_ZRS: "Standard_ZRS";
};
/**
 * The sku name.
 */
export declare type Name = (typeof Name)[keyof typeof Name];
export declare const StorageTargetType: {
    readonly Iscsi: "Iscsi";
    readonly None: "None";
};
/**
 * Type of storage target
 */
export declare type StorageTargetType = (typeof StorageTargetType)[keyof typeof StorageTargetType];
export declare const Tier: {
    /**
     * Hero
     */
    readonly Hero: "Hero";
    /**
     * Satellite
     */
    readonly Satellite: "Satellite";
    /**
     * Hub
     */
    readonly Hub: "Hub";
};
/**
 * The sku tier.
 */
export declare type Tier = (typeof Tier)[keyof typeof Tier];
export declare const VolumeCreateOption: {
    readonly None: "None";
    readonly FromVolume: "FromVolume";
    readonly FromDiskSnapshot: "FromDiskSnapshot";
    readonly Export: "Export";
};
/**
 * This enumerates the possible sources of a volume creation.
 */
export declare type VolumeCreateOption = (typeof VolumeCreateOption)[keyof typeof VolumeCreateOption];
