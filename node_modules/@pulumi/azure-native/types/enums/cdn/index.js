"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestBodyOperator = exports.RemoteAddressOperator = exports.RedirectType = exports.QueryStringOperator = exports.QueryStringCachingBehavior = exports.QueryStringBehavior = exports.ProbeProtocol = exports.PostArgsOperator = exports.PolicyMode = exports.PolicyEnabledState = exports.ParamIndicator = exports.OptimizationType = exports.Operator = exports.MatchVariable = exports.MatchProcessingBehavior = exports.ManagedRuleEnabledState = exports.LinkToDefaultDomain = exports.IsDeviceOperator = exports.HttpsRedirect = exports.HttpVersionOperator = exports.HealthProbeRequestType = exports.HeaderAction = exports.GeoFilterActions = exports.ForwardingProtocol = exports.EnabledState = exports.DestinationProtocol = exports.DeliveryRuleAction = exports.CustomRuleEnabledState = exports.CookiesOperator = exports.CacheType = exports.CacheBehavior = exports.Algorithm = exports.AfdQueryStringCachingBehavior = exports.AfdMinimumTlsVersion = exports.AfdCertificateType = exports.ActionType = exports.AFDEndpointProtocols = exports.v20210601 = exports.v20200901 = exports.v20200415 = exports.v20200331 = exports.v20191231 = exports.v20190615preview = exports.v20190615 = exports.v20190415 = exports.v20171012 = exports.v20170402 = exports.v20161002 = exports.v20160402 = exports.v20150601 = void 0;
exports.UrlPathOperator = exports.UrlFileNameOperator = exports.UrlFileExtensionOperator = exports.TransformType = exports.Transform = exports.SkuName = exports.SharedPrivateLinkResourceStatus = exports.SecurityPolicyType = exports.SecretType = exports.ResponseBasedDetectedErrorTypes = exports.RequestUriOperator = exports.RequestMethodOperator = exports.RequestHeaderOperator = void 0;
// Export sub-modules:
const v20150601 = require("./v20150601");
exports.v20150601 = v20150601;
const v20160402 = require("./v20160402");
exports.v20160402 = v20160402;
const v20161002 = require("./v20161002");
exports.v20161002 = v20161002;
const v20170402 = require("./v20170402");
exports.v20170402 = v20170402;
const v20171012 = require("./v20171012");
exports.v20171012 = v20171012;
const v20190415 = require("./v20190415");
exports.v20190415 = v20190415;
const v20190615 = require("./v20190615");
exports.v20190615 = v20190615;
const v20190615preview = require("./v20190615preview");
exports.v20190615preview = v20190615preview;
const v20191231 = require("./v20191231");
exports.v20191231 = v20191231;
const v20200331 = require("./v20200331");
exports.v20200331 = v20200331;
const v20200415 = require("./v20200415");
exports.v20200415 = v20200415;
const v20200901 = require("./v20200901");
exports.v20200901 = v20200901;
const v20210601 = require("./v20210601");
exports.v20210601 = v20210601;
exports.AFDEndpointProtocols = {
    Http: "Http",
    Https: "Https",
};
exports.ActionType = {
    Allow: "Allow",
    Block: "Block",
    Log: "Log",
    Redirect: "Redirect",
};
exports.AfdCertificateType = {
    CustomerCertificate: "CustomerCertificate",
    ManagedCertificate: "ManagedCertificate",
};
exports.AfdMinimumTlsVersion = {
    TLS10: "TLS10",
    TLS12: "TLS12",
};
exports.AfdQueryStringCachingBehavior = {
    IgnoreQueryString: "IgnoreQueryString",
    UseQueryString: "UseQueryString",
    NotSet: "NotSet",
};
exports.Algorithm = {
    SHA256: "SHA256",
};
exports.CacheBehavior = {
    BypassCache: "BypassCache",
    Override: "Override",
    SetIfMissing: "SetIfMissing",
};
exports.CacheType = {
    All: "All",
};
exports.CookiesOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.CustomRuleEnabledState = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
exports.DeliveryRuleAction = {
    CacheExpiration: "CacheExpiration",
    CacheKeyQueryString: "CacheKeyQueryString",
    ModifyRequestHeader: "ModifyRequestHeader",
    ModifyResponseHeader: "ModifyResponseHeader",
    UrlRedirect: "UrlRedirect",
    UrlRewrite: "UrlRewrite",
    UrlSigning: "UrlSigning",
    OriginGroupOverride: "OriginGroupOverride",
};
exports.DestinationProtocol = {
    MatchRequest: "MatchRequest",
    Http: "Http",
    Https: "Https",
};
exports.EnabledState = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.ForwardingProtocol = {
    HttpOnly: "HttpOnly",
    HttpsOnly: "HttpsOnly",
    MatchRequest: "MatchRequest",
};
exports.GeoFilterActions = {
    Block: "Block",
    Allow: "Allow",
};
exports.HeaderAction = {
    Append: "Append",
    Overwrite: "Overwrite",
    Delete: "Delete",
};
exports.HealthProbeRequestType = {
    NotSet: "NotSet",
    GET: "GET",
    HEAD: "HEAD",
};
exports.HttpVersionOperator = {
    Equal: "Equal",
};
exports.HttpsRedirect = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.IsDeviceOperator = {
    Equal: "Equal",
};
exports.LinkToDefaultDomain = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.ManagedRuleEnabledState = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
exports.MatchProcessingBehavior = {
    Continue: "Continue",
    Stop: "Stop",
};
exports.MatchVariable = {
    RemoteAddress: "RemoteAddress",
    RequestMethod: "RequestMethod",
    QueryString: "QueryString",
    PostArgs: "PostArgs",
    RequestUri: "RequestUri",
    RequestHeader: "RequestHeader",
    RequestBody: "RequestBody",
    RequestScheme: "RequestScheme",
    UrlPath: "UrlPath",
    UrlFileExtension: "UrlFileExtension",
    UrlFileName: "UrlFileName",
    HttpVersion: "HttpVersion",
    Cookies: "Cookies",
    IsDevice: "IsDevice",
};
exports.Operator = {
    Any: "Any",
    IPMatch: "IPMatch",
    GeoMatch: "GeoMatch",
    Equal: "Equal",
    Contains: "Contains",
    LessThan: "LessThan",
    GreaterThan: "GreaterThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    RegEx: "RegEx",
};
exports.OptimizationType = {
    GeneralWebDelivery: "GeneralWebDelivery",
    GeneralMediaStreaming: "GeneralMediaStreaming",
    VideoOnDemandMediaStreaming: "VideoOnDemandMediaStreaming",
    LargeFileDownload: "LargeFileDownload",
    DynamicSiteAcceleration: "DynamicSiteAcceleration",
};
exports.ParamIndicator = {
    Expires: "Expires",
    KeyId: "KeyId",
    Signature: "Signature",
};
exports.PolicyEnabledState = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
exports.PolicyMode = {
    Prevention: "Prevention",
    Detection: "Detection",
};
exports.PostArgsOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.ProbeProtocol = {
    NotSet: "NotSet",
    Http: "Http",
    Https: "Https",
};
exports.QueryStringBehavior = {
    Include: "Include",
    IncludeAll: "IncludeAll",
    Exclude: "Exclude",
    ExcludeAll: "ExcludeAll",
};
exports.QueryStringCachingBehavior = {
    IgnoreQueryString: "IgnoreQueryString",
    BypassCaching: "BypassCaching",
    UseQueryString: "UseQueryString",
    NotSet: "NotSet",
};
exports.QueryStringOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.RedirectType = {
    Moved: "Moved",
    Found: "Found",
    TemporaryRedirect: "TemporaryRedirect",
    PermanentRedirect: "PermanentRedirect",
};
exports.RemoteAddressOperator = {
    Any: "Any",
    IPMatch: "IPMatch",
    GeoMatch: "GeoMatch",
};
exports.RequestBodyOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.RequestHeaderOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.RequestMethodOperator = {
    Equal: "Equal",
};
exports.RequestUriOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.ResponseBasedDetectedErrorTypes = {
    None: "None",
    TcpErrorsOnly: "TcpErrorsOnly",
    TcpAndHttpErrors: "TcpAndHttpErrors",
};
exports.SecretType = {
    UrlSigningKey: "UrlSigningKey",
    CustomerCertificate: "CustomerCertificate",
    ManagedCertificate: "ManagedCertificate",
};
exports.SecurityPolicyType = {
    WebApplicationFirewall: "WebApplicationFirewall",
};
exports.SharedPrivateLinkResourceStatus = {
    Pending: "Pending",
    Approved: "Approved",
    Rejected: "Rejected",
    Disconnected: "Disconnected",
    Timeout: "Timeout",
};
exports.SkuName = {
    Standard_Verizon: "Standard_Verizon",
    Premium_Verizon: "Premium_Verizon",
    Custom_Verizon: "Custom_Verizon",
    Standard_Akamai: "Standard_Akamai",
    Standard_ChinaCdn: "Standard_ChinaCdn",
    Standard_Microsoft: "Standard_Microsoft",
    Premium_ChinaCdn: "Premium_ChinaCdn",
    Standard_AzureFrontDoor: "Standard_AzureFrontDoor",
    Premium_AzureFrontDoor: "Premium_AzureFrontDoor",
    Standard_955BandWidth_ChinaCdn: "Standard_955BandWidth_ChinaCdn",
    Standard_AvgBandWidth_ChinaCdn: "Standard_AvgBandWidth_ChinaCdn",
    StandardPlus_ChinaCdn: "StandardPlus_ChinaCdn",
    StandardPlus_955BandWidth_ChinaCdn: "StandardPlus_955BandWidth_ChinaCdn",
    StandardPlus_AvgBandWidth_ChinaCdn: "StandardPlus_AvgBandWidth_ChinaCdn",
};
exports.Transform = {
    Lowercase: "Lowercase",
    Uppercase: "Uppercase",
    Trim: "Trim",
    UrlDecode: "UrlDecode",
    UrlEncode: "UrlEncode",
    RemoveNulls: "RemoveNulls",
};
exports.TransformType = {
    Lowercase: "Lowercase",
    Uppercase: "Uppercase",
    Trim: "Trim",
    UrlDecode: "UrlDecode",
    UrlEncode: "UrlEncode",
    RemoveNulls: "RemoveNulls",
};
exports.UrlFileExtensionOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.UrlFileNameOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.UrlPathOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    Wildcard: "Wildcard",
    RegEx: "RegEx",
};
//# sourceMappingURL=data:application/json;base64,