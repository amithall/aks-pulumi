"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WeeksOfMonth = exports.TimeframeType = exports.StatusType = exports.ScheduledActionStatus = exports.ScheduledActionKind = exports.ScheduleFrequency = exports.RuleStatus = exports.ReportType = exports.ReportTimeframeType = exports.ReportGranularityType = exports.ReportConfigColumnType = exports.ReportColumnType = exports.RecurrenceType = exports.PivotTypeType = exports.OperatorType = exports.MetricType = exports.KpiTypeType = exports.GranularityType = exports.FunctionType = exports.FormatType = exports.FileFormat = exports.ExportType = exports.DaysOfWeek = exports.CostAllocationResourceType = exports.CostAllocationPolicyType = exports.ConnectorBillingModel = exports.ChartType = exports.AccumulatedType = exports.v20220401preview = exports.v20211001 = exports.v20210101 = exports.v20201201preview = exports.v20200601 = exports.v20200301preview = exports.v20191101 = exports.v20191001 = exports.v20190901 = exports.v20190401preview = exports.v20190301preview = exports.v20190101 = exports.v20180801preview = exports.v20180531 = void 0;
// Export sub-modules:
const v20180531 = require("./v20180531");
exports.v20180531 = v20180531;
const v20180801preview = require("./v20180801preview");
exports.v20180801preview = v20180801preview;
const v20190101 = require("./v20190101");
exports.v20190101 = v20190101;
const v20190301preview = require("./v20190301preview");
exports.v20190301preview = v20190301preview;
const v20190401preview = require("./v20190401preview");
exports.v20190401preview = v20190401preview;
const v20190901 = require("./v20190901");
exports.v20190901 = v20190901;
const v20191001 = require("./v20191001");
exports.v20191001 = v20191001;
const v20191101 = require("./v20191101");
exports.v20191101 = v20191101;
const v20200301preview = require("./v20200301preview");
exports.v20200301preview = v20200301preview;
const v20200601 = require("./v20200601");
exports.v20200601 = v20200601;
const v20201201preview = require("./v20201201preview");
exports.v20201201preview = v20201201preview;
const v20210101 = require("./v20210101");
exports.v20210101 = v20210101;
const v20211001 = require("./v20211001");
exports.v20211001 = v20211001;
const v20220401preview = require("./v20220401preview");
exports.v20220401preview = v20220401preview;
exports.AccumulatedType = {
    True: "true",
    False: "false",
};
exports.ChartType = {
    Area: "Area",
    Line: "Line",
    StackedColumn: "StackedColumn",
    GroupedColumn: "GroupedColumn",
    Table: "Table",
};
exports.ConnectorBillingModel = {
    Trial: "trial",
    AutoUpgrade: "autoUpgrade",
    Premium: "premium",
    Expired: "expired",
};
exports.CostAllocationPolicyType = {
    FixedProportion: "FixedProportion",
};
exports.CostAllocationResourceType = {
    /**
     * Indicates an Azure dimension such as a subscription id or resource group name is being used for allocation.
     */
    Dimension: "Dimension",
    /**
     * Allocates cost based on Azure Tag key value pairs.
     */
    Tag: "Tag",
};
exports.DaysOfWeek = {
    Monday: "Monday",
    Tuesday: "Tuesday",
    Wednesday: "Wednesday",
    Thursday: "Thursday",
    Friday: "Friday",
    Saturday: "Saturday",
    Sunday: "Sunday",
};
exports.ExportType = {
    Usage: "Usage",
    ActualCost: "ActualCost",
    AmortizedCost: "AmortizedCost",
};
exports.FileFormat = {
    Csv: "Csv",
};
exports.FormatType = {
    Csv: "Csv",
};
exports.FunctionType = {
    Avg: "Avg",
    Max: "Max",
    Min: "Min",
    Sum: "Sum",
};
exports.GranularityType = {
    Daily: "Daily",
    Hourly: "Hourly",
};
exports.KpiTypeType = {
    Forecast: "Forecast",
    Budget: "Budget",
};
exports.MetricType = {
    ActualCost: "ActualCost",
    AmortizedCost: "AmortizedCost",
    AHUB: "AHUB",
};
exports.OperatorType = {
    In: "In",
    Contains: "Contains",
};
exports.PivotTypeType = {
    Dimension: "Dimension",
    TagKey: "TagKey",
};
exports.RecurrenceType = {
    Daily: "Daily",
    Weekly: "Weekly",
    Monthly: "Monthly",
    Annually: "Annually",
};
exports.ReportColumnType = {
    Tag: "Tag",
    Dimension: "Dimension",
};
exports.ReportConfigColumnType = {
    Tag: "Tag",
    Dimension: "Dimension",
};
exports.ReportGranularityType = {
    Daily: "Daily",
    Monthly: "Monthly",
};
exports.ReportTimeframeType = {
    WeekToDate: "WeekToDate",
    MonthToDate: "MonthToDate",
    YearToDate: "YearToDate",
    Custom: "Custom",
};
exports.ReportType = {
    Usage: "Usage",
};
exports.RuleStatus = {
    /**
     * Rule is saved but not used to allocate costs.
     */
    NotActive: "NotActive",
    /**
     * Rule is saved and impacting cost allocation.
     */
    Active: "Active",
    /**
     * Rule is saved and cost allocation is being updated. Readonly value that cannot be submitted in a put request.
     */
    Processing: "Processing",
};
exports.ScheduleFrequency = {
    /**
     * Cost analysis data will be emailed every day.
     */
    Daily: "Daily",
    /**
     * Cost analysis data will be emailed every week.
     */
    Weekly: "Weekly",
    /**
     * Cost analysis data will be emailed every month.
     */
    Monthly: "Monthly",
};
exports.ScheduledActionKind = {
    /**
     * Cost analysis data will be emailed.
     */
    Email: "Email",
};
exports.ScheduledActionStatus = {
    /**
     * Scheduled action is saved but will not be executed.
     */
    Disabled: "Disabled",
    /**
     * Scheduled action is saved and will be executed.
     */
    Enabled: "Enabled",
};
exports.StatusType = {
    Active: "Active",
    Inactive: "Inactive",
};
exports.TimeframeType = {
    WeekToDate: "WeekToDate",
    MonthToDate: "MonthToDate",
    Custom: "Custom",
};
exports.WeeksOfMonth = {
    First: "First",
    Second: "Second",
    Third: "Third",
    Fourth: "Fourth",
    Last: "Last",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi90eXBlcy9lbnVtcy9jb3N0bWFuYWdlbWVudC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0VBQXdFO0FBQ3hFLGlGQUFpRjs7O0FBRWpGLHNCQUFzQjtBQUN0Qix5Q0FBeUM7QUFnQnJDLDhCQUFTO0FBZmIsdURBQXVEO0FBZ0JuRCw0Q0FBZ0I7QUFmcEIseUNBQXlDO0FBZ0JyQyw4QkFBUztBQWZiLHVEQUF1RDtBQWdCbkQsNENBQWdCO0FBZnBCLHVEQUF1RDtBQWdCbkQsNENBQWdCO0FBZnBCLHlDQUF5QztBQWdCckMsOEJBQVM7QUFmYix5Q0FBeUM7QUFnQnJDLDhCQUFTO0FBZmIseUNBQXlDO0FBZ0JyQyw4QkFBUztBQWZiLHVEQUF1RDtBQWdCbkQsNENBQWdCO0FBZnBCLHlDQUF5QztBQWdCckMsOEJBQVM7QUFmYix1REFBdUQ7QUFnQm5ELDRDQUFnQjtBQWZwQix5Q0FBeUM7QUFnQnJDLDhCQUFTO0FBZmIseUNBQXlDO0FBZ0JyQyw4QkFBUztBQWZiLHVEQUF1RDtBQWdCbkQsNENBQWdCO0FBR1AsUUFBQSxlQUFlLEdBQUc7SUFDM0IsSUFBSSxFQUFFLE1BQU07SUFDWixLQUFLLEVBQUUsT0FBTztDQUNSLENBQUM7QUFPRSxRQUFBLFNBQVMsR0FBRztJQUNyQixJQUFJLEVBQUUsTUFBTTtJQUNaLElBQUksRUFBRSxNQUFNO0lBQ1osYUFBYSxFQUFFLGVBQWU7SUFDOUIsYUFBYSxFQUFFLGVBQWU7SUFDOUIsS0FBSyxFQUFFLE9BQU87Q0FDUixDQUFDO0FBT0UsUUFBQSxxQkFBcUIsR0FBRztJQUNqQyxLQUFLLEVBQUUsT0FBTztJQUNkLFdBQVcsRUFBRSxhQUFhO0lBQzFCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLE9BQU8sRUFBRSxTQUFTO0NBQ1osQ0FBQztBQU9FLFFBQUEsd0JBQXdCLEdBQUc7SUFDcEMsZUFBZSxFQUFFLGlCQUFpQjtD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