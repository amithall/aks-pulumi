"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZoneType = exports.VpnType = exports.VpnClientProtocol = exports.VirtualNetworkPeeringState = exports.VirtualNetworkGatewayType = exports.VirtualNetworkGatewaySkuTier = exports.VirtualNetworkGatewaySkuName = exports.VirtualNetworkGatewayConnectionType = exports.TransportProtocol = exports.ServiceProviderProvisioningState = exports.SecurityRuleProtocol = exports.SecurityRuleDirection = exports.SecurityRuleAccess = exports.RouteNextHopType = exports.RouteFilterRuleType = exports.PublicIPAddressSkuName = exports.ProbeProtocol = exports.PfsGroup = exports.PcProtocol = exports.LoadDistribution = exports.LoadBalancerSkuName = exports.IpsecIntegrity = exports.IpsecEncryption = exports.IkeIntegrity = exports.IkeEncryption = exports.IPVersion = exports.IPAllocationMethod = exports.ExpressRouteCircuitSkuTier = exports.ExpressRouteCircuitSkuFamily = exports.ExpressRouteCircuitPeeringType = exports.ExpressRouteCircuitPeeringState = exports.ExpressRouteCircuitPeeringAdvertisedPublicPrefixState = exports.DhGroup = exports.AuthorizationUseStatus = exports.ApplicationGatewayTier = exports.ApplicationGatewaySslProtocol = exports.ApplicationGatewaySslPolicyType = exports.ApplicationGatewaySslPolicyName = exports.ApplicationGatewaySslCipherSuite = exports.ApplicationGatewaySkuName = exports.ApplicationGatewayRequestRoutingRuleType = exports.ApplicationGatewayRedirectType = exports.ApplicationGatewayProtocol = exports.ApplicationGatewayFirewallMode = exports.ApplicationGatewayCookieBasedAffinity = exports.Access = void 0;
exports.Access = {
    Allow: "Allow",
    Deny: "Deny",
};
exports.ApplicationGatewayCookieBasedAffinity = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.ApplicationGatewayFirewallMode = {
    Detection: "Detection",
    Prevention: "Prevention",
};
exports.ApplicationGatewayProtocol = {
    Http: "Http",
    Https: "Https",
};
exports.ApplicationGatewayRedirectType = {
    Permanent: "Permanent",
    Found: "Found",
    SeeOther: "SeeOther",
    Temporary: "Temporary",
};
exports.ApplicationGatewayRequestRoutingRuleType = {
    Basic: "Basic",
    PathBasedRouting: "PathBasedRouting",
};
exports.ApplicationGatewaySkuName = {
    Standard_Small: "Standard_Small",
    Standard_Medium: "Standard_Medium",
    Standard_Large: "Standard_Large",
    WAF_Medium: "WAF_Medium",
    WAF_Large: "WAF_Large",
};
exports.ApplicationGatewaySslCipherSuite = {
    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384: "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256: "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA: "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA: "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
    TLS_DHE_RSA_WITH_AES_256_GCM_SHA384: "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
    TLS_DHE_RSA_WITH_AES_128_GCM_SHA256: "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
    TLS_DHE_RSA_WITH_AES_256_CBC_SHA: "TLS_DHE_RSA_WITH_AES_256_CBC_SHA",
    TLS_DHE_RSA_WITH_AES_128_CBC_SHA: "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
    TLS_RSA_WITH_AES_256_GCM_SHA384: "TLS_RSA_WITH_AES_256_GCM_SHA384",
    TLS_RSA_WITH_AES_128_GCM_SHA256: "TLS_RSA_WITH_AES_128_GCM_SHA256",
    TLS_RSA_WITH_AES_256_CBC_SHA256: "TLS_RSA_WITH_AES_256_CBC_SHA256",
    TLS_RSA_WITH_AES_128_CBC_SHA256: "TLS_RSA_WITH_AES_128_CBC_SHA256",
    TLS_RSA_WITH_AES_256_CBC_SHA: "TLS_RSA_WITH_AES_256_CBC_SHA",
    TLS_RSA_WITH_AES_128_CBC_SHA: "TLS_RSA_WITH_AES_128_CBC_SHA",
    TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384: "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
    TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256: "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384: "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256: "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
    TLS_DHE_DSS_WITH_AES_256_CBC_SHA256: "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256",
    TLS_DHE_DSS_WITH_AES_128_CBC_SHA256: "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256",
    TLS_DHE_DSS_WITH_AES_256_CBC_SHA: "TLS_DHE_DSS_WITH_AES_256_CBC_SHA",
    TLS_DHE_DSS_WITH_AES_128_CBC_SHA: "TLS_DHE_DSS_WITH_AES_128_CBC_SHA",
    TLS_RSA_WITH_3DES_EDE_CBC_SHA: "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
    TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA: "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA",
    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256: "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
    TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384: "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
};
exports.ApplicationGatewaySslPolicyName = {
    AppGwSslPolicy20150501: "AppGwSslPolicy20150501",
    AppGwSslPolicy20170401: "AppGwSslPolicy20170401",
    AppGwSslPolicy20170401S: "AppGwSslPolicy20170401S",
};
exports.ApplicationGatewaySslPolicyType = {
    Predefined: "Predefined",
    Custom: "Custom",
};
exports.ApplicationGatewaySslProtocol = {
    TLSv1_0: "TLSv1_0",
    TLSv1_1: "TLSv1_1",
    TLSv1_2: "TLSv1_2",
};
exports.ApplicationGatewayTier = {
    Standard: "Standard",
    WAF: "WAF",
};
exports.AuthorizationUseStatus = {
    Available: "Available",
    InUse: "InUse",
};
exports.DhGroup = {
    None: "None",
    DHGroup1: "DHGroup1",
    DHGroup2: "DHGroup2",
    DHGroup14: "DHGroup14",
    DHGroup2048: "DHGroup2048",
    ECP256: "ECP256",
    ECP384: "ECP384",
    DHGroup24: "DHGroup24",
};
exports.ExpressRouteCircuitPeeringAdvertisedPublicPrefixState = {
    NotConfigured: "NotConfigured",
    Configuring: "Configuring",
    Configured: "Configured",
    ValidationNeeded: "ValidationNeeded",
};
exports.ExpressRouteCircuitPeeringState = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
exports.ExpressRouteCircuitPeeringType = {
    AzurePublicPeering: "AzurePublicPeering",
    AzurePrivatePeering: "AzurePrivatePeering",
    MicrosoftPeering: "MicrosoftPeering",
};
exports.ExpressRouteCircuitSkuFamily = {
    UnlimitedData: "UnlimitedData",
    MeteredData: "MeteredData",
};
exports.ExpressRouteCircuitSkuTier = {
    Standard: "Standard",
    Premium: "Premium",
};
exports.IPAllocationMethod = {
    Static: "Static",
    Dynamic: "Dynamic",
};
exports.IPVersion = {
    IPv4: "IPv4",
    IPv6: "IPv6",
};
exports.IkeEncryption = {
    DES: "DES",
    DES3: "DES3",
    AES128: "AES128",
    AES192: "AES192",
    AES256: "AES256",
};
exports.IkeIntegrity = {
    MD5: "MD5",
    SHA1: "SHA1",
    SHA256: "SHA256",
    SHA384: "SHA384",
};
exports.IpsecEncryption = {
    None: "None",
    DES: "DES",
    DES3: "DES3",
    AES128: "AES128",
    AES192: "AES192",
    AES256: "AES256",
    GCMAES128: "GCMAES128",
    GCMAES192: "GCMAES192",
    GCMAES256: "GCMAES256",
};
exports.IpsecIntegrity = {
    MD5: "MD5",
    SHA1: "SHA1",
    SHA256: "SHA256",
    GCMAES128: "GCMAES128",
    GCMAES192: "GCMAES192",
    GCMAES256: "GCMAES256",
};
exports.LoadBalancerSkuName = {
    Basic: "Basic",
    Standard: "Standard",
};
exports.LoadDistribution = {
    Default: "Default",
    SourceIP: "SourceIP",
    SourceIPProtocol: "SourceIPProtocol",
};
exports.PcProtocol = {
    TCP: "TCP",
    UDP: "UDP",
    Any: "Any",
};
exports.PfsGroup = {
    None: "None",
    PFS1: "PFS1",
    PFS2: "PFS2",
    PFS2048: "PFS2048",
    ECP256: "ECP256",
    ECP384: "ECP384",
    PFS24: "PFS24",
};
exports.ProbeProtocol = {
    Http: "Http",
    Tcp: "Tcp",
};
exports.PublicIPAddressSkuName = {
    Basic: "Basic",
    Standard: "Standard",
};
exports.RouteFilterRuleType = {
    Community: "Community",
};
exports.RouteNextHopType = {
    VirtualNetworkGateway: "VirtualNetworkGateway",
    VnetLocal: "VnetLocal",
    Internet: "Internet",
    VirtualAppliance: "VirtualAppliance",
    None: "None",
};
exports.SecurityRuleAccess = {
    Allow: "Allow",
    Deny: "Deny",
};
exports.SecurityRuleDirection = {
    Inbound: "Inbound",
    Outbound: "Outbound",
};
exports.SecurityRuleProtocol = {
    Tcp: "Tcp",
    Udp: "Udp",
    Asterisk: "*",
};
exports.ServiceProviderProvisioningState = {
    NotProvisioned: "NotProvisioned",
    Provisioning: "Provisioning",
    Provisioned: "Provisioned",
    Deprovisioning: "Deprovisioning",
};
exports.TransportProtocol = {
    Udp: "Udp",
    Tcp: "Tcp",
    All: "All",
};
exports.VirtualNetworkGatewayConnectionType = {
    IPsec: "IPsec",
    Vnet2Vnet: "Vnet2Vnet",
    ExpressRoute: "ExpressRoute",
    VPNClient: "VPNClient",
};
exports.VirtualNetworkGatewaySkuName = {
    Basic: "Basic",
    HighPerformance: "HighPerformance",
    Standard: "Standard",
    UltraPerformance: "UltraPerformance",
    VpnGw1: "VpnGw1",
    VpnGw2: "VpnGw2",
    VpnGw3: "VpnGw3",
};
exports.VirtualNetworkGatewaySkuTier = {
    Basic: "Basic",
    HighPerformance: "HighPerformance",
    Standard: "Standard",
    UltraPerformance: "UltraPerformance",
    VpnGw1: "VpnGw1",
    VpnGw2: "VpnGw2",
    VpnGw3: "VpnGw3",
};
exports.VirtualNetworkGatewayType = {
    Vpn: "Vpn",
    ExpressRoute: "ExpressRoute",
};
exports.VirtualNetworkPeeringState = {
    Initiated: "Initiated",
    Connected: "Connected",
    Disconnected: "Disconnected",
};
exports.VpnClientProtocol = {
    IkeV2: "IkeV2",
    SSTP: "SSTP",
};
exports.VpnType = {
    PolicyBased: "PolicyBased",
    RouteBased: "RouteBased",
};
exports.ZoneType = {
    Public: "Public",
    Private: "Private",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90eXBlcy9lbnVtcy9uZXR3b3JrL3YyMDE3MDkwMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0VBQXdFO0FBQ3hFLGlGQUFpRjs7O0FBR3BFLFFBQUEsTUFBTSxHQUFHO0lBQ2xCLEtBQUssRUFBRSxPQUFPO0lBQ2QsSUFBSSxFQUFFLE1BQU07Q0FDTixDQUFDO0FBT0UsUUFBQSxxQ0FBcUMsR0FBRztJQUNqRCxPQUFPLEVBQUUsU0FBUztJQUNsQixRQUFRLEVBQUUsVUFBVTtDQUNkLENBQUM7QUFPRSxRQUFBLDhCQUE4QixHQUFHO0lBQzFDLFNBQVMsRUFBRSxXQUFXO0lBQ3RCLFVBQVUsRUFBRSxZQUFZO0NBQ2xCLENBQUM7QUFPRSxRQUFBLDBCQUEwQixHQUFHO0lBQ3RDLElBQUksRUFBRSxNQUFNO0lBQ1osS0FBSyxFQUFFLE9BQU87Q0FDUixDQUFDO0FBT0UsUUFBQSw4QkFBOEIsR0FBRztJQUMxQyxTQUFTLEVBQUUsV0FBVztJQUN0QixLQUFLLEVBQUUsT0FBTztJQUNkLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLFNBQVMsRUFBRSxXQUFXO0NBQ2hCLENBQUM7QUFPRSxRQUFBLHdDQUF3QyxHQUFHO0lBQ3BELEtBQUssRUFBRSxPQUFPO0lBQ2QsZ0JBQWdCLEVBQUUsa0JBQWtCO0NBQzlCLENBQUM7QUFPRSxRQUFBLHlCQUF5QixHQUFHO0lBQ3JDLGNBQWMsRUFBRSxnQkFBZ0I7SUFDaEMsZUFBZSxFQUFFLGlCQUFpQjtJQUNsQyxjQUFjLEVBQUUsZ0JBQWdCO0lBQ2hDLFVBQVUsRUFBRSxZQUFZO0lBQ3hCLFNBQVMsRUFBRSxXQUFXO0NBQ2hCLENBQUM7QUFPRSxRQUFBLGdDQUFnQyxHQUFHO0lBQzVDLHFDQUFxQyxFQUFFLHVDQUF1QztJQUM5RSxxQ0FBcUMsRUFBRSx1Q0FBdUM7SUFDOUUsa0NBQWtDLEVBQUUsb0NBQW9DO0lBQ3hF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