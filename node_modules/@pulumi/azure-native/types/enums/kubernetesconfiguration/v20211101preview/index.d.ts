export declare const KustomizationValidationType: {
    readonly None: "none";
    readonly Client: "client";
    readonly Server: "server";
};
/**
 * Specify whether to validate the Kubernetes objects referenced in the Kustomization before applying them to the cluster.
 */
export declare type KustomizationValidationType = (typeof KustomizationValidationType)[keyof typeof KustomizationValidationType];
export declare const LevelType: {
    readonly Error: "Error";
    readonly Warning: "Warning";
    readonly Information: "Information";
};
/**
 * Level of the status.
 */
export declare type LevelType = (typeof LevelType)[keyof typeof LevelType];
export declare const OperatorScopeType: {
    readonly Cluster: "cluster";
    readonly Namespace: "namespace";
};
/**
 * Scope at which the operator will be installed.
 */
export declare type OperatorScopeType = (typeof OperatorScopeType)[keyof typeof OperatorScopeType];
export declare const OperatorType: {
    readonly Flux: "Flux";
};
/**
 * Type of the operator
 */
export declare type OperatorType = (typeof OperatorType)[keyof typeof OperatorType];
export declare const ResourceIdentityType: {
    readonly SystemAssigned: "SystemAssigned";
};
/**
 * The identity type.
 */
export declare type ResourceIdentityType = (typeof ResourceIdentityType)[keyof typeof ResourceIdentityType];
export declare const ScopeType: {
    readonly Cluster: "cluster";
    readonly Namespace: "namespace";
};
/**
 * Scope at which the operator will be installed.
 */
export declare type ScopeType = (typeof ScopeType)[keyof typeof ScopeType];
export declare const SourceKindType: {
    readonly GitRepository: "GitRepository";
};
/**
 * Source Kind to pull the configuration data from.
 */
export declare type SourceKindType = (typeof SourceKindType)[keyof typeof SourceKindType];
