export declare const EncryptionAtHost: {
    readonly Disabled: "Disabled";
    readonly Enabled: "Enabled";
};
/**
 * Whether master virtual machines are encrypted at host.
 */
export declare type EncryptionAtHost = (typeof EncryptionAtHost)[keyof typeof EncryptionAtHost];
export declare const SoftwareDefinedNetwork: {
    readonly OVNKubernetes: "OVNKubernetes";
    readonly OpenShiftSDN: "OpenShiftSDN";
};
/**
 * The software defined network (SDN) to use when installing the cluster.
 */
export declare type SoftwareDefinedNetwork = (typeof SoftwareDefinedNetwork)[keyof typeof SoftwareDefinedNetwork];
export declare const VMSize: {
    readonly Standard_D16as_v4: "Standard_D16as_v4";
    readonly Standard_D16s_v3: "Standard_D16s_v3";
    readonly Standard_D2s_v3: "Standard_D2s_v3";
    readonly Standard_D32as_v4: "Standard_D32as_v4";
    readonly Standard_D32s_v3: "Standard_D32s_v3";
    readonly Standard_D4as_v4: "Standard_D4as_v4";
    readonly Standard_D4s_v3: "Standard_D4s_v3";
    readonly Standard_D8as_v4: "Standard_D8as_v4";
    readonly Standard_D8s_v3: "Standard_D8s_v3";
    readonly Standard_E16s_v3: "Standard_E16s_v3";
    readonly Standard_E32s_v3: "Standard_E32s_v3";
    readonly Standard_E4s_v3: "Standard_E4s_v3";
    readonly Standard_E64i_v3: "Standard_E64i_v3";
    readonly Standard_E64is_v3: "Standard_E64is_v3";
    readonly Standard_E8s_v3: "Standard_E8s_v3";
    readonly Standard_F16s_v2: "Standard_F16s_v2";
    readonly Standard_F32s_v2: "Standard_F32s_v2";
    readonly Standard_F4s_v2: "Standard_F4s_v2";
    readonly Standard_F72s_v2: "Standard_F72s_v2";
    readonly Standard_F8s_v2: "Standard_F8s_v2";
    readonly Standard_G5: "Standard_G5";
    readonly Standard_GS5: "Standard_GS5";
    readonly Standard_M128ms: "Standard_M128ms";
};
/**
 * The size of the worker VMs.
 */
export declare type VMSize = (typeof VMSize)[keyof typeof VMSize];
export declare const Visibility: {
    readonly Private: "Private";
    readonly Public: "Public";
};
/**
 * Ingress visibility.
 */
export declare type Visibility = (typeof Visibility)[keyof typeof Visibility];
