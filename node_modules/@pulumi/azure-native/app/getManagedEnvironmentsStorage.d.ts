import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Storage resource for managedEnvironment.
 * API Version: 2022-03-01.
 */
export declare function getManagedEnvironmentsStorage(args: GetManagedEnvironmentsStorageArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedEnvironmentsStorageResult>;
export interface GetManagedEnvironmentsStorageArgs {
    /**
     * Name of the Environment.
     */
    envName: string;
    /**
     * Name of the storage.
     */
    name: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * Storage resource for managedEnvironment.
 */
export interface GetManagedEnvironmentsStorageResult {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Storage properties
     */
    readonly properties: outputs.app.ManagedEnvironmentStorageResponseProperties;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.app.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
export declare function getManagedEnvironmentsStorageOutput(args: GetManagedEnvironmentsStorageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedEnvironmentsStorageResult>;
export interface GetManagedEnvironmentsStorageOutputArgs {
    /**
     * Name of the Environment.
     */
    envName: pulumi.Input<string>;
    /**
     * Name of the storage.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
