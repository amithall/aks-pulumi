import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * A node pool snapshot resource.
 */
export declare function getSnapshot(args: GetSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetSnapshotResult>;
export interface GetSnapshotArgs {
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
    /**
     * The name of the managed cluster resource.
     */
    resourceName: string;
}
/**
 * A node pool snapshot resource.
 */
export interface GetSnapshotResult {
    /**
     * CreationData to be used to specify the source agent pool resource ID to create this snapshot.
     */
    readonly creationData?: outputs.containerservice.v20210901.CreationDataResponse;
    /**
     * Whether to use a FIPS-enabled OS.
     */
    readonly enableFIPS: boolean;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * The version of Kubernetes.
     */
    readonly kubernetesVersion: string;
    /**
     * Resource location
     */
    readonly location: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * The version of node image.
     */
    readonly nodeImageVersion: string;
    /**
     * Specifies an OS SKU. This value must not be specified if OSType is Windows.
     */
    readonly osSku: string;
    /**
     * The operating system type. The default is Linux.
     */
    readonly osType: string;
    /**
     * The type of a snapshot. The default is NodePool.
     */
    readonly snapshotType?: string;
    /**
     * The system metadata relating to this snapshot.
     */
    readonly systemData: outputs.containerservice.v20210901.SystemDataResponse;
    /**
     * Resource tags
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type
     */
    readonly type: string;
    /**
     * The size of the VM.
     */
    readonly vmSize: string;
}
export declare function getSnapshotOutput(args: GetSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnapshotResult>;
export interface GetSnapshotOutputArgs {
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the managed cluster resource.
     */
    resourceName: pulumi.Input<string>;
}
