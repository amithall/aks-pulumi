"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20211201 = exports.v20210601 = exports.v20210101preview = exports.v20200717preview = exports.v20200320 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./addon"), exports);
__exportStar(require("./authorization"), exports);
__exportStar(require("./cloudLink"), exports);
__exportStar(require("./cluster"), exports);
__exportStar(require("./datastore"), exports);
__exportStar(require("./getAddon"), exports);
__exportStar(require("./getAuthorization"), exports);
__exportStar(require("./getCloudLink"), exports);
__exportStar(require("./getCluster"), exports);
__exportStar(require("./getDatastore"), exports);
__exportStar(require("./getGlobalReachConnection"), exports);
__exportStar(require("./getHcxEnterpriseSite"), exports);
__exportStar(require("./getPlacementPolicy"), exports);
__exportStar(require("./getPrivateCloud"), exports);
__exportStar(require("./getScriptExecution"), exports);
__exportStar(require("./getScriptExecutionLogs"), exports);
__exportStar(require("./getWorkloadNetworkDhcp"), exports);
__exportStar(require("./getWorkloadNetworkDnsService"), exports);
__exportStar(require("./getWorkloadNetworkDnsZone"), exports);
__exportStar(require("./getWorkloadNetworkPortMirroring"), exports);
__exportStar(require("./getWorkloadNetworkPublicIP"), exports);
__exportStar(require("./getWorkloadNetworkSegment"), exports);
__exportStar(require("./getWorkloadNetworkVMGroup"), exports);
__exportStar(require("./globalReachConnection"), exports);
__exportStar(require("./hcxEnterpriseSite"), exports);
__exportStar(require("./listPrivateCloudAdminCredentials"), exports);
__exportStar(require("./placementPolicy"), exports);
__exportStar(require("./privateCloud"), exports);
__exportStar(require("./scriptExecution"), exports);
__exportStar(require("./workloadNetworkDhcp"), exports);
__exportStar(require("./workloadNetworkDnsService"), exports);
__exportStar(require("./workloadNetworkDnsZone"), exports);
__exportStar(require("./workloadNetworkPortMirroring"), exports);
__exportStar(require("./workloadNetworkPublicIP"), exports);
__exportStar(require("./workloadNetworkSegment"), exports);
__exportStar(require("./workloadNetworkVMGroup"), exports);
// Export enums:
__exportStar(require("../types/enums/avs"), exports);
// Export sub-modules:
const v20200320 = require("./v20200320");
exports.v20200320 = v20200320;
const v20200717preview = require("./v20200717preview");
exports.v20200717preview = v20200717preview;
const v20210101preview = require("./v20210101preview");
exports.v20210101preview = v20210101preview;
const v20210601 = require("./v20210601");
exports.v20210601 = v20210601;
const v20211201 = require("./v20211201");
exports.v20211201 = v20211201;
// Import resources to register:
const addon_1 = require("./addon");
const authorization_1 = require("./authorization");
const cloudLink_1 = require("./cloudLink");
const cluster_1 = require("./cluster");
const datastore_1 = require("./datastore");
const globalReachConnection_1 = require("./globalReachConnection");
const hcxEnterpriseSite_1 = require("./hcxEnterpriseSite");
const placementPolicy_1 = require("./placementPolicy");
const privateCloud_1 = require("./privateCloud");
const scriptExecution_1 = require("./scriptExecution");
const workloadNetworkDhcp_1 = require("./workloadNetworkDhcp");
const workloadNetworkDnsService_1 = require("./workloadNetworkDnsService");
const workloadNetworkDnsZone_1 = require("./workloadNetworkDnsZone");
const workloadNetworkPortMirroring_1 = require("./workloadNetworkPortMirroring");
const workloadNetworkPublicIP_1 = require("./workloadNetworkPublicIP");
const workloadNetworkSegment_1 = require("./workloadNetworkSegment");
const workloadNetworkVMGroup_1 = require("./workloadNetworkVMGroup");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:avs:Addon":
                return new addon_1.Addon(name, undefined, { urn });
            case "azure-native:avs:Authorization":
                return new authorization_1.Authorization(name, undefined, { urn });
            case "azure-native:avs:CloudLink":
                return new cloudLink_1.CloudLink(name, undefined, { urn });
            case "azure-native:avs:Cluster":
                return new cluster_1.Cluster(name, undefined, { urn });
            case "azure-native:avs:Datastore":
                return new datastore_1.Datastore(name, undefined, { urn });
            case "azure-native:avs:GlobalReachConnection":
                return new globalReachConnection_1.GlobalReachConnection(name, undefined, { urn });
            case "azure-native:avs:HcxEnterpriseSite":
                return new hcxEnterpriseSite_1.HcxEnterpriseSite(name, undefined, { urn });
            case "azure-native:avs:PlacementPolicy":
                return new placementPolicy_1.PlacementPolicy(name, undefined, { urn });
            case "azure-native:avs:PrivateCloud":
                return new privateCloud_1.PrivateCloud(name, undefined, { urn });
            case "azure-native:avs:ScriptExecution":
                return new scriptExecution_1.ScriptExecution(name, undefined, { urn });
            case "azure-native:avs:WorkloadNetworkDhcp":
                return new workloadNetworkDhcp_1.WorkloadNetworkDhcp(name, undefined, { urn });
            case "azure-native:avs:WorkloadNetworkDnsService":
                return new workloadNetworkDnsService_1.WorkloadNetworkDnsService(name, undefined, { urn });
            case "azure-native:avs:WorkloadNetworkDnsZone":
                return new workloadNetworkDnsZone_1.WorkloadNetworkDnsZone(name, undefined, { urn });
            case "azure-native:avs:WorkloadNetworkPortMirroring":
                return new workloadNetworkPortMirroring_1.WorkloadNetworkPortMirroring(name, undefined, { urn });
            case "azure-native:avs:WorkloadNetworkPublicIP":
                return new workloadNetworkPublicIP_1.WorkloadNetworkPublicIP(name, undefined, { urn });
            case "azure-native:avs:WorkloadNetworkSegment":
                return new workloadNetworkSegment_1.WorkloadNetworkSegment(name, undefined, { urn });
            case "azure-native:avs:WorkloadNetworkVMGroup":
                return new workloadNetworkVMGroup_1.WorkloadNetworkVMGroup(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "avs", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9hdnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHdFQUF3RTtBQUN4RSxpRkFBaUY7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRWpGLHlDQUF5QztBQUN6QywwQ0FBMEM7QUFFMUMsa0JBQWtCO0FBQ2xCLDBDQUF3QjtBQUN4QixrREFBZ0M7QUFDaEMsOENBQTRCO0FBQzVCLDRDQUEwQjtBQUMxQiw4Q0FBNEI7QUFDNUIsNkNBQTJCO0FBQzNCLHFEQUFtQztBQUNuQyxpREFBK0I7QUFDL0IsK0NBQTZCO0FBQzdCLGlEQUErQjtBQUMvQiw2REFBMkM7QUFDM0MseURBQXVDO0FBQ3ZDLHVEQUFxQztBQUNyQyxvREFBa0M7QUFDbEMsdURBQXFDO0FBQ3JDLDJEQUF5QztBQUN6QywyREFBeUM7QUFDekMsaUVBQStDO0FBQy9DLDhEQUE0QztBQUM1QyxvRUFBa0Q7QUFDbEQsK0RBQTZDO0FBQzdDLDhEQUE0QztBQUM1Qyw4REFBNEM7QUFDNUMsMERBQXdDO0FBQ3hDLHNEQUFvQztBQUNwQyxxRUFBbUQ7QUFDbkQsb0RBQWtDO0FBQ2xDLGlEQUErQjtBQUMvQixvREFBa0M7QUFDbEMsd0RBQXNDO0FBQ3RDLDhEQUE0QztBQUM1QywyREFBeUM7QUFDekMsaUVBQStDO0FBQy9DLDREQUEwQztBQUMxQywyREFBeUM7QUFDekMsMkRBQXlDO0FBRXpDLGdCQUFnQjtBQUNoQixxREFBbUM7QUFFbkMsc0JBQXNCO0FBQ3RCLHlDQUF5QztBQU9yQyw4QkFBUztBQU5iLHVEQUF1RDtBQU9uRCw0Q0FBZ0I7QUFOcEIsdURBQXVEO0FBT25ELDRDQUFnQjtBQU5wQix5Q0FBeUM7QUFPckMsOEJBQVM7QUFOYix5Q0FBeUM7QUFPckMsOEJBQVM7QUFHYixnQ0FBZ0M7QUFDaEMsbUNBQWdDO0FBQ2hDLG1EQUFnRDtBQUNoRCwyQ0FBd0M7QUFDeEMsdUNBQW9DO0FBQ3BDLDJDQUF3QztBQUN4QyxtRUFBZ0U7QUFDaEUsMkRBQXdEO0FBQ3hELHVEQUFvRDtBQUNwRCxpREFBOEM7QUFDOUMsdURBQW9EO0FBQ3BELCtEQUE0RDtBQUM1RCwyRUFBd0U7QUFDeEUscUVBQWtFO0FBQ2xFLGlGQUE4RTtBQUM5RSx1RUFBb0U7QUFDcEUscUVBQWtFO0FBQ2xFLHFFQUFrRTtBQUVsRSxNQUFNLE9BQU8sR0FBRztJQUNaLE9BQU8sRUFBRSxTQUFTLENBQUMsVUFBVSxFQUFFO0lBQy9CLFNBQVMsRUFBRSxDQUFDLElBQVksRUFBRSxJQUFZLEVBQUUsR0FBVyxFQUFtQixFQUFFO1FBQ3BFLFFBQVEsSUFBSSxFQUFFO1lBQ1YsS0FBSyx3QkFBd0I7Z0JBQ3pCLE9BQU8sSUFBSSxhQUFLLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDbkQsS0FBSyxnQ0FBZ0M7Z0JBQ2pDLE9BQU8sSUFBSSw2QkFBYSxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQzNELEtBQUssNEJBQTRCO2dCQUM3QixPQUFPLElBQUkscUJBQVMsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN2RCxLQUFLLDBCQUEwQjtnQkFDM0IsT0FBTyxJQUFJLGlCQUFPLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDckQsS0FBSyw0QkFBNEI7Z0JBQzdCLE9BQU8sSUFBSSxxQkFBUyxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3ZELEtBQUssd0NBQXdDO2dCQUN6QyxPQUFPLElBQUksNkNBQXFCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDbkUsS0FBSyxvQ0FBb0M7Z0JBQ3JDLE9BQU8sSUFBSSxxQ0FBaUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUMvRCxLQUFLLGtDQUFrQztnQkFDbkMsT0FBTyxJQUFJLGlDQUFlLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDN0QsS0FBSywrQkFBK0I7Z0JBQ2hDLE9BQU8sSUFBSSwyQkFBWSxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQzFELEtBQUssa0NBQWtDO2dCQUNuQyxPQUFPLElBQUksaUNBQWUsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUM3RCxLQUFLLHNDQUFzQztnQkFDdkMsT0FBTyxJQUFJLHlDQUFtQixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ2pFLEtBQUssNENBQTRDO2dCQUM3QyxPQUFPLElBQUkscURBQXlCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDdkUsS0FBSyx5Q0FBeUM7Z0JBQzFDLE9BQU8sSUFBSSwrQ0FBc0IsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNwRSxLQUFLLCtDQUErQztnQkFDaEQsT0FBTyxJQUFJLDJEQUE0QixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQzFFLEtBQUssMENBQTBDO2dCQUMzQyxPQUFPLElBQUksaURBQXVCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDckUsS0FBSyx5Q0FBeUM7Z0JBQzFDLE9BQU8sSUFBSSwrQ0FBc0IsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNwRSxLQUFLLHlDQUF5QztnQkFDMUMsT0FBTyxJQUFJLCtDQUFzQixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3BFO2dCQUNJLE1BQU0sSUFBSSxLQUFLLENBQUMseUJBQXlCLElBQUksRUFBRSxDQUFDLENBQUM7U0FDeEQ7SUFDTCxDQUFDO0NBQ0osQ0FBQztBQUNGLE1BQU0sQ0FBQyxPQUFPLENBQUMsc0JBQXNCLENBQUMsY0FBYyxFQUFFLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQSJ9