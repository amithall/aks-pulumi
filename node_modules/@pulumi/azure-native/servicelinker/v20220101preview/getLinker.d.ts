import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Linker of source and target resource
 */
export declare function getLinker(args: GetLinkerArgs, opts?: pulumi.InvokeOptions): Promise<GetLinkerResult>;
export interface GetLinkerArgs {
    /**
     * The name Linker resource.
     */
    linkerName: string;
    /**
     * The fully qualified Azure Resource manager identifier of the resource to be connected.
     */
    resourceUri: string;
}
/**
 * Linker of source and target resource
 */
export interface GetLinkerResult {
    /**
     * The authentication type.
     */
    readonly authInfo?: outputs.servicelinker.v20220101preview.SecretAuthInfoResponse | outputs.servicelinker.v20220101preview.ServicePrincipalCertificateAuthInfoResponse | outputs.servicelinker.v20220101preview.ServicePrincipalSecretAuthInfoResponse | outputs.servicelinker.v20220101preview.SystemAssignedIdentityAuthInfoResponse | outputs.servicelinker.v20220101preview.UserAssignedIdentityAuthInfoResponse;
    /**
     * The application client type
     */
    readonly clientType?: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The provisioning state.
     */
    readonly provisioningState: string;
    /**
     * connection scope in source service.
     */
    readonly scope?: string;
    /**
     * An option to store secret value in secure place
     */
    readonly secretStore?: outputs.servicelinker.v20220101preview.SecretStoreResponse;
    /**
     * The system data.
     */
    readonly systemData: outputs.servicelinker.v20220101preview.SystemDataResponse;
    /**
     * The target service properties
     */
    readonly targetService?: outputs.servicelinker.v20220101preview.AzureResourceResponse | outputs.servicelinker.v20220101preview.ConfluentBootstrapServerResponse | outputs.servicelinker.v20220101preview.ConfluentSchemaRegistryResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * The VNet solution.
     */
    readonly vNetSolution?: outputs.servicelinker.v20220101preview.VNetSolutionResponse;
}
export declare function getLinkerOutput(args: GetLinkerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLinkerResult>;
export interface GetLinkerOutputArgs {
    /**
     * The name Linker resource.
     */
    linkerName: pulumi.Input<string>;
    /**
     * The fully qualified Azure Resource manager identifier of the resource to be connected.
     */
    resourceUri: pulumi.Input<string>;
}
