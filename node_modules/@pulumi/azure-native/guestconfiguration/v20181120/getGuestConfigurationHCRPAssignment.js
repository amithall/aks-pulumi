"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGuestConfigurationHCRPAssignmentOutput = exports.getGuestConfigurationHCRPAssignment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Guest configuration assignment is an association between a machine and guest configuration.
 */
/** @deprecated Version v20181120 will be removed in the next major version of the provider. Upgrade to version v20200625 or later. */
function getGuestConfigurationHCRPAssignment(args, opts) {
    pulumi.log.warn("getGuestConfigurationHCRPAssignment is deprecated: Version v20181120 will be removed in the next major version of the provider. Upgrade to version v20200625 or later.");
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:guestconfiguration/v20181120:getGuestConfigurationHCRPAssignment", {
        "guestConfigurationAssignmentName": args.guestConfigurationAssignmentName,
        "machineName": args.machineName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getGuestConfigurationHCRPAssignment = getGuestConfigurationHCRPAssignment;
function getGuestConfigurationHCRPAssignmentOutput(args, opts) {
    return pulumi.output(args).apply(a => getGuestConfigurationHCRPAssignment(a, opts));
}
exports.getGuestConfigurationHCRPAssignmentOutput = getGuestConfigurationHCRPAssignmentOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0R3Vlc3RDb25maWd1cmF0aW9uSENSUEFzc2lnbm1lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9ndWVzdGNvbmZpZ3VyYXRpb24vdjIwMTgxMTIwL2dldEd1ZXN0Q29uZmlndXJhdGlvbkhDUlBBc3NpZ25tZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSx3RUFBd0U7QUFDeEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBRXpDLDZDQUE2QztBQUU3Qzs7R0FFRztBQUNILHNJQUFzSTtBQUN0SSxTQUFnQixtQ0FBbUMsQ0FBQyxJQUE2QyxFQUFFLElBQTJCO0lBQzFILE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLHdLQUF3SyxDQUFDLENBQUE7SUFDekwsSUFBSSxDQUFDLElBQUksRUFBRTtRQUNQLElBQUksR0FBRyxFQUFFLENBQUE7S0FDWjtJQUVELElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ25FLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsK0VBQStFLEVBQUU7UUFDMUcsa0NBQWtDLEVBQUUsSUFBSSxDQUFDLGdDQUFnQztRQUN6RSxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0IsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtLQUM5QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVpELGtGQVlDO0FBMkNELFNBQWdCLHlDQUF5QyxDQUFDLElBQW1ELEVBQUUsSUFBMkI7SUFDdEksT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLG1DQUFtQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO0FBQ3ZGLENBQUM7QUFGRCw4RkFFQyJ9