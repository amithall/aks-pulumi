"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20210901 = exports.v20210801 = exports.v20210601 = exports.v20210401 = exports.v20210201 = exports.v20210101 = exports.v20200801preview = exports.v20190601 = exports.v20190401 = exports.v20181101 = exports.v20180701 = exports.v20180301preview = exports.v20180201 = exports.v20171001 = exports.v20170601 = exports.v20161201 = exports.v20160501 = exports.v20160101 = exports.v20150615 = exports.v20150501preview = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./blob"), exports);
__exportStar(require("./blobContainer"), exports);
__exportStar(require("./blobContainerImmutabilityPolicy"), exports);
__exportStar(require("./blobInventoryPolicy"), exports);
__exportStar(require("./blobServiceProperties"), exports);
__exportStar(require("./encryptionScope"), exports);
__exportStar(require("./fileServiceProperties"), exports);
__exportStar(require("./fileShare"), exports);
__exportStar(require("./getBlobContainer"), exports);
__exportStar(require("./getBlobContainerImmutabilityPolicy"), exports);
__exportStar(require("./getBlobInventoryPolicy"), exports);
__exportStar(require("./getBlobServiceProperties"), exports);
__exportStar(require("./getEncryptionScope"), exports);
__exportStar(require("./getFileServiceProperties"), exports);
__exportStar(require("./getFileShare"), exports);
__exportStar(require("./getLocalUser"), exports);
__exportStar(require("./getManagementPolicy"), exports);
__exportStar(require("./getObjectReplicationPolicy"), exports);
__exportStar(require("./getPrivateEndpointConnection"), exports);
__exportStar(require("./getQueue"), exports);
__exportStar(require("./getQueueServiceProperties"), exports);
__exportStar(require("./getStorageAccount"), exports);
__exportStar(require("./getTable"), exports);
__exportStar(require("./getTableServiceProperties"), exports);
__exportStar(require("./listLocalUserKeys"), exports);
__exportStar(require("./listStorageAccountKeys"), exports);
__exportStar(require("./listStorageAccountSAS"), exports);
__exportStar(require("./listStorageAccountServiceSAS"), exports);
__exportStar(require("./localUser"), exports);
__exportStar(require("./managementPolicy"), exports);
__exportStar(require("./objectReplicationPolicy"), exports);
__exportStar(require("./privateEndpointConnection"), exports);
__exportStar(require("./queue"), exports);
__exportStar(require("./queueServiceProperties"), exports);
__exportStar(require("./storageAccount"), exports);
__exportStar(require("./storageAccountStaticWebsite"), exports);
__exportStar(require("./table"), exports);
__exportStar(require("./tableServiceProperties"), exports);
// Export enums:
__exportStar(require("../types/enums/storage"), exports);
// Export sub-modules:
const v20150501preview = require("./v20150501preview");
exports.v20150501preview = v20150501preview;
const v20150615 = require("./v20150615");
exports.v20150615 = v20150615;
const v20160101 = require("./v20160101");
exports.v20160101 = v20160101;
const v20160501 = require("./v20160501");
exports.v20160501 = v20160501;
const v20161201 = require("./v20161201");
exports.v20161201 = v20161201;
const v20170601 = require("./v20170601");
exports.v20170601 = v20170601;
const v20171001 = require("./v20171001");
exports.v20171001 = v20171001;
const v20180201 = require("./v20180201");
exports.v20180201 = v20180201;
const v20180301preview = require("./v20180301preview");
exports.v20180301preview = v20180301preview;
const v20180701 = require("./v20180701");
exports.v20180701 = v20180701;
const v20181101 = require("./v20181101");
exports.v20181101 = v20181101;
const v20190401 = require("./v20190401");
exports.v20190401 = v20190401;
const v20190601 = require("./v20190601");
exports.v20190601 = v20190601;
const v20200801preview = require("./v20200801preview");
exports.v20200801preview = v20200801preview;
const v20210101 = require("./v20210101");
exports.v20210101 = v20210101;
const v20210201 = require("./v20210201");
exports.v20210201 = v20210201;
const v20210401 = require("./v20210401");
exports.v20210401 = v20210401;
const v20210601 = require("./v20210601");
exports.v20210601 = v20210601;
const v20210801 = require("./v20210801");
exports.v20210801 = v20210801;
const v20210901 = require("./v20210901");
exports.v20210901 = v20210901;
// Import resources to register:
const blob_1 = require("./blob");
const blobContainer_1 = require("./blobContainer");
const blobContainerImmutabilityPolicy_1 = require("./blobContainerImmutabilityPolicy");
const blobInventoryPolicy_1 = require("./blobInventoryPolicy");
const blobServiceProperties_1 = require("./blobServiceProperties");
const encryptionScope_1 = require("./encryptionScope");
const fileServiceProperties_1 = require("./fileServiceProperties");
const fileShare_1 = require("./fileShare");
const localUser_1 = require("./localUser");
const managementPolicy_1 = require("./managementPolicy");
const objectReplicationPolicy_1 = require("./objectReplicationPolicy");
const privateEndpointConnection_1 = require("./privateEndpointConnection");
const queue_1 = require("./queue");
const queueServiceProperties_1 = require("./queueServiceProperties");
const storageAccount_1 = require("./storageAccount");
const storageAccountStaticWebsite_1 = require("./storageAccountStaticWebsite");
const table_1 = require("./table");
const tableServiceProperties_1 = require("./tableServiceProperties");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:storage:Blob":
                return new blob_1.Blob(name, undefined, { urn });
            case "azure-native:storage:BlobContainer":
                return new blobContainer_1.BlobContainer(name, undefined, { urn });
            case "azure-native:storage:BlobContainerImmutabilityPolicy":
                return new blobContainerImmutabilityPolicy_1.BlobContainerImmutabilityPolicy(name, undefined, { urn });
            case "azure-native:storage:BlobInventoryPolicy":
                return new blobInventoryPolicy_1.BlobInventoryPolicy(name, undefined, { urn });
            case "azure-native:storage:BlobServiceProperties":
                return new blobServiceProperties_1.BlobServiceProperties(name, undefined, { urn });
            case "azure-native:storage:EncryptionScope":
                return new encryptionScope_1.EncryptionScope(name, undefined, { urn });
            case "azure-native:storage:FileServiceProperties":
                return new fileServiceProperties_1.FileServiceProperties(name, undefined, { urn });
            case "azure-native:storage:FileShare":
                return new fileShare_1.FileShare(name, undefined, { urn });
            case "azure-native:storage:LocalUser":
                return new localUser_1.LocalUser(name, undefined, { urn });
            case "azure-native:storage:ManagementPolicy":
                return new managementPolicy_1.ManagementPolicy(name, undefined, { urn });
            case "azure-native:storage:ObjectReplicationPolicy":
                return new objectReplicationPolicy_1.ObjectReplicationPolicy(name, undefined, { urn });
            case "azure-native:storage:PrivateEndpointConnection":
                return new privateEndpointConnection_1.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:storage:Queue":
                return new queue_1.Queue(name, undefined, { urn });
            case "azure-native:storage:QueueServiceProperties":
                return new queueServiceProperties_1.QueueServiceProperties(name, undefined, { urn });
            case "azure-native:storage:StorageAccount":
                return new storageAccount_1.StorageAccount(name, undefined, { urn });
            case "azure-native:storage:StorageAccountStaticWebsite":
                return new storageAccountStaticWebsite_1.StorageAccountStaticWebsite(name, undefined, { urn });
            case "azure-native:storage:Table":
                return new table_1.Table(name, undefined, { urn });
            case "azure-native:storage:TableServiceProperties":
                return new tableServiceProperties_1.TableServiceProperties(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "storage", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zdG9yYWdlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSx3RUFBd0U7QUFDeEUsaUZBQWlGOzs7Ozs7Ozs7Ozs7Ozs7OztBQUVqRix5Q0FBeUM7QUFDekMsMENBQTBDO0FBRTFDLGtCQUFrQjtBQUNsQix5Q0FBdUI7QUFDdkIsa0RBQWdDO0FBQ2hDLG9FQUFrRDtBQUNsRCx3REFBc0M7QUFDdEMsMERBQXdDO0FBQ3hDLG9EQUFrQztBQUNsQywwREFBd0M7QUFDeEMsOENBQTRCO0FBQzVCLHFEQUFtQztBQUNuQyx1RUFBcUQ7QUFDckQsMkRBQXlDO0FBQ3pDLDZEQUEyQztBQUMzQyx1REFBcUM7QUFDckMsNkRBQTJDO0FBQzNDLGlEQUErQjtBQUMvQixpREFBK0I7QUFDL0Isd0RBQXNDO0FBQ3RDLCtEQUE2QztBQUM3QyxpRUFBK0M7QUFDL0MsNkNBQTJCO0FBQzNCLDhEQUE0QztBQUM1QyxzREFBb0M7QUFDcEMsNkNBQTJCO0FBQzNCLDhEQUE0QztBQUM1QyxzREFBb0M7QUFDcEMsMkRBQXlDO0FBQ3pDLDBEQUF3QztBQUN4QyxpRUFBK0M7QUFDL0MsOENBQTRCO0FBQzVCLHFEQUFtQztBQUNuQyw0REFBMEM7QUFDMUMsOERBQTRDO0FBQzVDLDBDQUF3QjtBQUN4QiwyREFBeUM7QUFDekMsbURBQWlDO0FBQ2pDLGdFQUE4QztBQUM5QywwQ0FBd0I7QUFDeEIsMkRBQXlDO0FBRXpDLGdCQUFnQjtBQUNoQix5REFBdUM7QUFFdkMsc0JBQXNCO0FBQ3RCLHVEQUF1RDtBQXNCbkQsNENBQWdCO0FBckJwQix5Q0FBeUM7QUFzQnJDLDhCQUFTO0FBckJiLHlDQUF5QztBQXNCckMsOEJBQVM7QUFyQmIseUNBQXlDO0FBc0JyQyw4QkFBUztBQXJCYix5Q0FBeUM7QUFzQnJDLDhCQUFTO0FBckJiLHlDQUF5QztBQXNCckMsOEJBQVM7QUFyQmIseUNBQXlDO0FBc0JyQyw4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