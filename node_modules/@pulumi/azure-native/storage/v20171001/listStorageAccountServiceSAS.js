"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listStorageAccountServiceSASOutput = exports.listStorageAccountServiceSAS = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * The List service SAS credentials operation response.
 */
function listStorageAccountServiceSAS(args, opts) {
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:storage/v20171001:listStorageAccountServiceSAS", {
        "accountName": args.accountName,
        "cacheControl": args.cacheControl,
        "canonicalizedResource": args.canonicalizedResource,
        "contentDisposition": args.contentDisposition,
        "contentEncoding": args.contentEncoding,
        "contentLanguage": args.contentLanguage,
        "contentType": args.contentType,
        "iPAddressOrRange": args.iPAddressOrRange,
        "identifier": args.identifier,
        "keyToSign": args.keyToSign,
        "partitionKeyEnd": args.partitionKeyEnd,
        "partitionKeyStart": args.partitionKeyStart,
        "permissions": args.permissions,
        "protocols": args.protocols,
        "resource": args.resource,
        "resourceGroupName": args.resourceGroupName,
        "rowKeyEnd": args.rowKeyEnd,
        "rowKeyStart": args.rowKeyStart,
        "sharedAccessExpiryTime": args.sharedAccessExpiryTime,
        "sharedAccessStartTime": args.sharedAccessStartTime,
    }, opts);
}
exports.listStorageAccountServiceSAS = listStorageAccountServiceSAS;
function listStorageAccountServiceSASOutput(args, opts) {
    return pulumi.output(args).apply(a => listStorageAccountServiceSAS(a, opts));
}
exports.listStorageAccountServiceSASOutput = listStorageAccountServiceSASOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdFN0b3JhZ2VBY2NvdW50U2VydmljZVNBUy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3N0b3JhZ2UvdjIwMTcxMDAxL2xpc3RTdG9yYWdlQWNjb3VudFNlcnZpY2VTQVMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHdFQUF3RTtBQUN4RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFFekMsNkNBQTZDO0FBRTdDOztHQUVHO0FBQ0gsU0FBZ0IsNEJBQTRCLENBQUMsSUFBc0MsRUFBRSxJQUEyQjtJQUM1RyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1AsSUFBSSxHQUFHLEVBQUUsQ0FBQTtLQUNaO0lBRUQsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyw2REFBNkQsRUFBRTtRQUN4RixhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0IsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZO1FBQ2pDLHVCQUF1QixFQUFFLElBQUksQ0FBQyxxQkFBcUI7UUFDbkQsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLGtCQUFrQjtRQUM3QyxpQkFBaUIsRUFBRSxJQUFJLENBQUMsZUFBZTtRQUN2QyxpQkFBaUIsRUFBRSxJQUFJLENBQUMsZUFBZTtRQUN2QyxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0Isa0JBQWtCLEVBQUUsSUFBSSxDQUFDLGdCQUFnQjtRQUN6QyxZQUFZLEVBQUUsSUFBSSxDQUFDLFVBQVU7UUFDN0IsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTO1FBQzNCLGlCQUFpQixFQUFFLElBQUksQ0FBQyxlQUFlO1FBQ3ZDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXO1FBQy9CLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUztRQUMzQixVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVE7UUFDekIsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVM7UUFDM0IsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXO1FBQy9CLHdCQUF3QixFQUFFLElBQUksQ0FBQyxzQkFBc0I7UUFDckQsdUJBQXVCLEVBQUUsSUFBSSxDQUFDLHFCQUFxQjtLQUN0RCxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQTVCRCxvRUE0QkM7QUErRkQsU0FBZ0Isa0NBQWtDLENBQUMsSUFBNEMsRUFBRSxJQUEyQjtJQUN4SCxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsNEJBQTRCLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUE7QUFDaEYsQ0FBQztBQUZELGdGQUVDIn0=