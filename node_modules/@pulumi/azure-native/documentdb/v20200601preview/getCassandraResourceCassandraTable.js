"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCassandraResourceCassandraTableOutput = exports.getCassandraResourceCassandraTable = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * An Azure Cosmos DB Cassandra table.
 */
/** @deprecated Version v20200601preview will be removed in the next major version of the provider. Upgrade to version v20210301preview or later. */
function getCassandraResourceCassandraTable(args, opts) {
    pulumi.log.warn("getCassandraResourceCassandraTable is deprecated: Version v20200601preview will be removed in the next major version of the provider. Upgrade to version v20210301preview or later.");
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:documentdb/v20200601preview:getCassandraResourceCassandraTable", {
        "accountName": args.accountName,
        "keyspaceName": args.keyspaceName,
        "resourceGroupName": args.resourceGroupName,
        "tableName": args.tableName,
    }, opts);
}
exports.getCassandraResourceCassandraTable = getCassandraResourceCassandraTable;
function getCassandraResourceCassandraTableOutput(args, opts) {
    return pulumi.output(args).apply(a => getCassandraResourceCassandraTable(a, opts));
}
exports.getCassandraResourceCassandraTableOutput = getCassandraResourceCassandraTableOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q2Fzc2FuZHJhUmVzb3VyY2VDYXNzYW5kcmFUYWJsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2RvY3VtZW50ZGIvdjIwMjAwNjAxcHJldmlldy9nZXRDYXNzYW5kcmFSZXNvdXJjZUNhc3NhbmRyYVRhYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSx3RUFBd0U7QUFDeEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBRXpDLDZDQUE2QztBQUU3Qzs7R0FFRztBQUNILG9KQUFvSjtBQUNwSixTQUFnQixrQ0FBa0MsQ0FBQyxJQUE0QyxFQUFFLElBQTJCO0lBQ3hILE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLHFMQUFxTCxDQUFDLENBQUE7SUFDdE0sSUFBSSxDQUFDLElBQUksRUFBRTtRQUNQLElBQUksR0FBRyxFQUFFLENBQUE7S0FDWjtJQUVELElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ25FLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsNkVBQTZFLEVBQUU7UUFDeEcsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXO1FBQy9CLGNBQWMsRUFBRSxJQUFJLENBQUMsWUFBWTtRQUNqQyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1FBQzNDLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUztLQUM5QixFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQWJELGdGQWFDO0FBcURELFNBQWdCLHdDQUF3QyxDQUFDLElBQWtELEVBQUUsSUFBMkI7SUFDcEksT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLGtDQUFrQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO0FBQ3RGLENBQUM7QUFGRCw0RkFFQyJ9