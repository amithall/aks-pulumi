"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getManagementLockAtResourceGroupLevelOutput = exports.getManagementLockAtResourceGroupLevel = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Management lock information.
 */
/** @deprecated Version v20150101 will be removed in the next major version of the provider. Upgrade to version v20170401 or later. */
function getManagementLockAtResourceGroupLevel(args, opts) {
    pulumi.log.warn("getManagementLockAtResourceGroupLevel is deprecated: Version v20150101 will be removed in the next major version of the provider. Upgrade to version v20170401 or later.");
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure-native:authorization/v20150101:getManagementLockAtResourceGroupLevel", {
        "lockName": args.lockName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getManagementLockAtResourceGroupLevel = getManagementLockAtResourceGroupLevel;
function getManagementLockAtResourceGroupLevelOutput(args, opts) {
    return pulumi.output(args).apply(a => getManagementLockAtResourceGroupLevel(a, opts));
}
exports.getManagementLockAtResourceGroupLevelOutput = getManagementLockAtResourceGroupLevelOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0TWFuYWdlbWVudExvY2tBdFJlc291cmNlR3JvdXBMZXZlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2F1dGhvcml6YXRpb24vdjIwMTUwMTAxL2dldE1hbmFnZW1lbnRMb2NrQXRSZXNvdXJjZUdyb3VwTGV2ZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHdFQUF3RTtBQUN4RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBRTdDOztHQUVHO0FBQ0gsc0lBQXNJO0FBQ3RJLFNBQWdCLHFDQUFxQyxDQUFDLElBQStDLEVBQUUsSUFBMkI7SUFDOUgsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsMEtBQTBLLENBQUMsQ0FBQTtJQUMzTCxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1AsSUFBSSxHQUFHLEVBQUUsQ0FBQTtLQUNaO0lBRUQsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyw0RUFBNEUsRUFBRTtRQUN2RyxVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVE7UUFDekIsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtLQUM5QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVhELHNGQVdDO0FBdUNELFNBQWdCLDJDQUEyQyxDQUFDLElBQXFELEVBQUUsSUFBMkI7SUFDMUksT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLHFDQUFxQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO0FBQ3pGLENBQUM7QUFGRCxrR0FFQyJ9