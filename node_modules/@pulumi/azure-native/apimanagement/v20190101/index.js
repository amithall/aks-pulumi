"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./api"), exports);
__exportStar(require("./apiDiagnostic"), exports);
__exportStar(require("./apiIssue"), exports);
__exportStar(require("./apiIssueAttachment"), exports);
__exportStar(require("./apiIssueComment"), exports);
__exportStar(require("./apiManagementService"), exports);
__exportStar(require("./apiOperation"), exports);
__exportStar(require("./apiOperationPolicy"), exports);
__exportStar(require("./apiPolicy"), exports);
__exportStar(require("./apiRelease"), exports);
__exportStar(require("./apiSchema"), exports);
__exportStar(require("./apiTagDescription"), exports);
__exportStar(require("./apiVersionSet"), exports);
__exportStar(require("./authorizationServer"), exports);
__exportStar(require("./backend"), exports);
__exportStar(require("./cache"), exports);
__exportStar(require("./certificate"), exports);
__exportStar(require("./diagnostic"), exports);
__exportStar(require("./emailTemplate"), exports);
__exportStar(require("./getApi"), exports);
__exportStar(require("./getApiDiagnostic"), exports);
__exportStar(require("./getApiIssue"), exports);
__exportStar(require("./getApiIssueAttachment"), exports);
__exportStar(require("./getApiIssueComment"), exports);
__exportStar(require("./getApiManagementService"), exports);
__exportStar(require("./getApiManagementServiceSsoToken"), exports);
__exportStar(require("./getApiOperation"), exports);
__exportStar(require("./getApiOperationPolicy"), exports);
__exportStar(require("./getApiPolicy"), exports);
__exportStar(require("./getApiRelease"), exports);
__exportStar(require("./getApiSchema"), exports);
__exportStar(require("./getApiTagDescription"), exports);
__exportStar(require("./getApiVersionSet"), exports);
__exportStar(require("./getAuthorizationServer"), exports);
__exportStar(require("./getBackend"), exports);
__exportStar(require("./getCache"), exports);
__exportStar(require("./getCertificate"), exports);
__exportStar(require("./getDiagnostic"), exports);
__exportStar(require("./getEmailTemplate"), exports);
__exportStar(require("./getGroup"), exports);
__exportStar(require("./getIdentityProvider"), exports);
__exportStar(require("./getLogger"), exports);
__exportStar(require("./getOpenIdConnectProvider"), exports);
__exportStar(require("./getPolicy"), exports);
__exportStar(require("./getProduct"), exports);
__exportStar(require("./getProductPolicy"), exports);
__exportStar(require("./getProperty"), exports);
__exportStar(require("./getSubscription"), exports);
__exportStar(require("./getTag"), exports);
__exportStar(require("./getTagByApi"), exports);
__exportStar(require("./getTagByOperation"), exports);
__exportStar(require("./getTagByProduct"), exports);
__exportStar(require("./getUser"), exports);
__exportStar(require("./getUserSharedAccessToken"), exports);
__exportStar(require("./group"), exports);
__exportStar(require("./groupUser"), exports);
__exportStar(require("./identityProvider"), exports);
__exportStar(require("./logger"), exports);
__exportStar(require("./notificationRecipientEmail"), exports);
__exportStar(require("./notificationRecipientUser"), exports);
__exportStar(require("./openIdConnectProvider"), exports);
__exportStar(require("./policy"), exports);
__exportStar(require("./product"), exports);
__exportStar(require("./productApi"), exports);
__exportStar(require("./productGroup"), exports);
__exportStar(require("./productPolicy"), exports);
__exportStar(require("./property"), exports);
__exportStar(require("./subscription"), exports);
__exportStar(require("./tag"), exports);
__exportStar(require("./tagByApi"), exports);
__exportStar(require("./tagByOperation"), exports);
__exportStar(require("./tagByProduct"), exports);
__exportStar(require("./user"), exports);
// Export enums:
__exportStar(require("../../types/enums/apimanagement/v20190101"), exports);
// Import resources to register:
const api_1 = require("./api");
const apiDiagnostic_1 = require("./apiDiagnostic");
const apiIssue_1 = require("./apiIssue");
const apiIssueAttachment_1 = require("./apiIssueAttachment");
const apiIssueComment_1 = require("./apiIssueComment");
const apiManagementService_1 = require("./apiManagementService");
const apiOperation_1 = require("./apiOperation");
const apiOperationPolicy_1 = require("./apiOperationPolicy");
const apiPolicy_1 = require("./apiPolicy");
const apiRelease_1 = require("./apiRelease");
const apiSchema_1 = require("./apiSchema");
const apiTagDescription_1 = require("./apiTagDescription");
const apiVersionSet_1 = require("./apiVersionSet");
const authorizationServer_1 = require("./authorizationServer");
const backend_1 = require("./backend");
const cache_1 = require("./cache");
const certificate_1 = require("./certificate");
const diagnostic_1 = require("./diagnostic");
const emailTemplate_1 = require("./emailTemplate");
const group_1 = require("./group");
const groupUser_1 = require("./groupUser");
const identityProvider_1 = require("./identityProvider");
const logger_1 = require("./logger");
const notificationRecipientEmail_1 = require("./notificationRecipientEmail");
const notificationRecipientUser_1 = require("./notificationRecipientUser");
const openIdConnectProvider_1 = require("./openIdConnectProvider");
const policy_1 = require("./policy");
const product_1 = require("./product");
const productApi_1 = require("./productApi");
const productGroup_1 = require("./productGroup");
const productPolicy_1 = require("./productPolicy");
const property_1 = require("./property");
const subscription_1 = require("./subscription");
const tag_1 = require("./tag");
const tagByApi_1 = require("./tagByApi");
const tagByOperation_1 = require("./tagByOperation");
const tagByProduct_1 = require("./tagByProduct");
const user_1 = require("./user");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:apimanagement/v20190101:Api":
                return new api_1.Api(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ApiDiagnostic":
                return new apiDiagnostic_1.ApiDiagnostic(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ApiIssue":
                return new apiIssue_1.ApiIssue(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ApiIssueAttachment":
                return new apiIssueAttachment_1.ApiIssueAttachment(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ApiIssueComment":
                return new apiIssueComment_1.ApiIssueComment(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ApiManagementService":
                return new apiManagementService_1.ApiManagementService(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ApiOperation":
                return new apiOperation_1.ApiOperation(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ApiOperationPolicy":
                return new apiOperationPolicy_1.ApiOperationPolicy(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ApiPolicy":
                return new apiPolicy_1.ApiPolicy(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ApiRelease":
                return new apiRelease_1.ApiRelease(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ApiSchema":
                return new apiSchema_1.ApiSchema(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ApiTagDescription":
                return new apiTagDescription_1.ApiTagDescription(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ApiVersionSet":
                return new apiVersionSet_1.ApiVersionSet(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:AuthorizationServer":
                return new authorizationServer_1.AuthorizationServer(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:Backend":
                return new backend_1.Backend(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:Cache":
                return new cache_1.Cache(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:Certificate":
                return new certificate_1.Certificate(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:Diagnostic":
                return new diagnostic_1.Diagnostic(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:EmailTemplate":
                return new emailTemplate_1.EmailTemplate(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:Group":
                return new group_1.Group(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:GroupUser":
                return new groupUser_1.GroupUser(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:IdentityProvider":
                return new identityProvider_1.IdentityProvider(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:Logger":
                return new logger_1.Logger(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:NotificationRecipientEmail":
                return new notificationRecipientEmail_1.NotificationRecipientEmail(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:NotificationRecipientUser":
                return new notificationRecipientUser_1.NotificationRecipientUser(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:OpenIdConnectProvider":
                return new openIdConnectProvider_1.OpenIdConnectProvider(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:Policy":
                return new policy_1.Policy(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:Product":
                return new product_1.Product(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ProductApi":
                return new productApi_1.ProductApi(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ProductGroup":
                return new productGroup_1.ProductGroup(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:ProductPolicy":
                return new productPolicy_1.ProductPolicy(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:Property":
                return new property_1.Property(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:Subscription":
                return new subscription_1.Subscription(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:Tag":
                return new tag_1.Tag(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:TagByApi":
                return new tagByApi_1.TagByApi(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:TagByOperation":
                return new tagByOperation_1.TagByOperation(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:TagByProduct":
                return new tagByProduct_1.TagByProduct(name, undefined, { urn });
            case "azure-native:apimanagement/v20190101:User":
                return new user_1.User(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "apimanagement/v20190101", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9hcGltYW5hZ2VtZW50L3YyMDE5MDEwMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0VBQXdFO0FBQ3hFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBRTdDLGtCQUFrQjtBQUNsQix3Q0FBc0I7QUFDdEIsa0RBQWdDO0FBQ2hDLDZDQUEyQjtBQUMzQix1REFBcUM7QUFDckMsb0RBQWtDO0FBQ2xDLHlEQUF1QztBQUN2QyxpREFBK0I7QUFDL0IsdURBQXFDO0FBQ3JDLDhDQUE0QjtBQUM1QiwrQ0FBNkI7QUFDN0IsOENBQTRCO0FBQzVCLHNEQUFvQztBQUNwQyxrREFBZ0M7QUFDaEMsd0RBQXNDO0FBQ3RDLDRDQUEwQjtBQUMxQiwwQ0FBd0I7QUFDeEIsZ0RBQThCO0FBQzlCLCtDQUE2QjtBQUM3QixrREFBZ0M7QUFDaEMsMkNBQXlCO0FBQ3pCLHFEQUFtQztBQUNuQyxnREFBOEI7QUFDOUIsMERBQXdDO0FBQ3hDLHVEQUFxQztBQUNyQyw0REFBMEM7QUFDMUMsb0VBQWtEO0FBQ2xELG9EQUFrQztBQUNsQywwREFBd0M7QUFDeEMsaURBQStCO0FBQy9CLGtEQUFnQztBQUNoQyxpREFBK0I7QUFDL0IseURBQXVDO0FBQ3ZDLHFEQUFtQztBQUNuQywyREFBeUM7QUFDekMsK0NBQTZCO0FBQzdCLDZDQUEyQjtBQUMzQixtREFBaUM7QUFDakMsa0RBQWdDO0FBQ2hDLHFEQUFtQztBQUNuQyw2Q0FBMkI7QUFDM0Isd0RBQXNDO0FBQ3RDLDhDQUE0QjtBQUM1Qiw2REFBMkM7QUFDM0MsOENBQTRCO0FBQzVCLCtDQUE2QjtBQUM3QixxREFBbUM7QUFDbkMsZ0RBQThCO0FBQzlCLG9EQUFrQztBQUNsQywyQ0FBeUI7QUFDekIsZ0RBQThCO0FBQzlCLHNEQUFvQztBQUNwQyxvREFBa0M7QUFDbEMsNENBQTBCO0FBQzFC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