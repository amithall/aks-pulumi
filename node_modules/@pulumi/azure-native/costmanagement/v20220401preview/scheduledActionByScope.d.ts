import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
/**
 * Scheduled action definition.
 */
export declare class ScheduledActionByScope extends pulumi.CustomResource {
    /**
     * Get an existing ScheduledActionByScope resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScheduledActionByScope;
    /**
     * Returns true if the given object is an instance of ScheduledActionByScope.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ScheduledActionByScope;
    /**
     * Scheduled action name.
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * Resource Etag.
     */
    readonly eTag: pulumi.Output<string>;
    /**
     * Destination format of the view data.
     */
    readonly fileDestination: pulumi.Output<outputs.costmanagement.v20220401preview.FileDestinationResponse | undefined>;
    /**
     * Kind of the scheduled action.
     */
    readonly kind: pulumi.Output<string | undefined>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Notification properties based on scheduled action kind.
     */
    readonly notification: pulumi.Output<outputs.costmanagement.v20220401preview.NotificationPropertiesResponse>;
    /**
     * Schedule of the scheduled action.
     */
    readonly schedule: pulumi.Output<outputs.costmanagement.v20220401preview.SchedulePropertiesResponse>;
    /**
     * Cost Management scope like 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription scope.
     */
    readonly scope: pulumi.Output<string | undefined>;
    /**
     * Status of the scheduled action.
     */
    readonly status: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.costmanagement.v20220401preview.SystemDataResponse>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Cost analysis viewId used for scheduled action. For example, '/providers/Microsoft.CostManagement/views/swaggerExample'
     */
    readonly viewId: pulumi.Output<string>;
    /**
     * Create a ScheduledActionByScope resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduledActionByScopeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ScheduledActionByScope resource.
 */
export interface ScheduledActionByScopeArgs {
    /**
     * Scheduled action name.
     */
    displayName: pulumi.Input<string>;
    /**
     * Destination format of the view data.
     */
    fileDestination?: pulumi.Input<inputs.costmanagement.v20220401preview.FileDestinationArgs>;
    /**
     * Kind of the scheduled action.
     */
    kind?: pulumi.Input<string | enums.costmanagement.v20220401preview.ScheduledActionKind>;
    /**
     * Scheduled action name.
     */
    name?: pulumi.Input<string>;
    /**
     * Notification properties based on scheduled action kind.
     */
    notification: pulumi.Input<inputs.costmanagement.v20220401preview.NotificationPropertiesArgs>;
    /**
     * Schedule of the scheduled action.
     */
    schedule: pulumi.Input<inputs.costmanagement.v20220401preview.SchedulePropertiesArgs>;
    /**
     * Cost Management scope like 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription scope.
     */
    scope: pulumi.Input<string>;
    /**
     * Status of the scheduled action.
     */
    status: pulumi.Input<string | enums.costmanagement.v20220401preview.ScheduledActionStatus>;
    /**
     * Cost analysis viewId used for scheduled action. For example, '/providers/Microsoft.CostManagement/views/swaggerExample'
     */
    viewId: pulumi.Input<string>;
}
