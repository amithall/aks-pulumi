"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./configuration"), exports);
__exportStar(require("./database"), exports);
__exportStar(require("./firewallRule"), exports);
__exportStar(require("./getConfiguration"), exports);
__exportStar(require("./getDatabase"), exports);
__exportStar(require("./getFirewallRule"), exports);
__exportStar(require("./getServer"), exports);
__exportStar(require("./getServerAdministrator"), exports);
__exportStar(require("./getServerSecurityAlertPolicy"), exports);
__exportStar(require("./getVirtualNetworkRule"), exports);
__exportStar(require("./server"), exports);
__exportStar(require("./serverAdministrator"), exports);
__exportStar(require("./serverSecurityAlertPolicy"), exports);
__exportStar(require("./virtualNetworkRule"), exports);
// Export enums:
__exportStar(require("../../types/enums/dbforpostgresql/v20171201preview"), exports);
// Import resources to register:
const configuration_1 = require("./configuration");
const database_1 = require("./database");
const firewallRule_1 = require("./firewallRule");
const server_1 = require("./server");
const serverAdministrator_1 = require("./serverAdministrator");
const serverSecurityAlertPolicy_1 = require("./serverSecurityAlertPolicy");
const virtualNetworkRule_1 = require("./virtualNetworkRule");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:dbforpostgresql/v20171201preview:Configuration":
                return new configuration_1.Configuration(name, undefined, { urn });
            case "azure-native:dbforpostgresql/v20171201preview:Database":
                return new database_1.Database(name, undefined, { urn });
            case "azure-native:dbforpostgresql/v20171201preview:FirewallRule":
                return new firewallRule_1.FirewallRule(name, undefined, { urn });
            case "azure-native:dbforpostgresql/v20171201preview:Server":
                return new server_1.Server(name, undefined, { urn });
            case "azure-native:dbforpostgresql/v20171201preview:ServerAdministrator":
                return new serverAdministrator_1.ServerAdministrator(name, undefined, { urn });
            case "azure-native:dbforpostgresql/v20171201preview:ServerSecurityAlertPolicy":
                return new serverSecurityAlertPolicy_1.ServerSecurityAlertPolicy(name, undefined, { urn });
            case "azure-native:dbforpostgresql/v20171201preview:VirtualNetworkRule":
                return new virtualNetworkRule_1.VirtualNetworkRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "dbforpostgresql/v20171201preview", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9kYmZvcnBvc3RncmVzcWwvdjIwMTcxMjAxcHJldmlldy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0VBQXdFO0FBQ3hFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBRTdDLGtCQUFrQjtBQUNsQixrREFBZ0M7QUFDaEMsNkNBQTJCO0FBQzNCLGlEQUErQjtBQUMvQixxREFBbUM7QUFDbkMsZ0RBQThCO0FBQzlCLG9EQUFrQztBQUNsQyw4Q0FBNEI7QUFDNUIsMkRBQXlDO0FBQ3pDLGlFQUErQztBQUMvQywwREFBd0M7QUFDeEMsMkNBQXlCO0FBQ3pCLHdEQUFzQztBQUN0Qyw4REFBNEM7QUFDNUMsdURBQXFDO0FBRXJDLGdCQUFnQjtBQUNoQixxRkFBbUU7QUFFbkUsZ0NBQWdDO0FBQ2hDLG1EQUFnRDtBQUNoRCx5Q0FBc0M7QUFDdEMsaURBQThDO0FBQzlDLHFDQUFrQztBQUNsQywrREFBNEQ7QUFDNUQsMkVBQXdFO0FBQ3hFLDZEQUEwRDtBQUUxRCxNQUFNLE9BQU8sR0FBRztJQUNaLE9BQU8sRUFBRSxTQUFTLENBQUMsVUFBVSxFQUFFO0lBQy9CLFNBQVMsRUFBRSxDQUFDLElBQVksRUFBRSxJQUFZLEVBQUUsR0FBVyxFQUFtQixFQUFFO1FBQ3BFLFFBQVEsSUFBSSxFQUFFO1lBQ1YsS0FBSyw2REFBNkQ7Z0JBQzlELE9BQU8sSUFBSSw2QkFBYSxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQzNELEtBQUssd0RBQXdEO2dCQUN6RCxPQUFPLElBQUksbUJBQVEsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN0RCxLQUFLLDREQUE0RDtnQkFDN0QsT0FBTyxJQUFJLDJCQUFZLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDMUQsS0FBSyxzREFBc0Q7Z0JBQ3ZELE9BQU8sSUFBSSxlQUFNLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDcEQsS0FBSyxtRUFBbUU7Z0JBQ3BFLE9BQU8sSUFBSSx5Q0FBbUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNqRSxLQUFLLHlFQUF5RTtnQkFDMUUsT0FBTyxJQUFJLHFEQUF5QixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3ZFLEtBQUssa0VBQWtFO2dCQUNuRSxPQUFPLElBQUksdUNBQWtCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDaEU7Z0JBQ0ksTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsSUFBSSxFQUFFLENBQUMsQ0FBQztTQUN4RDtJQUNMLENBQUM7Q0FDSixDQUFDO0FBQ0YsTUFBTSxDQUFDLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxjQUFjLEVBQUUsa0NBQWtDLEVBQUUsT0FBTyxDQUFDLENBQUEifQ==