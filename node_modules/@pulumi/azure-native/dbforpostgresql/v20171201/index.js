"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./configuration"), exports);
__exportStar(require("./database"), exports);
__exportStar(require("./firewallRule"), exports);
__exportStar(require("./getConfiguration"), exports);
__exportStar(require("./getDatabase"), exports);
__exportStar(require("./getFirewallRule"), exports);
__exportStar(require("./getServer"), exports);
__exportStar(require("./getServerAdministrator"), exports);
__exportStar(require("./getServerSecurityAlertPolicy"), exports);
__exportStar(require("./getVirtualNetworkRule"), exports);
__exportStar(require("./server"), exports);
__exportStar(require("./serverAdministrator"), exports);
__exportStar(require("./serverSecurityAlertPolicy"), exports);
__exportStar(require("./virtualNetworkRule"), exports);
// Export enums:
__exportStar(require("../../types/enums/dbforpostgresql/v20171201"), exports);
// Import resources to register:
const configuration_1 = require("./configuration");
const database_1 = require("./database");
const firewallRule_1 = require("./firewallRule");
const server_1 = require("./server");
const serverAdministrator_1 = require("./serverAdministrator");
const serverSecurityAlertPolicy_1 = require("./serverSecurityAlertPolicy");
const virtualNetworkRule_1 = require("./virtualNetworkRule");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:dbforpostgresql/v20171201:Configuration":
                return new configuration_1.Configuration(name, undefined, { urn });
            case "azure-native:dbforpostgresql/v20171201:Database":
                return new database_1.Database(name, undefined, { urn });
            case "azure-native:dbforpostgresql/v20171201:FirewallRule":
                return new firewallRule_1.FirewallRule(name, undefined, { urn });
            case "azure-native:dbforpostgresql/v20171201:Server":
                return new server_1.Server(name, undefined, { urn });
            case "azure-native:dbforpostgresql/v20171201:ServerAdministrator":
                return new serverAdministrator_1.ServerAdministrator(name, undefined, { urn });
            case "azure-native:dbforpostgresql/v20171201:ServerSecurityAlertPolicy":
                return new serverSecurityAlertPolicy_1.ServerSecurityAlertPolicy(name, undefined, { urn });
            case "azure-native:dbforpostgresql/v20171201:VirtualNetworkRule":
                return new virtualNetworkRule_1.VirtualNetworkRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "dbforpostgresql/v20171201", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9kYmZvcnBvc3RncmVzcWwvdjIwMTcxMjAxL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSx3RUFBd0U7QUFDeEUsaUZBQWlGOzs7Ozs7Ozs7Ozs7Ozs7O0FBRWpGLHlDQUF5QztBQUN6Qyw2Q0FBNkM7QUFFN0Msa0JBQWtCO0FBQ2xCLGtEQUFnQztBQUNoQyw2Q0FBMkI7QUFDM0IsaURBQStCO0FBQy9CLHFEQUFtQztBQUNuQyxnREFBOEI7QUFDOUIsb0RBQWtDO0FBQ2xDLDhDQUE0QjtBQUM1QiwyREFBeUM7QUFDekMsaUVBQStDO0FBQy9DLDBEQUF3QztBQUN4QywyQ0FBeUI7QUFDekIsd0RBQXNDO0FBQ3RDLDhEQUE0QztBQUM1Qyx1REFBcUM7QUFFckMsZ0JBQWdCO0FBQ2hCLDhFQUE0RDtBQUU1RCxnQ0FBZ0M7QUFDaEMsbURBQWdEO0FBQ2hELHlDQUFzQztBQUN0QyxpREFBOEM7QUFDOUMscUNBQWtDO0FBQ2xDLCtEQUE0RDtBQUM1RCwyRUFBd0U7QUFDeEUsNkRBQTBEO0FBRTFELE1BQU0sT0FBTyxHQUFHO0lBQ1osT0FBTyxFQUFFLFNBQVMsQ0FBQyxVQUFVLEVBQUU7SUFDL0IsU0FBUyxFQUFFLENBQUMsSUFBWSxFQUFFLElBQVksRUFBRSxHQUFXLEVBQW1CLEVBQUU7UUFDcEUsUUFBUSxJQUFJLEVBQUU7WUFDVixLQUFLLHNEQUFzRDtnQkFDdkQsT0FBTyxJQUFJLDZCQUFhLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDM0QsS0FBSyxpREFBaUQ7Z0JBQ2xELE9BQU8sSUFBSSxtQkFBUSxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3RELEtBQUsscURBQXFEO2dCQUN0RCxPQUFPLElBQUksMkJBQVksQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUMxRCxLQUFLLCtDQUErQztnQkFDaEQsT0FBTyxJQUFJLGVBQU0sQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNwRCxLQUFLLDREQUE0RDtnQkFDN0QsT0FBTyxJQUFJLHlDQUFtQixDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ2pFLEtBQUssa0VBQWtFO2dCQUNuRSxPQUFPLElBQUkscURBQXlCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDdkUsS0FBSywyREFBMkQ7Z0JBQzVELE9BQU8sSUFBSSx1Q0FBa0IsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNoRTtnQkFDSSxNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixJQUFJLEVBQUUsQ0FBQyxDQUFDO1NBQ3hEO0lBQ0wsQ0FBQztDQUNKLENBQUM7QUFDRixNQUFNLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLGNBQWMsRUFBRSwyQkFBMkIsRUFBRSxPQUFPLENBQUMsQ0FBQSJ9