import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Group within Azure Active Directory.
 *
 * > **NOTE:** If you're authenticating using a Service Principal then it must have permissions to `Read and write all groups` within the `Windows Azure Active Directory` API. In addition it must also have either the `Groups Administrator` or `User Administrator` Azure Active Directory roles assigned in order to be able to delete groups. You can assign one of the required Azure Active Directory Roles with the **AzureAD PowerShell Module**, which is available for Windows PowerShell or in the Azure Cloud Shell. Please refer to [this documentation](https://docs.microsoft.com/en-us/powershell/module/azuread/add-azureaddirectoryrolemember) for more details.
 *
 * ## Example Usage
 *
 * *Basic example*
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const example = new azuread.Group("example", {
 *     displayName: "A-AD-Group",
 * });
 * ```
 *
 * *A group with members*
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const exampleUser = new azuread.User("exampleUser", {
 *     displayName: "J Doe",
 *     password: "notSecure123",
 *     userPrincipalName: "jdoe@hashicorp.com",
 * });
 * const exampleGroup = new azuread.Group("exampleGroup", {
 *     displayName: "MyGroup",
 *     members: [exampleUser.objectId],
 * });
 * ```
 *
 * ## Import
 *
 * Azure Active Directory Groups can be imported using the `object id`, e.g.
 *
 * ```sh
 *  $ pulumi import azuread:index/group:Group my_group 00000000-0000-0000-0000-000000000000
 * ```
 */
export declare class Group extends pulumi.CustomResource {
    /**
     * Get an existing Group resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupState, opts?: pulumi.CustomResourceOptions): Group;
    /**
     * Returns true if the given object is an instance of Group.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Group;
    /**
     * The description for the Group.  Changing this forces a new resource to be created.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The display name for the Group. Changing this forces a new resource to be created.
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * Whether the group is mail-enabled.
     */
    readonly mailEnabled: pulumi.Output<boolean>;
    /**
     * A set of members who should be present in this Group. Supported Object types are Users, Groups or Service Principals.
     */
    readonly members: pulumi.Output<string[]>;
    /**
     * @deprecated This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider
     */
    readonly name: pulumi.Output<string>;
    /**
     * The Object ID of the Group.
     */
    readonly objectId: pulumi.Output<string>;
    /**
     * A set of owners who own this Group. Supported Object types are Users or Service Principals.
     */
    readonly owners: pulumi.Output<string[]>;
    /**
     * If `true`, will return an error when an existing Group is found with the same name. Defaults to `false`.
     */
    readonly preventDuplicateNames: pulumi.Output<boolean | undefined>;
    /**
     * Whether the group is a security group.
     */
    readonly securityEnabled: pulumi.Output<boolean>;
    /**
     * Create a Group resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Group resources.
 */
export interface GroupState {
    /**
     * The description for the Group.  Changing this forces a new resource to be created.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name for the Group. Changing this forces a new resource to be created.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Whether the group is mail-enabled.
     */
    mailEnabled?: pulumi.Input<boolean>;
    /**
     * A set of members who should be present in this Group. Supported Object types are Users, Groups or Service Principals.
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider
     */
    name?: pulumi.Input<string>;
    /**
     * The Object ID of the Group.
     */
    objectId?: pulumi.Input<string>;
    /**
     * A set of owners who own this Group. Supported Object types are Users or Service Principals.
     */
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If `true`, will return an error when an existing Group is found with the same name. Defaults to `false`.
     */
    preventDuplicateNames?: pulumi.Input<boolean>;
    /**
     * Whether the group is a security group.
     */
    securityEnabled?: pulumi.Input<boolean>;
}
/**
 * The set of arguments for constructing a Group resource.
 */
export interface GroupArgs {
    /**
     * The description for the Group.  Changing this forces a new resource to be created.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name for the Group. Changing this forces a new resource to be created.
     */
    displayName?: pulumi.Input<string>;
    /**
     * A set of members who should be present in this Group. Supported Object types are Users, Groups or Service Principals.
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider
     */
    name?: pulumi.Input<string>;
    /**
     * A set of owners who own this Group. Supported Object types are Users or Service Principals.
     */
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If `true`, will return an error when an existing Group is found with the same name. Defaults to `false`.
     */
    preventDuplicateNames?: pulumi.Input<boolean>;
}
