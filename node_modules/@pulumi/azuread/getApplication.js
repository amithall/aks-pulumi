"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Use this data source to access information about an existing Application within Azure Active Directory.
 *
 * > **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all (or owned by) applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const example = azuread.getApplication({
 *     displayName: "My First AzureAD Application",
 * });
 * export const azureAdObjectId = example.then(example => example.id);
 * ```
 */
function getApplication(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azuread:index/getApplication:getApplication", {
        "applicationId": args.applicationId,
        "displayName": args.displayName,
        "name": args.name,
        "oauth2Permissions": args.oauth2Permissions,
        "objectId": args.objectId,
        "optionalClaims": args.optionalClaims,
        "web": args.web,
    }, opts);
}
exports.getApplication = getApplication;
//# sourceMappingURL=getApplication.js.map