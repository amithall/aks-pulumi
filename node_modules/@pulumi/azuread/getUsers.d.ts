import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "./types";
/**
 * Gets Object IDs or UPNs for multiple Azure Active Directory users.
 *
 * > **NOTE:** If you're authenticating using a Service Principal then it must have permissions to `Read directory data` within the `Windows Azure Active Directory` API.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const users = pulumi.output(azuread.getUsers({
 *     userPrincipalNames: [
 *         "kat@hashicorp.com",
 *         "byte@hashicorp.com",
 *     ],
 * }));
 * ```
 */
export declare function getUsers(args?: GetUsersArgs, opts?: pulumi.InvokeOptions): Promise<GetUsersResult>;
/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersArgs {
    /**
     * Ignore missing users and return users that were found. The data source will still fail if no users are found. Defaults to false.
     */
    ignoreMissing?: boolean;
    /**
     * The email aliases of the Azure AD Users.
     */
    mailNicknames?: string[];
    /**
     * The Object IDs of the Azure AD Users.
     */
    objectIds?: string[];
    /**
     * The User Principal Names of the Azure AD Users.
     */
    userPrincipalNames?: string[];
}
/**
 * A collection of values returned by getUsers.
 */
export interface GetUsersResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ignoreMissing?: boolean;
    /**
     * The email aliases of the Azure AD Users.
     */
    readonly mailNicknames: string[];
    /**
     * The Object IDs of the Azure AD Users.
     */
    readonly objectIds: string[];
    /**
     * The User Principal Names of the Azure AD Users.
     */
    readonly userPrincipalNames: string[];
    /**
     * A list of Azure AD Users. Each `user` object provides the attributes documented below.
     */
    readonly users: outputs.GetUsersUser[];
}
